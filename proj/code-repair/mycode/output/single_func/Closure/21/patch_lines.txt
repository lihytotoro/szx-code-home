 boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);  boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());  if (parent.getType() == Token.COMMA) {    if (isResultUsed) {      return;    }    if (n == parent.getLastChild()) {      for (Node an : parent.getAncestors()) {        int ancestorType = an.getType();        if (ancestorType == Token.COMMA) continue;        if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;        else break;      }    }  } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {    if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {      return;