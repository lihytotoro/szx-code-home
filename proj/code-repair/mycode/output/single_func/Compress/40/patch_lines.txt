   final long bitsOut;    while (bitsCachedSize < count) {        final long nextByte = in.read();        if (nextByte < 0) {            return nextByte;        }        if (byteOrder == ByteOrder.LITTLE_ENDIAN) {            bitsCached |= (nextByte << bitsCachedSize);        } else {            bitsCached <<= 8;            bitsCached |= nextByte;        }        bitsCachedSize += 8;    }    if (byteOrder == ByteOrder.LITTLE_ENDIAN) {        bitsOut = (bitsCached & MASKS[count]);        bitsCached >>>= count;    } else {        bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];    }    bitsCachedSize -= count;