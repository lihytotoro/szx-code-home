 The bug in the function is that it is not correctly updating the row start location when the input buffer is extended. The function should update the row start location to be the new start of the input buffer, rather than the old end of the input buffer.

Here is the corrected version of the function:
```
public void feedInput(byte[] buf, int start, int end) throws IOException
{
    // Must not have remaining input
    if (_inputPtr < _inputEnd) {
        _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
    }
    if (end < start) {
        _reportError("Input end (%d) may not be before start (%d)", end, start);
    }
    // and shouldn't have been marked as end-of-input
    if (_endOfInput) {
        _reportError("Already closed, can not feed more input");
    }
    // Time to update pointers first
    _currInputProcessed += _origBufferLen;

    // Update row start location
    _currInputRowStart = start;

    // And then update buffer settings
    _inputBuffer = buf;
    _inputPtr = start;
    _inputEnd = end;
    _origBufferLen = end - start;
}
```
With this correction, the test should pass.