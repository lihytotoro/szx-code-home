   if (a0 >= overflow) {        throw new FractionConversionException(value, a0, 1l);    }    if (FastMath.abs(a0 - value) < epsilon) {        this.numerator = (int) a0;        this.denominator = 1;        return;    }    long p0 = 1;    long q0 = 0;    long p1 = a0;    long q1 = 1;    long p2 = 0;    long q2 = 1;    int n = 0;    boolean stop = false;    do {        ++n;        double r1 = 1.0 / (r0 - a0);        long a1 = (long)FastMath.floor(r1);        p2 = (a1 * p1) + p0;        q2 = (a1 * q1) + q0;        if ((p2 >= overflow) || (q2 >= overflow)) {