{
  "gmp_13420-13421": {
    "buggy": "mpn_powm (mp_ptr rp, mp_srcptr bp, mp_size_t bn,\n\t  mp_srcptr ep, mp_size_t en,\n\t  mp_srcptr mp, mp_size_t n, mp_ptr tp)\n{\n  mp_limb_t ip[2], *mip;\n  int cnt;\n  mp_bitcnt_t ebi;\n  int windowsize, this_windowsize;\n  mp_limb_t expbits;\n  mp_ptr pp, this_pp;\n  mp_ptr b2p;\n  long i;\n  TMP_DECL;\n\n  ASSERT (en > 1 || (en == 1 && ep[0] > 1));\n  ASSERT (n >= 1 && ((mp[0] & 1) != 0));\n\n  TMP_MARK;\n\n  count_leading_zeros (cnt, ep[en - 1]);\n  ebi = (mp_bitcnt_t) en * GMP_LIMB_BITS - cnt;\n\n#if 0\n  if (bn < n)\n    {\n      /* Do the first few exponent bits without mod reductions,\n\t until the result is greater than the mod argument.  */\n      for (;;)\n\t{\n\t  mpn_sqr (tp, this_pp, tn);\n\t  tn = tn * 2 - 1,  tn += tp[tn] != 0;\n\t  if (getbit (ep, ebi) != 0)\n\t    mpn_mul (..., tp, tn, bp, bn);\n\t  ebi--;\n\t}\n    }\n#endif\n\n  windowsize = win_size (ebi);\n\n#if WANT_REDC_2\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n    {\n      mip = ip;\n      binvert_limb (mip[0], mp[0]);\n      mip[0] = -mip[0];\n    }\n  else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n    {\n      mip = ip;\n      mpn_binvert (mip, mp, 2, tp);\n      mip[0] = -mip[0]; mip[1] = ~mip[1];\n    }\n#else\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n    {\n      mip = ip;\n      binvert_limb (mip[0], mp[0]);\n      mip[0] = -mip[0];\n    }\n#endif\n  else\n    {\n      mip = TMP_ALLOC_LIMBS (n);\n      mpn_binvert (mip, mp, n, tp);\n    }\n\n  pp = TMP_ALLOC_LIMBS (n << (windowsize - 1));\n\n  this_pp = pp;\n  redcify (this_pp, bp, bn, mp, n);\n\n  b2p = tp + 2*n;\n\n  /* Store b^2 in b2.  */\n  mpn_sqr (tp, this_pp, n);\n#if WANT_REDC_2\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n    mpn_redc_1 (b2p, tp, mp, n, mip[0]);\n  else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n    mpn_redc_2 (b2p, tp, mp, n, mip);\n#else\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n    mpn_redc_1 (b2p, tp, mp, n, mip[0]);\n#endif\n  else\n    mpn_redc_n (b2p, tp, mp, n, mip);\n\n  /* Precompute odd powers of b and put them in the temporary area at pp.  */\n  for (i = (1 << (windowsize - 1)) - 1; i > 0; i--)\n    {\n      mpn_mul_n (tp, this_pp, b2p, n);\n      this_pp += n;\n#if WANT_REDC_2\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n\tmpn_redc_1 (this_pp, tp, mp, n, mip[0]);\n      else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n\tmpn_redc_2 (this_pp, tp, mp, n, mip);\n#else\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n\tmpn_redc_1 (this_pp, tp, mp, n, mip[0]);\n#endif\n      else\n\tmpn_redc_n (this_pp, tp, mp, n, mip);\n    }\n\n  expbits = getbits (ep, ebi, windowsize);\n  if (ebi < windowsize)\n    ebi = 0;\n  else\n    ebi -= windowsize;\n\n  count_trailing_zeros (cnt, expbits);\n  ebi += cnt;\n  expbits >>= cnt;\n\n  MPN_COPY (rp, pp + n * (expbits >> 1), n);\n\n#define INNERLOOP\t\t\t\t\t\t\t\\\n  while (ebi != 0)\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\t\\\n      while (getbit (ep, ebi) == 0)\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  MPN_SQR (tp, rp, n);\t\t\t\t\t\t\\\n\t  MPN_REDUCE (rp, tp, mp, n, mip);\t\t\t\t\\\n\t  ebi--;\t\t\t\t\t\t\t\\\n\t  if (ebi == 0)\t\t\t\t\t\t\t\\\n\t    goto done;\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      /* The next bit of the exponent is 1.  Now extract the largest\t\\\n\t block of bits <= windowsize, and such that the least\t\t\\\n\t significant bit is 1.  */\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      expbits = getbits (ep, ebi, windowsize);\t\t\t\t\\\n      this_windowsize = windowsize;\t\t\t\t\t\\\n      if (ebi < windowsize)\t\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  this_windowsize -= windowsize - ebi;\t\t\t\t\\\n\t  ebi = 0;\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n        ebi -= windowsize;\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      count_trailing_zeros (cnt, expbits);\t\t\t\t\\\n      this_windowsize -= cnt;\t\t\t\t\t\t\\\n      ebi += cnt;\t\t\t\t\t\t\t\\\n      expbits >>= cnt;\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      do\t\t\t\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  MPN_SQR (tp, rp, n);\t\t\t\t\t\t\\\n\t  MPN_REDUCE (rp, tp, mp, n, mip);\t\t\t\t\\\n\t  this_windowsize--;\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n      while (this_windowsize != 0);\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      MPN_MUL_N (tp, rp, pp + n * (expbits >> 1), n);\t\t\t\\\n      MPN_REDUCE (rp, tp, mp, n, mip);\t\t\t\t\t\\\n    }\n\n\n#if WANT_REDC_2\n  if (REDC_1_TO_REDC_2_THRESHOLD < MUL_TOOM22_THRESHOLD)\n    {\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_2 (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_2 (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n  else\n    {\n      if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_2 (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n\n#else  /* WANT_REDC_2 */\n\n  if (REDC_1_TO_REDC_N_THRESHOLD < MUL_TOOM22_THRESHOLD)\n    {\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n  else\n    {\n      if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n#endif  /* WANT_REDC_2 */\n\n done:\n\n  MPN_COPY (tp, rp, n);\n  MPN_ZERO (tp + n, n);\n\n#if WANT_REDC_2\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n    mpn_redc_1 (rp, tp, mp, n, mip[0]);\n  else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n    mpn_redc_2 (rp, tp, mp, n, mip);\n#else\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n    mpn_redc_1 (rp, tp, mp, n, mip[0]);\n#endif\n  else\n    mpn_redc_n (rp, tp, mp, n, mip);\n\n  if (mpn_cmp (rp, mp, n) >= 0)\n    mpn_sub_n (rp, rp, mp, n);\n\n  TMP_FREE;\n}",
    "start": 140,
    "end": 481,
    "fix": "mpn_powm (mp_ptr rp, mp_srcptr bp, mp_size_t bn,\n\t  mp_srcptr ep, mp_size_t en,\n\t  mp_srcptr mp, mp_size_t n, mp_ptr tp)\n{\n  mp_limb_t ip[2], *mip;\n  int cnt;\n  mp_bitcnt_t ebi;\n  int windowsize, this_windowsize;\n  mp_limb_t expbits;\n  mp_ptr pp, this_pp;\n  long i;\n  TMP_DECL;\n\n  ASSERT (en > 1 || (en == 1 && ep[0] > 1));\n  ASSERT (n >= 1 && ((mp[0] & 1) != 0));\n\n  TMP_MARK;\n\n  count_leading_zeros (cnt, ep[en - 1]);\n  ebi = (mp_bitcnt_t) en * GMP_LIMB_BITS - cnt;\n\n#if 0\n  if (bn < n)\n    {\n      /* Do the first few exponent bits without mod reductions,\n\t until the result is greater than the mod argument.  */\n      for (;;)\n\t{\n\t  mpn_sqr (tp, this_pp, tn);\n\t  tn = tn * 2 - 1,  tn += tp[tn] != 0;\n\t  if (getbit (ep, ebi) != 0)\n\t    mpn_mul (..., tp, tn, bp, bn);\n\t  ebi--;\n\t}\n    }\n#endif\n\n  windowsize = win_size (ebi);\n\n#if WANT_REDC_2\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n    {\n      mip = ip;\n      binvert_limb (mip[0], mp[0]);\n      mip[0] = -mip[0];\n    }\n  else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n    {\n      mip = ip;\n      mpn_binvert (mip, mp, 2, tp);\n      mip[0] = -mip[0]; mip[1] = ~mip[1];\n    }\n#else\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n    {\n      mip = ip;\n      binvert_limb (mip[0], mp[0]);\n      mip[0] = -mip[0];\n    }\n#endif\n  else\n    {\n      mip = TMP_ALLOC_LIMBS (n);\n      mpn_binvert (mip, mp, n, tp);\n    }\n\n  pp = TMP_ALLOC_LIMBS (n << (windowsize - 1));\n\n  this_pp = pp;\n  redcify (this_pp, bp, bn, mp, n);\n\n  /* Store b^2 at rp.  */\n  mpn_sqr (tp, this_pp, n);\n#if WANT_REDC_2\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n    mpn_redc_1 (rp, tp, mp, n, mip[0]);\n  else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n    mpn_redc_2 (rp, tp, mp, n, mip);\n#else\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n    mpn_redc_1 (rp, tp, mp, n, mip[0]);\n#endif\n  else\n    mpn_redc_n (rp, tp, mp, n, mip);\n\n  /* Precompute odd powers of b and put them in the temporary area at pp.  */\n  for (i = (1 << (windowsize - 1)) - 1; i > 0; i--)\n    {\n      mpn_mul_n (tp, this_pp, rp, n);\n      this_pp += n;\n#if WANT_REDC_2\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n\tmpn_redc_1 (this_pp, tp, mp, n, mip[0]);\n      else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n\tmpn_redc_2 (this_pp, tp, mp, n, mip);\n#else\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n\tmpn_redc_1 (this_pp, tp, mp, n, mip[0]);\n#endif\n      else\n\tmpn_redc_n (this_pp, tp, mp, n, mip);\n    }\n\n  expbits = getbits (ep, ebi, windowsize);\n  if (ebi < windowsize)\n    ebi = 0;\n  else\n    ebi -= windowsize;\n\n  count_trailing_zeros (cnt, expbits);\n  ebi += cnt;\n  expbits >>= cnt;\n\n  MPN_COPY (rp, pp + n * (expbits >> 1), n);\n\n#define INNERLOOP\t\t\t\t\t\t\t\\\n  while (ebi != 0)\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\t\\\n      while (getbit (ep, ebi) == 0)\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  MPN_SQR (tp, rp, n);\t\t\t\t\t\t\\\n\t  MPN_REDUCE (rp, tp, mp, n, mip);\t\t\t\t\\\n\t  ebi--;\t\t\t\t\t\t\t\\\n\t  if (ebi == 0)\t\t\t\t\t\t\t\\\n\t    goto done;\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      /* The next bit of the exponent is 1.  Now extract the largest\t\\\n\t block of bits <= windowsize, and such that the least\t\t\\\n\t significant bit is 1.  */\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      expbits = getbits (ep, ebi, windowsize);\t\t\t\t\\\n      this_windowsize = windowsize;\t\t\t\t\t\\\n      if (ebi < windowsize)\t\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  this_windowsize -= windowsize - ebi;\t\t\t\t\\\n\t  ebi = 0;\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n        ebi -= windowsize;\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      count_trailing_zeros (cnt, expbits);\t\t\t\t\\\n      this_windowsize -= cnt;\t\t\t\t\t\t\\\n      ebi += cnt;\t\t\t\t\t\t\t\\\n      expbits >>= cnt;\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      do\t\t\t\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  MPN_SQR (tp, rp, n);\t\t\t\t\t\t\\\n\t  MPN_REDUCE (rp, tp, mp, n, mip);\t\t\t\t\\\n\t  this_windowsize--;\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n      while (this_windowsize != 0);\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n      MPN_MUL_N (tp, rp, pp + n * (expbits >> 1), n);\t\t\t\\\n      MPN_REDUCE (rp, tp, mp, n, mip);\t\t\t\t\t\\\n    }\n\n\n#if WANT_REDC_2\n  if (REDC_1_TO_REDC_2_THRESHOLD < MUL_TOOM22_THRESHOLD)\n    {\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_2 (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_2 (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n  else\n    {\n      if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_2 (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n\n#else  /* WANT_REDC_2 */\n\n  if (REDC_1_TO_REDC_N_THRESHOLD < MUL_TOOM22_THRESHOLD)\n    {\n      if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n  else\n    {\n      if (BELOW_THRESHOLD (n, MUL_TOOM22_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_basecase (r,a,n,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr_basecase (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_1 (rp, tp, mp, n, mip[0])\n\t  INNERLOOP;\n\t}\n      else\n\t{\n#undef MPN_MUL_N\n#undef MPN_SQR\n#undef MPN_REDUCE\n#define MPN_MUL_N(r,a,b,n)\t\tmpn_mul_n (r,a,b,n)\n#define MPN_SQR(r,a,n)\t\t\tmpn_sqr (r,a,n)\n#define MPN_REDUCE(rp,tp,mp,n,mip)\tmpn_redc_n (rp, tp, mp, n, mip)\n\t  INNERLOOP;\n\t}\n    }\n#endif  /* WANT_REDC_2 */\n\n done:\n\n  MPN_COPY (tp, rp, n);\n  MPN_ZERO (tp + n, n);\n\n#if WANT_REDC_2\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_2_THRESHOLD))\n    mpn_redc_1 (rp, tp, mp, n, mip[0]);\n  else if (BELOW_THRESHOLD (n, REDC_2_TO_REDC_N_THRESHOLD))\n    mpn_redc_2 (rp, tp, mp, n, mip);\n#else\n  if (BELOW_THRESHOLD (n, REDC_1_TO_REDC_N_THRESHOLD))\n    mpn_redc_1 (rp, tp, mp, n, mip[0]);\n#endif\n  else\n    mpn_redc_n (rp, tp, mp, n, mip);\n\n  if (mpn_cmp (rp, mp, n) >= 0)\n    mpn_sub_n (rp, rp, mp, n);\n\n  TMP_FREE;\n}",
    "filename": "mpn/generic/powm.c"
  },
  "gmp_14166-14167": {
    "buggy": "mpz_gcdext (mpz_ptr g, mpz_ptr s, mpz_ptr t, mpz_srcptr a, mpz_srcptr b)\n{\n  mp_size_t asize, bsize;\n  mp_srcptr ap, bp;\n  mp_ptr tmp_ap, tmp_bp;\n  mp_size_t gsize, ssize, tmp_ssize;\n  mp_ptr gp, sp, tmp_gp, tmp_sp;\n  __mpz_struct stmp, gtmp;\n  TMP_DECL;\n\n  /* mpn_gcdext requires that U >= V.  Therefore, we often have to swap U and\n     V.  This in turn leads to a lot of complications.  The computed cofactor\n     will be the wrong one, so we have to fix that up at the end.  */\n\n  asize = ABS (SIZ (a));\n  bsize = ABS (SIZ (b));\n  ap = PTR (a);\n  bp = PTR (b);\n\n  if (asize < bsize || (asize == bsize && mpn_cmp (ap, bp, asize) < 0))\n    {\n      MPZ_SRCPTR_SWAP (a, b);\n      MPN_SRCPTR_SWAP (ap, asize, bp, bsize);\n      MPZ_PTR_SWAP (s, t);\n    }\n\n  if (bsize == 0)    \n    {\n      /* g = |a|, s = sign(a), t = 0. */\n      ssize = SIZ (a) >= 0 ? 1 : -1;\n\n      if (ALLOC (g) < asize)\n\t_mpz_realloc (g, asize);\n      gp = PTR (g);\n      MPN_COPY (gp, ap, asize);\n      SIZ (g) = asize;\n\n      if (t != NULL)\n\tSIZ (t) = 0;\n      if (s != NULL)\n\t{\n\t  SIZ (s) = ssize;\n\t  PTR (s)[0] = 1;\n\t}\n      return;\n    }\n\n  TMP_MARK;\n\n  tmp_ap = TMP_ALLOC_LIMBS (asize);\n  tmp_bp = TMP_ALLOC_LIMBS (bsize);\n  MPN_COPY (tmp_ap, ap, asize);\n  MPN_COPY (tmp_bp, bp, bsize);\n  \n  tmp_gp = TMP_ALLOC_LIMBS (bsize);\n  tmp_sp = TMP_ALLOC_LIMBS (bsize);\n\n  gsize = mpn_gcdext (tmp_gp, tmp_sp, &tmp_ssize, tmp_ap, asize, tmp_bp, bsize);\n\n  ssize = ABS (tmp_ssize);\n\n  PTR (&gtmp) = tmp_gp;\n  SIZ (&gtmp) = gsize;\n\n  PTR (&stmp) = tmp_sp;\n  SIZ (&stmp) = (tmp_ssize ^ SIZ (a)) >= 0 ? ssize : -ssize;\n\n  if (t != NULL)\n    {\n      mpz_t x;\n      MPZ_TMP_INIT (x, ssize + asize + 1);\n      mpz_mul (x, &stmp, a);\n      mpz_sub (x, &gtmp, x);\n      mpz_divexact (t, x, b);\n    }\n\n  if (s != NULL)\n    {\n      if (ALLOC (s) < ssize)\n\t_mpz_realloc (s, ssize);\n      sp = PTR (s);\n      MPN_COPY (sp, tmp_sp, ssize);\n      SIZ (s) = SIZ (&stmp);\n    }\n\n  if (ALLOC (g) < gsize)\n    _mpz_realloc (g, gsize);\n  gp = PTR (g);\n  MPN_COPY (gp, tmp_gp, gsize);\n  SIZ (g) = gsize;\n\n  TMP_FREE;\n}",
    "start": 27,
    "end": 119,
    "fix": "mpz_gcdext (mpz_ptr g, mpz_ptr s, mpz_ptr t, mpz_srcptr a, mpz_srcptr b)\n{\n  mp_size_t asize, bsize;\n  mp_srcptr ap, bp;\n  mp_ptr tmp_ap, tmp_bp;\n  mp_size_t gsize, ssize, tmp_ssize;\n  mp_ptr gp, sp, tmp_gp, tmp_sp;\n  __mpz_struct stmp, gtmp;\n  TMP_DECL;\n\n  /* mpn_gcdext requires that U >= V.  Therefore, we often have to swap U and\n     V.  This in turn leads to a lot of complications.  The computed cofactor\n     will be the wrong one, so we have to fix that up at the end.  */\n\n  asize = ABS (SIZ (a));\n  bsize = ABS (SIZ (b));\n  ap = PTR (a);\n  bp = PTR (b);\n\n  if (asize < bsize || (asize == bsize && mpn_cmp (ap, bp, asize) < 0))\n    {\n      MPZ_SRCPTR_SWAP (a, b);\n      MPN_SRCPTR_SWAP (ap, asize, bp, bsize);\n      MPZ_PTR_SWAP (s, t);\n    }\n\n  if (bsize == 0)\n    {\n      /* g = |a|, s = sgn(a), t = 0. */\n      ssize = SIZ (a) >= 0 ? (asize != 0) : -1;\n\n      if (ALLOC (g) < asize)\n\t_mpz_realloc (g, asize);\n      gp = PTR (g);\n      MPN_COPY (gp, ap, asize);\n      SIZ (g) = asize;\n\n      if (t != NULL)\n\tSIZ (t) = 0;\n      if (s != NULL)\n\t{\n\t  SIZ (s) = ssize;\n\t  PTR (s)[0] = 1;\n\t}\n      return;\n    }\n\n  TMP_MARK;\n\n  tmp_ap = TMP_ALLOC_LIMBS (asize);\n  tmp_bp = TMP_ALLOC_LIMBS (bsize);\n  MPN_COPY (tmp_ap, ap, asize);\n  MPN_COPY (tmp_bp, bp, bsize);\n\n  tmp_gp = TMP_ALLOC_LIMBS (bsize);\n  tmp_sp = TMP_ALLOC_LIMBS (bsize);\n\n  gsize = mpn_gcdext (tmp_gp, tmp_sp, &tmp_ssize, tmp_ap, asize, tmp_bp, bsize);\n\n  ssize = ABS (tmp_ssize);\n\n  PTR (&gtmp) = tmp_gp;\n  SIZ (&gtmp) = gsize;\n\n  PTR (&stmp) = tmp_sp;\n  SIZ (&stmp) = (tmp_ssize ^ SIZ (a)) >= 0 ? ssize : -ssize;\n\n  if (t != NULL)\n    {\n      mpz_t x;\n      MPZ_TMP_INIT (x, ssize + asize + 1);\n      mpz_mul (x, &stmp, a);\n      mpz_sub (x, &gtmp, x);\n      mpz_divexact (t, x, b);\n    }\n\n  if (s != NULL)\n    {\n      if (ALLOC (s) < ssize)\n\t_mpz_realloc (s, ssize);\n      sp = PTR (s);\n      MPN_COPY (sp, tmp_sp, ssize);\n      SIZ (s) = SIZ (&stmp);\n    }\n\n  if (ALLOC (g) < gsize)\n    _mpz_realloc (g, gsize);\n  gp = PTR (g);\n  MPN_COPY (gp, tmp_gp, gsize);\n  SIZ (g) = gsize;\n\n  TMP_FREE;\n}",
    "filename": "mpz/gcdext.c"
  },
  "gzip_2009-08-16-3fe0caeada-39a362ae9d": {
    "buggy": "int huft_build(b, n, s, d, e, t, m)\nunsigned *b;            /* code lengths in bits (all assumed <= BMAX) */\nunsigned n;             /* number of codes (assumed <= N_MAX) */\nunsigned s;             /* number of simple-valued codes (0..s-1) */\nush *d;                 /* list of base values for non-simple codes */\nush *e;                 /* list of extra bits for non-simple codes */\nstruct huft **t;        /* result: starting table */\nint *m;                 /* maximum lookup bits, returns actual */\n/* Given a list of code lengths and a maximum table size, make a set of\n   tables to decode that set of codes.  Return zero on success, one if\n   the given code set is incomplete (the tables are still built in this\n   case), two if the input is invalid (all zero length codes or an\n   oversubscribed set of lengths), and three if not enough memory. */\n{\n  unsigned a;                   /* counter for codes of length k */\n  unsigned c[BMAX+1];           /* bit length count table */\n  unsigned f;                   /* i repeats in table every f entries */\n  int g;                        /* maximum code length */\n  int h;                        /* table level */\n  register unsigned i;          /* counter, current code */\n  register unsigned j;          /* counter */\n  register int k;               /* number of bits in current code */\n  int l;                        /* bits per table (returned in m) */\n  register unsigned *p;         /* pointer into c[], b[], or v[] */\n  register struct huft *q;      /* points to current table */\n  struct huft r;                /* table entry for structure assignment */\n  struct huft *u[BMAX];         /* table stack */\n  unsigned v[N_MAX];            /* values in order of bit length */\n  register int w;               /* bits before this table == (l * h) */\n  unsigned x[BMAX+1];           /* bit offsets, then code stack */\n  unsigned *xp;                 /* pointer into x */\n  int y;                        /* number of dummy codes added */\n  unsigned z;                   /* number of entries in current table */\n\n\n  /* Generate counts for each bit length */\n  memzero(c, sizeof(c));\n  p = b;  i = n;\n  do {\n    Tracecv(*p, (stderr, (n-i >= ' ' && n-i <= '~' ? \"%c %d\\n\" : \"0x%x %d\\n\"),\n\t    n-i, *p));\n    c[*p]++;                    /* assume all entries <= BMAX */\n    p++;                      /* Can't combine with above line (Solaris bug) */\n  } while (--i);\n  if (c[0] == n)                /* null input--all zero length codes */\n  {\n    q = (struct huft *) malloc (2 * sizeof *q);\n    if (!q)\n      return 3;\n    hufts += 2;\n    q[0].v.t = (struct huft *) NULL;\n    q[1].e = 99;    /* invalid code marker */\n    q[1].b = 1;\n    *t = q + 1;\n    *m = 1;\n    return 0;\n  }\n\n\n  /* Find minimum and maximum length, bound *m by those */\n  l = *m;\n  for (j = 1; j <= BMAX; j++)\n    if (c[j])\n      break;\n  k = j;                        /* minimum code length */\n  if ((unsigned)l < j)\n    l = j;\n  for (i = BMAX; i; i--)\n    if (c[i])\n      break;\n  g = i;                        /* maximum code length */\n  if ((unsigned)l > i)\n    l = i;\n  *m = l;\n\n\n  /* Adjust last length count to fill out codes, if needed */\n  for (y = 1 << j; j < i; j++, y <<= 1)\n    if ((y -= c[j]) < 0)\n      return 2;                 /* bad input: more codes than bits */\n  if ((y -= c[i]) < 0)\n    return 2;\n  c[i] += y;\n\n\n  /* Generate starting offsets into the value table for each length */\n  x[1] = j = 0;\n  p = c + 1;  xp = x + 2;\n  while (--i) {                 /* note that i == g from above */\n    *xp++ = (j += *p++);\n  }\n\n\n  /* Make a table of values in order of bit lengths */\n  p = b;  i = 0;\n  do {\n    if ((j = *p++) != 0)\n      v[x[j]++] = i;\n  } while (++i < n);\n  n = x[g];                   /* set n to length of v */\n\n\n  /* Generate the Huffman codes and for each, make the table entries */\n  x[0] = i = 0;                 /* first Huffman code is zero */\n  p = v;                        /* grab values in bit order */\n  h = -1;                       /* no tables yet--level -1 */\n  w = -l;                       /* bits decoded == (l * h) */\n  u[0] = (struct huft *)NULL;   /* just to keep compilers happy */\n  q = (struct huft *)NULL;      /* ditto */\n  z = 0;                        /* ditto */\n\n  /* go through the bit lengths (k already is bits in shortest code) */\n  for (; k <= g; k++)\n  {\n    a = c[k];\n    while (a--)\n    {\n      /* here i is the Huffman code of length k bits for value *p */\n      /* make tables up to required level */\n      while (k > w + l)\n      {\n        h++;\n        w += l;                 /* previous table always l bits */\n\n        /* compute minimum size table less than or equal to l bits */\n        z = (z = g - w) > (unsigned)l ? l : z;  /* upper limit on table size */\n        if ((f = 1 << (j = k - w)) > a + 1)     /* try a k-w bit table */\n        {                       /* too few codes for k-w bit table */\n          f -= a + 1;           /* deduct codes from patterns left */\n          xp = c + k;\n\t  if (j < z)\n\t    while (++j < z)       /* try smaller tables up to z bits */\n\t    {\n\t      if ((f <<= 1) <= *++xp)\n\t\tbreak;            /* enough codes to use up j bits */\n\t      f -= *xp;           /* else deduct codes from patterns */\n\t    }\n        }\n        z = 1 << j;             /* table entries for j-bit table */\n\n        /* allocate and link in new table */\n        if ((q = (struct huft *)malloc((z + 1)*sizeof(struct huft))) ==\n            (struct huft *)NULL)\n        {\n          if (h)\n            huft_free(u[0]);\n          return 3;             /* not enough memory */\n        }\n        hufts += z + 1;         /* track memory usage */\n        *t = q + 1;             /* link to list for huft_free() */\n        *(t = &(q->v.t)) = (struct huft *)NULL;\n        u[h] = ++q;             /* table starts after link */\n\n        /* connect to last table, if there is one */\n        if (h)\n        {\n          x[h] = i;             /* save pattern for backing up */\n          r.b = (uch)l;         /* bits to dump before this table */\n          r.e = (uch)(16 + j);  /* bits in this table */\n          r.v.t = q;            /* pointer to this table */\n          j = i >> (w - l);     /* (get around Turbo C bug) */\n          u[h-1][j] = r;        /* connect to last table */\n        }\n      }\n\n      /* set up table entry in r */\n      r.b = (uch)(k - w);\n      if (p >= v + n)\n        r.e = 99;               /* out of values--invalid code */\n      else if (*p < s)\n      {\n        r.e = (uch)(*p < 256 ? 16 : 15);    /* 256 is end-of-block code */\n        r.v.n = (ush)(*p);             /* simple code is just the value */\n\tp++;                           /* one compiler does not like *p++ */\n      }\n      else\n      {\n        r.e = (uch)e[*p - s];   /* non-simple--look up in lists */\n        r.v.n = d[*p++ - s];\n      }\n\n      /* fill code-like entries with r */\n      f = 1 << (k - w);\n      for (j = i >> w; j < z; j += f)\n        q[j] = r;\n\n      /* backwards increment the k-bit code i */\n      for (j = 1 << (k - 1); i & j; j >>= 1)\n        i ^= j;\n      i ^= j;\n\n      /* backup over finished tables */\n      while ((i & ((1 << w) - 1)) != x[h])\n      {\n        h--;                    /* don't need to update q */\n        w -= l;\n      }\n    }\n  }\n\n\n  /* Return true (1) if we were given an incomplete table */\n  return y != 0 && g != 1;\n}",
    "start": 292,
    "end": 495,
    "fix": "int huft_build(b, n, s, d, e, t, m)\nunsigned *b;            /* code lengths in bits (all assumed <= BMAX) */\nunsigned n;             /* number of codes (assumed <= N_MAX) */\nunsigned s;             /* number of simple-valued codes (0..s-1) */\nush *d;                 /* list of base values for non-simple codes */\nush *e;                 /* list of extra bits for non-simple codes */\nstruct huft **t;        /* result: starting table */\nint *m;                 /* maximum lookup bits, returns actual */\n/* Given a list of code lengths and a maximum table size, make a set of\n   tables to decode that set of codes.  Return zero on success, one if\n   the given code set is incomplete (the tables are still built in this\n   case), two if the input is invalid (all zero length codes or an\n   oversubscribed set of lengths), and three if not enough memory. */\n{\n  unsigned a;                   /* counter for codes of length k */\n  unsigned c[BMAX+1];           /* bit length count table */\n  unsigned f;                   /* i repeats in table every f entries */\n  int g;                        /* maximum code length */\n  int h;                        /* table level */\n  register unsigned i;          /* counter, current code */\n  register unsigned j;          /* counter */\n  register int k;               /* number of bits in current code */\n  int l;                        /* bits per table (returned in m) */\n  register unsigned *p;         /* pointer into c[], b[], or v[] */\n  register struct huft *q;      /* points to current table */\n  struct huft r;                /* table entry for structure assignment */\n  struct huft *u[BMAX];         /* table stack */\n  unsigned v[N_MAX];            /* values in order of bit length */\n  register int w;               /* bits before this table == (l * h) */\n  unsigned x[BMAX+1];           /* bit offsets, then code stack */\n  unsigned *xp;                 /* pointer into x */\n  int y;                        /* number of dummy codes added */\n  unsigned z;                   /* number of entries in current table */\n\n\n  /* Generate counts for each bit length */\n  memzero(c, sizeof(c));\n  p = b;  i = n;\n  do {\n    Tracecv(*p, (stderr, (n-i >= ' ' && n-i <= '~' ? \"%c %d\\n\" : \"0x%x %d\\n\"),\n\t    n-i, *p));\n    c[*p]++;                    /* assume all entries <= BMAX */\n    p++;                      /* Can't combine with above line (Solaris bug) */\n  } while (--i);\n  if (c[0] == n)                /* null input--all zero length codes */\n  {\n    q = (struct huft *) malloc (3 * sizeof *q);\n    if (!q)\n      return 3;\n    hufts += 3;\n    q[0].v.t = (struct huft *) NULL;\n    q[1].e = 99;    /* invalid code marker */\n    q[1].b = 1;\n    q[2].e = 99;    /* invalid code marker */\n    q[2].b = 1;\n    *t = q + 1;\n    *m = 1;\n    return 0;\n  }\n\n\n  /* Find minimum and maximum length, bound *m by those */\n  l = *m;\n  for (j = 1; j <= BMAX; j++)\n    if (c[j])\n      break;\n  k = j;                        /* minimum code length */\n  if ((unsigned)l < j)\n    l = j;\n  for (i = BMAX; i; i--)\n    if (c[i])\n      break;\n  g = i;                        /* maximum code length */\n  if ((unsigned)l > i)\n    l = i;\n  *m = l;\n\n\n  /* Adjust last length count to fill out codes, if needed */\n  for (y = 1 << j; j < i; j++, y <<= 1)\n    if ((y -= c[j]) < 0)\n      return 2;                 /* bad input: more codes than bits */\n  if ((y -= c[i]) < 0)\n    return 2;\n  c[i] += y;\n\n\n  /* Generate starting offsets into the value table for each length */\n  x[1] = j = 0;\n  p = c + 1;  xp = x + 2;\n  while (--i) {                 /* note that i == g from above */\n    *xp++ = (j += *p++);\n  }\n\n\n  /* Make a table of values in order of bit lengths */\n  p = b;  i = 0;\n  do {\n    if ((j = *p++) != 0)\n      v[x[j]++] = i;\n  } while (++i < n);\n  n = x[g];                   /* set n to length of v */\n\n\n  /* Generate the Huffman codes and for each, make the table entries */\n  x[0] = i = 0;                 /* first Huffman code is zero */\n  p = v;                        /* grab values in bit order */\n  h = -1;                       /* no tables yet--level -1 */\n  w = -l;                       /* bits decoded == (l * h) */\n  u[0] = (struct huft *)NULL;   /* just to keep compilers happy */\n  q = (struct huft *)NULL;      /* ditto */\n  z = 0;                        /* ditto */\n\n  /* go through the bit lengths (k already is bits in shortest code) */\n  for (; k <= g; k++)\n  {\n    a = c[k];\n    while (a--)\n    {\n      /* here i is the Huffman code of length k bits for value *p */\n      /* make tables up to required level */\n      while (k > w + l)\n      {\n        h++;\n        w += l;                 /* previous table always l bits */\n\n        /* compute minimum size table less than or equal to l bits */\n        z = (z = g - w) > (unsigned)l ? l : z;  /* upper limit on table size */\n        if ((f = 1 << (j = k - w)) > a + 1)     /* try a k-w bit table */\n        {                       /* too few codes for k-w bit table */\n          f -= a + 1;           /* deduct codes from patterns left */\n          xp = c + k;\n\t  if (j < z)\n\t    while (++j < z)       /* try smaller tables up to z bits */\n\t    {\n\t      if ((f <<= 1) <= *++xp)\n\t\tbreak;            /* enough codes to use up j bits */\n\t      f -= *xp;           /* else deduct codes from patterns */\n\t    }\n        }\n        z = 1 << j;             /* table entries for j-bit table */\n\n        /* allocate and link in new table */\n        if ((q = (struct huft *)malloc((z + 1)*sizeof(struct huft))) ==\n            (struct huft *)NULL)\n        {\n          if (h)\n            huft_free(u[0]);\n          return 3;             /* not enough memory */\n        }\n        hufts += z + 1;         /* track memory usage */\n        *t = q + 1;             /* link to list for huft_free() */\n        *(t = &(q->v.t)) = (struct huft *)NULL;\n        u[h] = ++q;             /* table starts after link */\n\n        /* connect to last table, if there is one */\n        if (h)\n        {\n          x[h] = i;             /* save pattern for backing up */\n          r.b = (uch)l;         /* bits to dump before this table */\n          r.e = (uch)(16 + j);  /* bits in this table */\n          r.v.t = q;            /* pointer to this table */\n          j = i >> (w - l);     /* (get around Turbo C bug) */\n          u[h-1][j] = r;        /* connect to last table */\n        }\n      }\n\n      /* set up table entry in r */\n      r.b = (uch)(k - w);\n      if (p >= v + n)\n        r.e = 99;               /* out of values--invalid code */\n      else if (*p < s)\n      {\n        r.e = (uch)(*p < 256 ? 16 : 15);    /* 256 is end-of-block code */\n        r.v.n = (ush)(*p);             /* simple code is just the value */\n\tp++;                           /* one compiler does not like *p++ */\n      }\n      else\n      {\n        r.e = (uch)e[*p - s];   /* non-simple--look up in lists */\n        r.v.n = d[*p++ - s];\n      }\n\n      /* fill code-like entries with r */\n      f = 1 << (k - w);\n      for (j = i >> w; j < z; j += f)\n        q[j] = r;\n\n      /* backwards increment the k-bit code i */\n      for (j = 1 << (k - 1); i & j; j >>= 1)\n        i ^= j;\n      i ^= j;\n\n      /* backup over finished tables */\n      while ((i & ((1 << w) - 1)) != x[h])\n      {\n        h--;                    /* don't need to update q */\n        w -= l;\n      }\n    }\n  }\n\n\n  /* Return true (1) if we were given an incomplete table */\n  return y != 0 && g != 1;\n}",
    "filename": "inflate.c"
  },
  "gzip_2009-09-26-a1d3d4019d-f17cbd13a1": {
    "buggy": "local void treat_stdin()\n{\n    if (!force && !list &&\n\tisatty(fileno((FILE *)(decompress ? stdin : stdout)))) {\n\t/* Do not send compressed data to the terminal or read it from\n\t * the terminal. We get here when user invoked the program\n\t * without parameters, so be helpful. According to the GNU standards:\n\t *\n\t *   If there is one behavior you think is most useful when the output\n\t *   is to a terminal, and another that you think is most useful when\n\t *   the output is a file or a pipe, then it is usually best to make\n\t *   the default behavior the one that is useful with output to a\n\t *   terminal, and have an option for the other behavior.\n\t *\n\t * Here we use the --force option to get the other behavior.\n\t */\n\tfprintf(stderr,\n    \"%s: compressed data not %s a terminal. Use -f to force %scompression.\\n\",\n\t\tprogram_name, decompress ? \"read from\" : \"written to\",\n\t\tdecompress ? \"de\" : \"\");\n\tfprintf (stderr, \"For help, type: %s -h\\n\", program_name);\n\tdo_exit(ERROR);\n    }\n\n    if (decompress || !ascii) {\n\tSET_BINARY_MODE(fileno(stdin));\n    }\n    if (!test && !list && (!decompress || !ascii)) {\n\tSET_BINARY_MODE(fileno(stdout));\n    }\n    strcpy(ifname, \"stdin\");\n    strcpy(ofname, \"stdout\");\n\n    /* Get the file's time stamp and size.  */\n    if (fstat (fileno (stdin), &istat) != 0)\n      {\n\tprogerror (\"standard input\");\n\tdo_exit (ERROR);\n      }\n    ifile_size = S_ISREG (istat.st_mode) ? istat.st_size : -1;\n    time_stamp.tv_nsec = -1;\n    if (!no_time || list)\n      time_stamp = get_stat_mtime (&istat);\n\n    clear_bufs(); /* clear input and output buffers */\n    to_stdout = 1;\n    part_nb = 0;\n\n    if (decompress) {\n\tmethod = get_method(ifd);\n\tif (method < 0) {\n\t    do_exit(exit_code); /* error message already emitted */\n\t}\n    }\n    if (list) {\n        do_list(ifd, method);\n        return;\n    }\n\n    /* Actually do the compression/decompression. Loop over zipped members.\n     */\n    for (;;) {\n\tif ((*work)(fileno(stdin), fileno(stdout)) != OK) return;\n\n\tif (input_eof ())\n\t  break;\n\n\tmethod = get_method(ifd);\n\tif (method < 0) return; /* error message already emitted */\n\tbytes_out = 0;            /* required for length check */\n    }\n\n    if (verbose) {\n\tif (test) {\n\t    fprintf(stderr, \" OK\\n\");\n\n\t} else if (!decompress) {\n\t    display_ratio(bytes_in-(bytes_out-header_bytes), bytes_in, stderr);\n\t    fprintf(stderr, \"\\n\");\n#ifdef DISPLAY_STDIN_RATIO\n\t} else {\n\t    display_ratio(bytes_out-(bytes_in-header_bytes), bytes_out,stderr);\n\t    fprintf(stderr, \"\\n\");\n#endif\n\t}\n    }\n}",
    "start": 606,
    "end": 692,
    "fix": "local void treat_stdin()\n{\n    if (!force && !list &&\n\tisatty(fileno((FILE *)(decompress ? stdin : stdout)))) {\n\t/* Do not send compressed data to the terminal or read it from\n\t * the terminal. We get here when user invoked the program\n\t * without parameters, so be helpful. According to the GNU standards:\n\t *\n\t *   If there is one behavior you think is most useful when the output\n\t *   is to a terminal, and another that you think is most useful when\n\t *   the output is a file or a pipe, then it is usually best to make\n\t *   the default behavior the one that is useful with output to a\n\t *   terminal, and have an option for the other behavior.\n\t *\n\t * Here we use the --force option to get the other behavior.\n\t */\n\tfprintf(stderr,\n    \"%s: compressed data not %s a terminal. Use -f to force %scompression.\\n\",\n\t\tprogram_name, decompress ? \"read from\" : \"written to\",\n\t\tdecompress ? \"de\" : \"\");\n\tfprintf (stderr, \"For help, type: %s -h\\n\", program_name);\n\tdo_exit(ERROR);\n    }\n\n    if (decompress || !ascii) {\n\tSET_BINARY_MODE(fileno(stdin));\n    }\n    if (!test && !list && (!decompress || !ascii)) {\n\tSET_BINARY_MODE(fileno(stdout));\n    }\n    strcpy(ifname, \"stdin\");\n    strcpy(ofname, \"stdout\");\n\n    /* Get the file's time stamp and size.  */\n    if (fstat (fileno (stdin), &istat) != 0)\n      {\n\tprogerror (\"standard input\");\n\tdo_exit (ERROR);\n      }\n    ifile_size = S_ISREG (istat.st_mode) ? istat.st_size : -1;\n    time_stamp.tv_nsec = -1;\n    if (!no_time || list)\n      time_stamp = get_stat_mtime (&istat);\n\n    clear_bufs(); /* clear input and output buffers */\n    to_stdout = 1;\n    part_nb = 0;\n    ifd = fileno(stdin);\n\n    if (decompress) {\n\tmethod = get_method(ifd);\n\tif (method < 0) {\n\t    do_exit(exit_code); /* error message already emitted */\n\t}\n    }\n    if (list) {\n        do_list(ifd, method);\n        return;\n    }\n\n    /* Actually do the compression/decompression. Loop over zipped members.\n     */\n    for (;;) {\n\tif ((*work)(fileno(stdin), fileno(stdout)) != OK) return;\n\n\tif (input_eof ())\n\t  break;\n\n\tmethod = get_method(ifd);\n\tif (method < 0) return; /* error message already emitted */\n\tbytes_out = 0;            /* required for length check */\n    }\n\n    if (verbose) {\n\tif (test) {\n\t    fprintf(stderr, \" OK\\n\");\n\n\t} else if (!decompress) {\n\t    display_ratio(bytes_in-(bytes_out-header_bytes), bytes_in, stderr);\n\t    fprintf(stderr, \"\\n\");\n#ifdef DISPLAY_STDIN_RATIO\n\t} else {\n\t    display_ratio(bytes_out-(bytes_in-header_bytes), bytes_out,stderr);\n\t    fprintf(stderr, \"\\n\");\n#endif\n\t}\n    }\n}",
    "filename": "gzip.c"
  },
  "gzip_2009-10-09-1a085b1446-118a107f2d": {
    "buggy": "local int get_method(in)\n    int in;        /* input file descriptor */\n{\n    uch flags;     /* compression flags */\n    char magic[2]; /* magic header */\n    int imagic1;   /* like magic[1], but can represent EOF */\n    ulg stamp;     /* time stamp */\n\n    /* If --force and --stdout, zcat == cat, so do not complain about\n     * premature end of file: use try_byte instead of get_byte.\n     */\n    if (force && to_stdout) {\n\tmagic[0] = (char)try_byte();\n\timagic1 = try_byte ();\n\tmagic[1] = (char) imagic1;\n\t/* If try_byte returned EOF, magic[1] == (char) EOF.  */\n    } else {\n\tmagic[0] = (char)get_byte();\n\tmagic[1] = (char)get_byte();\n\timagic1 = 0; /* avoid lint warning */\n    }\n    method = -1;                 /* unknown yet */\n    part_nb++;                   /* number of parts in gzip file */\n    header_bytes = 0;\n    last_member = RECORD_IO;\n    /* assume multiple members in gzip file except for record oriented I/O */\n\n    if (memcmp(magic, GZIP_MAGIC, 2) == 0\n        || memcmp(magic, OLD_GZIP_MAGIC, 2) == 0) {\n\n\tmethod = (int)get_byte();\n\tif (method != DEFLATED) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s: unknown method %d -- not supported\\n\",\n\t\t    program_name, ifname, method);\n\t    exit_code = ERROR;\n\t    return -1;\n\t}\n\twork = unzip;\n\tflags  = (uch)get_byte();\n\n\tif ((flags & ENCRYPTED) != 0) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s is encrypted -- not supported\\n\",\n\t\t    program_name, ifname);\n\t    exit_code = ERROR;\n\t    return -1;\n\t}\n\tif ((flags & CONTINUATION) != 0) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s is a multi-part gzip file -- not supported\\n\",\n\t\t    program_name, ifname);\n\t    exit_code = ERROR;\n\t    if (force <= 1) return -1;\n\t}\n\tif ((flags & RESERVED) != 0) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s has flags 0x%x -- not supported\\n\",\n\t\t    program_name, ifname, flags);\n\t    exit_code = ERROR;\n\t    if (force <= 1) return -1;\n\t}\n\tstamp  = (ulg)get_byte();\n\tstamp |= ((ulg)get_byte()) << 8;\n\tstamp |= ((ulg)get_byte()) << 16;\n\tstamp |= ((ulg)get_byte()) << 24;\n\tif (stamp != 0 && !no_time)\n\t  {\n\t    time_stamp.tv_sec = stamp;\n\t    time_stamp.tv_nsec = 0;\n\t  }\n\n\t(void)get_byte();  /* Ignore extra flags for the moment */\n\t(void)get_byte();  /* Ignore OS type for the moment */\n\n\tif ((flags & CONTINUATION) != 0) {\n\t    unsigned part = (unsigned)get_byte();\n\t    part |= ((unsigned)get_byte())<<8;\n\t    if (verbose) {\n\t\tfprintf(stderr,\"%s: %s: part number %u\\n\",\n\t\t\tprogram_name, ifname, part);\n\t    }\n\t}\n\tif ((flags & EXTRA_FIELD) != 0) {\n\t    unsigned len = (unsigned)get_byte();\n\t    len |= ((unsigned)get_byte())<<8;\n\t    if (verbose) {\n\t\tfprintf(stderr,\"%s: %s: extra field of %u bytes ignored\\n\",\n\t\t\tprogram_name, ifname, len);\n\t    }\n\t    while (len--) (void)get_byte();\n\t}\n\n\t/* Get original file name if it was truncated */\n\tif ((flags & ORIG_NAME) != 0) {\n\t    if (no_name || (to_stdout && !list) || part_nb > 1) {\n\t\t/* Discard the old name */\n\t\tchar c; /* dummy used for NeXTstep 3.0 cc optimizer bug */\n\t\tdo {c=get_byte();} while (c != 0);\n\t    } else {\n\t\t/* Copy the base name. Keep a directory prefix intact. */\n                char *p = gzip_base_name (ofname);\n                char *base = p;\n\t\tfor (;;) {\n\t\t    *p = (char)get_char();\n\t\t    if (*p++ == '\\0') break;\n\t\t    if (p >= ofname+sizeof(ofname)) {\n\t\t\tgzip_error (\"corrupted input -- file name too large\");\n\t\t    }\n\t\t}\n\t\tp = gzip_base_name (base);\n\t\tmemmove (base, p, strlen (p) + 1);\n                /* If necessary, adapt the name to local OS conventions: */\n                if (!list) {\n                   MAKE_LEGAL_NAME(base);\n\t\t   if (base) list=0; /* avoid warning about unused variable */\n                }\n\t    } /* no_name || to_stdout */\n\t} /* ORIG_NAME */\n\n\t/* Discard file comment if any */\n\tif ((flags & COMMENT) != 0) {\n\t    while (get_char() != 0) /* null */ ;\n\t}\n\tif (part_nb == 1) {\n\t    header_bytes = inptr + 2*sizeof(long); /* include crc and size */\n\t}\n\n    } else if (memcmp(magic, PKZIP_MAGIC, 2) == 0 && inptr == 2\n\t    && memcmp((char*)inbuf, PKZIP_MAGIC, 4) == 0) {\n\t/* To simplify the code, we support a zip file when alone only.\n         * We are thus guaranteed that the entire local header fits in inbuf.\n         */\n        inptr = 0;\n\twork = unzip;\n\tif (check_zipfile(in) != OK) return -1;\n\t/* check_zipfile may get ofname from the local header */\n\tlast_member = 1;\n\n    } else if (memcmp(magic, PACK_MAGIC, 2) == 0) {\n\twork = unpack;\n\tmethod = PACKED;\n\n    } else if (memcmp(magic, LZW_MAGIC, 2) == 0) {\n\twork = unlzw;\n\tmethod = COMPRESSED;\n\tlast_member = 1;\n\n    } else if (memcmp(magic, LZH_MAGIC, 2) == 0) {\n\twork = unlzh;\n\tmethod = LZHED;\n\tlast_member = 1;\n\n    } else if (force && to_stdout && !list) { /* pass input unchanged */\n\tmethod = STORED;\n\twork = copy;\n        inptr = 0;\n\tlast_member = 1;\n    }\n    if (method >= 0) return method;\n\n    if (part_nb == 1) {\n\tfprintf (stderr, \"\\n%s: %s: not in gzip format\\n\",\n\t\t program_name, ifname);\n\texit_code = ERROR;\n\treturn -1;\n    } else {\n\tif (magic[0] == 0)\n\t  {\n\t    int inbyte;\n\t    for (inbyte = imagic1;  inbyte == 0;  inbyte = try_byte ())\n\t      continue;\n\t    if (inbyte == EOF)\n\t      {\n\t\tif (verbose)\n\t\t  WARN ((stderr, \"\\n%s: %s: decompression OK, trailing zero bytes ignored\\n\",\n\t\t\t program_name, ifname));\n\t\treturn -3;\n\t      }\n\t  }\n\n\tWARN((stderr, \"\\n%s: %s: decompression OK, trailing garbage ignored\\n\",\n\t      program_name, ifname));\n\treturn -2;\n    }\n}",
    "start": 1251,
    "end": 1436,
    "fix": "local int get_method(in)\n    int in;        /* input file descriptor */\n{\n    uch flags;     /* compression flags */\n    char magic[2]; /* magic header */\n    int imagic1;   /* like magic[1], but can represent EOF */\n    ulg stamp;     /* time stamp */\n\n    /* If --force and --stdout, zcat == cat, so do not complain about\n     * premature end of file: use try_byte instead of get_byte.\n     */\n    if (force && to_stdout) {\n\tmagic[0] = (char)try_byte();\n\timagic1 = try_byte ();\n\tmagic[1] = (char) imagic1;\n\t/* If try_byte returned EOF, magic[1] == (char) EOF.  */\n    } else {\n\tmagic[0] = (char)get_byte();\n\tif (magic[0]) {\n\t    magic[1] = (char)get_byte();\n\t    imagic1 = 0; /* avoid lint warning */\n\t} else {\n\t    imagic1 = try_byte ();\n\t    magic[1] = (char) imagic1;\n\t}\n    }\n    method = -1;                 /* unknown yet */\n    part_nb++;                   /* number of parts in gzip file */\n    header_bytes = 0;\n    last_member = RECORD_IO;\n    /* assume multiple members in gzip file except for record oriented I/O */\n\n    if (memcmp(magic, GZIP_MAGIC, 2) == 0\n        || memcmp(magic, OLD_GZIP_MAGIC, 2) == 0) {\n\n\tmethod = (int)get_byte();\n\tif (method != DEFLATED) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s: unknown method %d -- not supported\\n\",\n\t\t    program_name, ifname, method);\n\t    exit_code = ERROR;\n\t    return -1;\n\t}\n\twork = unzip;\n\tflags  = (uch)get_byte();\n\n\tif ((flags & ENCRYPTED) != 0) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s is encrypted -- not supported\\n\",\n\t\t    program_name, ifname);\n\t    exit_code = ERROR;\n\t    return -1;\n\t}\n\tif ((flags & CONTINUATION) != 0) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s is a multi-part gzip file -- not supported\\n\",\n\t\t    program_name, ifname);\n\t    exit_code = ERROR;\n\t    if (force <= 1) return -1;\n\t}\n\tif ((flags & RESERVED) != 0) {\n\t    fprintf(stderr,\n\t\t    \"%s: %s has flags 0x%x -- not supported\\n\",\n\t\t    program_name, ifname, flags);\n\t    exit_code = ERROR;\n\t    if (force <= 1) return -1;\n\t}\n\tstamp  = (ulg)get_byte();\n\tstamp |= ((ulg)get_byte()) << 8;\n\tstamp |= ((ulg)get_byte()) << 16;\n\tstamp |= ((ulg)get_byte()) << 24;\n\tif (stamp != 0 && !no_time)\n\t  {\n\t    time_stamp.tv_sec = stamp;\n\t    time_stamp.tv_nsec = 0;\n\t  }\n\n\t(void)get_byte();  /* Ignore extra flags for the moment */\n\t(void)get_byte();  /* Ignore OS type for the moment */\n\n\tif ((flags & CONTINUATION) != 0) {\n\t    unsigned part = (unsigned)get_byte();\n\t    part |= ((unsigned)get_byte())<<8;\n\t    if (verbose) {\n\t\tfprintf(stderr,\"%s: %s: part number %u\\n\",\n\t\t\tprogram_name, ifname, part);\n\t    }\n\t}\n\tif ((flags & EXTRA_FIELD) != 0) {\n\t    unsigned len = (unsigned)get_byte();\n\t    len |= ((unsigned)get_byte())<<8;\n\t    if (verbose) {\n\t\tfprintf(stderr,\"%s: %s: extra field of %u bytes ignored\\n\",\n\t\t\tprogram_name, ifname, len);\n\t    }\n\t    while (len--) (void)get_byte();\n\t}\n\n\t/* Get original file name if it was truncated */\n\tif ((flags & ORIG_NAME) != 0) {\n\t    if (no_name || (to_stdout && !list) || part_nb > 1) {\n\t\t/* Discard the old name */\n\t\tchar c; /* dummy used for NeXTstep 3.0 cc optimizer bug */\n\t\tdo {c=get_byte();} while (c != 0);\n\t    } else {\n\t\t/* Copy the base name. Keep a directory prefix intact. */\n                char *p = gzip_base_name (ofname);\n                char *base = p;\n\t\tfor (;;) {\n\t\t    *p = (char)get_char();\n\t\t    if (*p++ == '\\0') break;\n\t\t    if (p >= ofname+sizeof(ofname)) {\n\t\t\tgzip_error (\"corrupted input -- file name too large\");\n\t\t    }\n\t\t}\n\t\tp = gzip_base_name (base);\n\t\tmemmove (base, p, strlen (p) + 1);\n                /* If necessary, adapt the name to local OS conventions: */\n                if (!list) {\n                   MAKE_LEGAL_NAME(base);\n\t\t   if (base) list=0; /* avoid warning about unused variable */\n                }\n\t    } /* no_name || to_stdout */\n\t} /* ORIG_NAME */\n\n\t/* Discard file comment if any */\n\tif ((flags & COMMENT) != 0) {\n\t    while (get_char() != 0) /* null */ ;\n\t}\n\tif (part_nb == 1) {\n\t    header_bytes = inptr + 2*sizeof(long); /* include crc and size */\n\t}\n\n    } else if (memcmp(magic, PKZIP_MAGIC, 2) == 0 && inptr == 2\n\t    && memcmp((char*)inbuf, PKZIP_MAGIC, 4) == 0) {\n\t/* To simplify the code, we support a zip file when alone only.\n         * We are thus guaranteed that the entire local header fits in inbuf.\n         */\n        inptr = 0;\n\twork = unzip;\n\tif (check_zipfile(in) != OK) return -1;\n\t/* check_zipfile may get ofname from the local header */\n\tlast_member = 1;\n\n    } else if (memcmp(magic, PACK_MAGIC, 2) == 0) {\n\twork = unpack;\n\tmethod = PACKED;\n\n    } else if (memcmp(magic, LZW_MAGIC, 2) == 0) {\n\twork = unlzw;\n\tmethod = COMPRESSED;\n\tlast_member = 1;\n\n    } else if (memcmp(magic, LZH_MAGIC, 2) == 0) {\n\twork = unlzh;\n\tmethod = LZHED;\n\tlast_member = 1;\n\n    } else if (force && to_stdout && !list) { /* pass input unchanged */\n\tmethod = STORED;\n\twork = copy;\n        inptr = 0;\n\tlast_member = 1;\n    }\n    if (method >= 0) return method;\n\n    if (part_nb == 1) {\n\tfprintf (stderr, \"\\n%s: %s: not in gzip format\\n\",\n\t\t program_name, ifname);\n\texit_code = ERROR;\n\treturn -1;\n    } else {\n\tif (magic[0] == 0)\n\t  {\n\t    int inbyte;\n\t    for (inbyte = imagic1;  inbyte == 0;  inbyte = try_byte ())\n\t      continue;\n\t    if (inbyte == EOF)\n\t      {\n\t\tif (verbose)\n\t\t  WARN ((stderr, \"\\n%s: %s: decompression OK, trailing zero bytes ignored\\n\",\n\t\t\t program_name, ifname));\n\t\treturn -3;\n\t      }\n\t  }\n\n\tWARN((stderr, \"\\n%s: %s: decompression OK, trailing garbage ignored\\n\",\n\t      program_name, ifname));\n\treturn -2;\n    }\n}",
    "filename": "gzip.c"
  },
  "gzip_2010-02-19-3eb6091d69-884ef6d16c": {
    "buggy": "int main (int argc, char **argv)\n{\n    int file_count;     /* number of files to process */\n    size_t proglen;     /* length of program_name */\n    int optc;           /* current option */\n\n    EXPAND(argc, argv); /* wild card expansion if necessary */\n\n    program_name = gzip_base_name (argv[0]);\n    proglen = strlen (program_name);\n\n    atexit (close_stdin);\n\n    /* Suppress .exe for MSDOS, OS/2 and VMS: */\n    if (4 < proglen && strequ (program_name + proglen - 4, \".exe\"))\n      program_name[proglen - 4] = '\\0';\n\n    /* Add options in GZIP environment variable if there is one */\n    env = add_envopt(&argc, &argv, OPTIONS_VAR);\n    if (env != NULL) args = argv;\n\n#ifndef GNU_STANDARD\n# define GNU_STANDARD 1\n#endif\n#if !GNU_STANDARD\n    /* For compatibility with old compress, use program name as an option.\n     * Unless you compile with -DGNU_STANDARD=0, this program will behave as\n     * gzip even if it is invoked under the name gunzip or zcat.\n     *\n     * Systems which do not support links can still use -d or -dc.\n     * Ignore an .exe extension for MSDOS, OS/2 and VMS.\n     */\n    if (strncmp (program_name, \"un\",  2) == 0     /* ungzip, uncompress */\n        || strncmp (program_name, \"gun\", 3) == 0) /* gunzip */\n        decompress = 1;\n    else if (strequ (program_name + 1, \"cat\")     /* zcat, pcat, gcat */\n             || strequ (program_name, \"gzcat\"))   /* gzcat */\n        decompress = to_stdout = 1;\n#endif\n\n    z_suffix = Z_SUFFIX;\n    z_len = strlen(z_suffix);\n\n    while ((optc = getopt_long (argc, argv, \"ab:cdfhH?lLmMnNqrS:tvVZ123456789\",\n                                longopts, (int *)0)) != -1) {\n        switch (optc) {\n        case 'a':\n            ascii = 1; break;\n        case 'b':\n            maxbits = atoi(optarg);\n            for (; *optarg; optarg++)\n              if (! ('0' <= *optarg && *optarg <= '9'))\n                {\n                  fprintf (stderr, \"%s: -b operand is not an integer\\n\",\n                           program_name);\n                  try_help ();\n                }\n            break;\n        case 'c':\n            to_stdout = 1; break;\n        case 'd':\n            decompress = 1; break;\n        case 'f':\n            force++; break;\n        case 'h': case 'H':\n            help(); do_exit(OK); break;\n        case 'l':\n            list = decompress = to_stdout = 1; break;\n        case 'L':\n            license(); do_exit(OK); break;\n        case 'm': /* undocumented, may change later */\n            no_time = 1; break;\n        case 'M': /* undocumented, may change later */\n            no_time = 0; break;\n        case 'n':\n            no_name = no_time = 1; break;\n        case 'N':\n            no_name = no_time = 0; break;\n        case PRESUME_INPUT_TTY_OPTION:\n            presume_input_tty = true; break;\n        case 'q':\n            quiet = 1; verbose = 0; break;\n        case 'r':\n#if NO_DIR\n            fprintf (stderr, \"%s: -r not supported on this system\\n\",\n                     program_name);\n            try_help ();\n#else\n            recursive = 1;\n#endif\n            break;\n        case 'S':\n#ifdef NO_MULTIPLE_DOTS\n            if (*optarg == '.') optarg++;\n#endif\n            z_len = strlen(optarg);\n            z_suffix = optarg;\n            break;\n        case 't':\n            test = decompress = to_stdout = 1;\n            break;\n        case 'v':\n            verbose++; quiet = 0; break;\n        case 'V':\n            version(); do_exit(OK); break;\n        case 'Z':\n#ifdef LZW\n            do_lzw = 1; break;\n#else\n            fprintf(stderr, \"%s: -Z not supported in this version\\n\",\n                    program_name);\n            try_help ();\n            break;\n#endif\n        case '1':  case '2':  case '3':  case '4':\n        case '5':  case '6':  case '7':  case '8':  case '9':\n            level = optc - '0';\n            break;\n        default:\n            /* Error message already emitted by getopt_long. */\n            try_help ();\n        }\n    } /* loop on all arguments */\n\n    /* By default, save name and timestamp on compression but do not\n     * restore them on decompression.\n     */\n    if (no_time < 0) no_time = decompress;\n    if (no_name < 0) no_name = decompress;\n\n    file_count = argc - optind;\n\n#if O_BINARY\n#else\n    if (ascii && !quiet) {\n        fprintf(stderr, \"%s: option --ascii ignored on this system\\n\",\n                program_name);\n    }\n#endif\n    if ((z_len == 0 && !decompress) || z_len > MAX_SUFFIX) {\n        fprintf(stderr, \"%s: incorrect suffix '%s'\\n\",\n                program_name, z_suffix);\n        do_exit(ERROR);\n    }\n    if (do_lzw && !decompress) work = lzw;\n\n    /* Allocate all global buffers (for DYN_ALLOC option) */\n    ALLOC(uch, inbuf,  INBUFSIZ +INBUF_EXTRA);\n    ALLOC(uch, outbuf, OUTBUFSIZ+OUTBUF_EXTRA);\n    ALLOC(ush, d_buf,  DIST_BUFSIZE);\n    ALLOC(uch, window, 2L*WSIZE);\n#ifndef MAXSEG_64K\n    ALLOC(ush, tab_prefix, 1L<<BITS);\n#else\n    ALLOC(ush, tab_prefix0, 1L<<(BITS-1));\n    ALLOC(ush, tab_prefix1, 1L<<(BITS-1));\n#endif\n\n    exiting_signal = quiet ? SIGPIPE : 0;\n    install_signal_handlers ();\n\n    /* And get to work */\n    if (file_count != 0) {\n        if (to_stdout && !test && !list && (!decompress || !ascii)) {\n            SET_BINARY_MODE(fileno(stdout));\n        }\n        while (optind < argc) {\n            treat_file(argv[optind++]);\n        }\n    } else {  /* Standard input */\n        treat_stdin();\n    }\n    if (list && !quiet && file_count > 1) {\n        do_list(-1, -1); /* print totals */\n    }\n    do_exit(exit_code);\n    return exit_code; /* just to avoid lint warning */\n}",
    "start": 407,
    "end": 584,
    "fix": "int main (int argc, char **argv)\n{\n    int file_count;     /* number of files to process */\n    size_t proglen;     /* length of program_name */\n    int optc;           /* current option */\n\n    EXPAND(argc, argv); /* wild card expansion if necessary */\n\n    program_name = gzip_base_name (argv[0]);\n    proglen = strlen (program_name);\n\n    atexit (close_stdin);\n\n    /* Suppress .exe for MSDOS, OS/2 and VMS: */\n    if (4 < proglen && strequ (program_name + proglen - 4, \".exe\"))\n      program_name[proglen - 4] = '\\0';\n\n    /* Add options in GZIP environment variable if there is one */\n    env = add_envopt(&argc, &argv, OPTIONS_VAR);\n    if (env != NULL) args = argv;\n\n#ifndef GNU_STANDARD\n# define GNU_STANDARD 1\n#endif\n#if !GNU_STANDARD\n    /* For compatibility with old compress, use program name as an option.\n     * Unless you compile with -DGNU_STANDARD=0, this program will behave as\n     * gzip even if it is invoked under the name gunzip or zcat.\n     *\n     * Systems which do not support links can still use -d or -dc.\n     * Ignore an .exe extension for MSDOS, OS/2 and VMS.\n     */\n    if (strncmp (program_name, \"un\",  2) == 0     /* ungzip, uncompress */\n        || strncmp (program_name, \"gun\", 3) == 0) /* gunzip */\n        decompress = 1;\n    else if (strequ (program_name + 1, \"cat\")     /* zcat, pcat, gcat */\n             || strequ (program_name, \"gzcat\"))   /* gzcat */\n        decompress = to_stdout = 1;\n#endif\n\n    z_suffix = Z_SUFFIX;\n    z_len = strlen(z_suffix);\n\n    while ((optc = getopt_long (argc, argv, \"ab:cdfhH?lLmMnNqrS:tvVZ123456789\",\n                                longopts, (int *)0)) != -1) {\n        switch (optc) {\n        case 'a':\n            ascii = 1; break;\n        case 'b':\n            maxbits = atoi(optarg);\n            for (; *optarg; optarg++)\n              if (! ('0' <= *optarg && *optarg <= '9'))\n                {\n                  fprintf (stderr, \"%s: -b operand is not an integer\\n\",\n                           program_name);\n                  try_help ();\n                }\n            break;\n        case 'c':\n            to_stdout = 1; break;\n        case 'd':\n            decompress = 1; break;\n        case 'f':\n            force++; break;\n        case 'h': case 'H':\n            help(); do_exit(OK); break;\n        case 'l':\n            list = decompress = to_stdout = 1; break;\n        case 'L':\n            license(); do_exit(OK); break;\n        case 'm': /* undocumented, may change later */\n            no_time = 1; break;\n        case 'M': /* undocumented, may change later */\n            no_time = 0; break;\n        case 'n':\n            no_name = no_time = 1; break;\n        case 'N':\n            no_name = no_time = 0; break;\n        case PRESUME_INPUT_TTY_OPTION:\n            presume_input_tty = true; break;\n        case 'q':\n            quiet = 1; verbose = 0; break;\n        case 'r':\n#if NO_DIR\n            fprintf (stderr, \"%s: -r not supported on this system\\n\",\n                     program_name);\n            try_help ();\n#else\n            recursive = 1;\n#endif\n            break;\n        case 'S':\n#ifdef NO_MULTIPLE_DOTS\n            if (*optarg == '.') optarg++;\n#endif\n            z_len = strlen(optarg);\n            z_suffix = optarg;\n            break;\n        case 't':\n            test = decompress = to_stdout = 1;\n            break;\n        case 'v':\n            verbose++; quiet = 0; break;\n        case 'V':\n            version(); do_exit(OK); break;\n        case 'Z':\n#ifdef LZW\n            do_lzw = 1; break;\n#else\n            fprintf(stderr, \"%s: -Z not supported in this version\\n\",\n                    program_name);\n            try_help ();\n            break;\n#endif\n        case '1':  case '2':  case '3':  case '4':\n        case '5':  case '6':  case '7':  case '8':  case '9':\n            level = optc - '0';\n            break;\n        default:\n            /* Error message already emitted by getopt_long. */\n            try_help ();\n        }\n    } /* loop on all arguments */\n\n    /* By default, save name and timestamp on compression but do not\n     * restore them on decompression.\n     */\n    if (no_time < 0) no_time = decompress;\n    if (no_name < 0) no_name = decompress;\n\n    file_count = argc - optind;\n\n#if O_BINARY\n#else\n    if (ascii && !quiet) {\n        fprintf(stderr, \"%s: option --ascii ignored on this system\\n\",\n                program_name);\n    }\n#endif\n    if (z_len == 0 || z_len > MAX_SUFFIX) {\n        fprintf(stderr, \"%s: invalid suffix '%s'\\n\", program_name, z_suffix);\n        do_exit(ERROR);\n    }\n\n    if (do_lzw && !decompress) work = lzw;\n\n    /* Allocate all global buffers (for DYN_ALLOC option) */\n    ALLOC(uch, inbuf,  INBUFSIZ +INBUF_EXTRA);\n    ALLOC(uch, outbuf, OUTBUFSIZ+OUTBUF_EXTRA);\n    ALLOC(ush, d_buf,  DIST_BUFSIZE);\n    ALLOC(uch, window, 2L*WSIZE);\n#ifndef MAXSEG_64K\n    ALLOC(ush, tab_prefix, 1L<<BITS);\n#else\n    ALLOC(ush, tab_prefix0, 1L<<(BITS-1));\n    ALLOC(ush, tab_prefix1, 1L<<(BITS-1));\n#endif\n\n    exiting_signal = quiet ? SIGPIPE : 0;\n    install_signal_handlers ();\n\n    /* And get to work */\n    if (file_count != 0) {\n        if (to_stdout && !test && !list && (!decompress || !ascii)) {\n            SET_BINARY_MODE(fileno(stdout));\n        }\n        while (optind < argc) {\n            treat_file(argv[optind++]);\n        }\n    } else {  /* Standard input */\n        treat_stdin();\n    }\n    if (list && !quiet && file_count > 1) {\n        do_list(-1, -1); /* print totals */\n    }\n    do_exit(exit_code);\n    return exit_code; /* just to avoid lint warning */\n}",
    "filename": "gzip.c"
  },
  "libtiff_2005-12-21-3b848a7-3edb9cd": {
    "buggy": "TIFFReadDirectory(TIFF* tif)\n{\n\tstatic const char module[] = \"TIFFReadDirectory\";\n\n\tint n;\n\tTIFFDirectory* td;\n\tTIFFDirEntry *dp, *dir = NULL;\n\tuint16 iv;\n\tuint32 v;\n\tconst TIFFFieldInfo* fip;\n\tsize_t fix;\n\tuint16 dircount;\n\ttoff_t nextdiroff;\n\tchar* cp;\n\tint diroutoforderwarning = 0;\n\ttoff_t* new_dirlist;\n\n\ttif->tif_diroff = tif->tif_nextdiroff;\n\tif (tif->tif_diroff == 0)\t\t/* no more directories */\n\t\treturn (0);\n\n\t/*\n\t * XXX: Trick to prevent IFD looping. The one can create TIFF file\n\t * with looped directory pointers. We will maintain a list of already\n\t * seen directories and check every IFD offset against this list.\n\t */\n\tfor (n = 0; n < tif->tif_dirnumber; n++) {\n\t\tif (tif->tif_dirlist[n] == tif->tif_diroff)\n\t\t\treturn (0);\n\t}\n\ttif->tif_dirnumber++;\n\tnew_dirlist = _TIFFrealloc(tif->tif_dirlist,\n\t\t\t\t   tif->tif_dirnumber * sizeof(toff_t));\n\tif (!new_dirlist) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t  \"%s: Failed to allocate space for IFD list\",\n\t\t\t  tif->tif_name);\n\t\treturn (0);\n\t}\n\ttif->tif_dirlist = new_dirlist;\n\ttif->tif_dirlist[tif->tif_dirnumber - 1] = tif->tif_diroff;\n\n\t/*\n\t * Cleanup any previous compression state.\n\t */\n\t(*tif->tif_cleanup)(tif);\n\ttif->tif_curdir++;\n\tnextdiroff = 0;\n\tif (!isMapped(tif)) {\n\t\tif (!SeekOK(tif, tif->tif_diroff)) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"%s: Seek error accessing TIFF directory\",\n                            tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t\tif (!ReadOK(tif, &dircount, sizeof (uint16))) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"%s: Can not read TIFF directory count\",\n                            tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t\tif (tif->tif_flags & TIFF_SWAB)\n\t\t\tTIFFSwabShort(&dircount);\n\t\tdir = (TIFFDirEntry *)_TIFFCheckMalloc(tif,\n\t\t\t\t\t\t  dircount,\n\t\t\t\t\t\t  sizeof (TIFFDirEntry),\n\t\t\t\t\t\t  \"to read TIFF directory\");\n\t\tif (dir == NULL)\n\t\t\treturn (0);\n\t\tif (!ReadOK(tif, dir, dircount*sizeof (TIFFDirEntry))) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n                                  \"%.100s: Can not read TIFF directory\",\n                                  tif->tif_name);\n\t\t\tgoto bad;\n\t\t}\n\t\t/*\n\t\t * Read offset to next directory for sequential scans.\n\t\t */\n\t\t(void) ReadOK(tif, &nextdiroff, sizeof (uint32));\n\t} else {\n\t\ttoff_t off = tif->tif_diroff;\n\n\t\tif (off + sizeof (uint16) > tif->tif_size) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"%s: Can not read TIFF directory count\",\n                            tif->tif_name);\n\t\t\treturn (0);\n\t\t} else\n\t\t\t_TIFFmemcpy(&dircount, tif->tif_base + off, sizeof (uint16));\n\t\toff += sizeof (uint16);\n\t\tif (tif->tif_flags & TIFF_SWAB)\n\t\t\tTIFFSwabShort(&dircount);\n\t\tdir = (TIFFDirEntry *)_TIFFCheckMalloc(tif,\n\t\t    dircount, sizeof (TIFFDirEntry), \"to read TIFF directory\");\n\t\tif (dir == NULL)\n\t\t\treturn (0);\n\t\tif (off + dircount*sizeof (TIFFDirEntry) > tif->tif_size) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n                                  \"%s: Can not read TIFF directory\",\n                                  tif->tif_name);\n\t\t\tgoto bad;\n\t\t} else {\n\t\t\t_TIFFmemcpy(dir, tif->tif_base + off,\n\t\t\t\t    dircount*sizeof (TIFFDirEntry));\n\t\t}\n\t\toff += dircount* sizeof (TIFFDirEntry);\n\t\tif (off + sizeof (uint32) <= tif->tif_size)\n\t\t\t_TIFFmemcpy(&nextdiroff, tif->tif_base+off, sizeof (uint32));\n\t}\n\tif (tif->tif_flags & TIFF_SWAB)\n\t\tTIFFSwabLong(&nextdiroff);\n\ttif->tif_nextdiroff = nextdiroff;\n\n\ttif->tif_flags &= ~TIFF_BEENWRITING;\t/* reset before new dir */\n\t/*\n\t * Setup default value and then make a pass over\n\t * the fields to check type and tag information,\n\t * and to extract info required to size data\n\t * structures.  A second pass is made afterwards\n\t * to read in everthing not taken in the first pass.\n\t */\n\ttd = &tif->tif_dir;\n\t/* free any old stuff and reinit */\n\tTIFFFreeDirectory(tif);\n\tTIFFDefaultDirectory(tif);\n\t/*\n\t * Electronic Arts writes gray-scale TIFF files\n\t * without a PlanarConfiguration directory entry.\n\t * Thus we setup a default value here, even though\n\t * the TIFF spec says there is no default value.\n\t */\n\tTIFFSetField(tif, TIFFTAG_PLANARCONFIG, PLANARCONFIG_CONTIG);\n\n\t/*\n\t * Sigh, we must make a separate pass through the\n\t * directory for the following reason:\n\t *\n\t * We must process the Compression tag in the first pass\n\t * in order to merge in codec-private tag definitions (otherwise\n\t * we may get complaints about unknown tags).  However, the\n\t * Compression tag may be dependent on the SamplesPerPixel\n\t * tag value because older TIFF specs permited Compression\n\t * to be written as a SamplesPerPixel-count tag entry.\n\t * Thus if we don't first figure out the correct SamplesPerPixel\n\t * tag value then we may end up ignoring the Compression tag\n\t * value because it has an incorrect count value (if the\n\t * true value of SamplesPerPixel is not 1).\n\t *\n\t * It sure would have been nice if Aldus had really thought\n\t * this stuff through carefully.\n\t */ \n\tfor (dp = dir, n = dircount; n > 0; n--, dp++) {\n\t\tif (tif->tif_flags & TIFF_SWAB) {\n\t\t\tTIFFSwabArrayOfShort(&dp->tdir_tag, 2);\n\t\t\tTIFFSwabArrayOfLong(&dp->tdir_count, 2);\n\t\t}\n\t\tif (dp->tdir_tag == TIFFTAG_SAMPLESPERPIXEL) {\n\t\t\tif (!TIFFFetchNormalTag(tif, dp))\n\t\t\t\tgoto bad;\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t}\n\t}\n\t/*\n\t * First real pass over the directory.\n\t */\n\tfix = 0;\n\tfor (dp = dir, n = dircount; n > 0; n--, dp++) {\n\n\t\tif (fix >= tif->tif_nfields || dp->tdir_tag == IGNORE)\n\t\t\tcontinue;\n               \n\t\t/*\n\t\t * Silicon Beach (at least) writes unordered\n\t\t * directory tags (violating the spec).  Handle\n\t\t * it here, but be obnoxious (maybe they'll fix it?).\n\t\t */\n\t\tif (dp->tdir_tag < tif->tif_fieldinfo[fix]->field_tag) {\n\t\t\tif (!diroutoforderwarning) {\n\t\t\t\tTIFFWarning(module,\n\"%s: invalid TIFF directory; tags are not sorted in ascending order\",\n                                            tif->tif_name);\n\t\t\t\tdiroutoforderwarning = 1;\n\t\t\t}\n\t\t\tfix = 0;\t\t\t/* O(n^2) */\n\t\t}\n\t\twhile (fix < tif->tif_nfields &&\n\t\t       tif->tif_fieldinfo[fix]->field_tag < dp->tdir_tag)\n\t\t\tfix++;\n\t\tif (fix >= tif->tif_nfields ||\n\t\t    tif->tif_fieldinfo[fix]->field_tag != dp->tdir_tag) {\n\n                    TIFFWarning(module,\n                        \"%s: unknown field with tag %d (0x%x) encountered\",\n                                tif->tif_name, dp->tdir_tag, dp->tdir_tag,\n                                dp->tdir_type);\n\n                    TIFFMergeFieldInfo( tif,\n                                        _TIFFCreateAnonFieldInfo( tif,\n                                              dp->tdir_tag,\n\t\t\t\t\t      (TIFFDataType) dp->tdir_type ),\n                                        1 );\n                    fix = 0;\n                    while (fix < tif->tif_nfields &&\n                           tif->tif_fieldinfo[fix]->field_tag < dp->tdir_tag)\n\t\t\tfix++;\n\t\t}\n\t\t/*\n\t\t * Null out old tags that we ignore.\n\t\t */\n\t\tif (tif->tif_fieldinfo[fix]->field_bit == FIELD_IGNORE) {\n\tignore:\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t\tcontinue;\n\t\t}\n\t\t/*\n\t\t * Check data type.\n\t\t */\n\t\tfip = tif->tif_fieldinfo[fix];\n\t\twhile (dp->tdir_type != (unsigned short) fip->field_type\n                       && fix < tif->tif_nfields) {\n\t\t\tif (fip->field_type == TIFF_ANY)\t/* wildcard */\n\t\t\t\tbreak;\n                        fip = tif->tif_fieldinfo[++fix];\n\t\t\tif (fix >= tif->tif_nfields ||\n\t\t\t    fip->field_tag != dp->tdir_tag) {\n\t\t\t\tTIFFWarning(module,\n\t\t\t\"%s: wrong data type %d for \\\"%s\\\"; tag ignored\",\n\t\t\t\t\t    tif->tif_name, dp->tdir_type,\n\t\t\t\t\t    tif->tif_fieldinfo[fix-1]->field_name);\n\t\t\t\tgoto ignore;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t * Check count if known in advance.\n\t\t */\n\t\tif (fip->field_readcount != TIFF_VARIABLE\n\t\t    && fip->field_readcount != TIFF_VARIABLE2) {\n\t\t\tuint32 expected = (fip->field_readcount == TIFF_SPP) ?\n\t\t\t    (uint32) td->td_samplesperpixel :\n\t\t\t    (uint32) fip->field_readcount;\n\t\t\tif (!CheckDirCount(tif, dp, expected))\n\t\t\t\tgoto ignore;\n\t\t}\n\n\t\tswitch (dp->tdir_tag) {\n\t\tcase TIFFTAG_COMPRESSION:\n\t\t\t/*\n\t\t\t * The 5.0 spec says the Compression tag has\n\t\t\t * one value, while earlier specs say it has\n\t\t\t * one value per sample.  Because of this, we\n\t\t\t * accept the tag if one value is supplied.\n\t\t\t */\n\t\t\tif (dp->tdir_count == 1) {\n\t\t\t\tv = TIFFExtractData(tif,\n\t\t\t\t    dp->tdir_type, dp->tdir_offset);\n\t\t\t\tif (!TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t\tbreak;\n\t\t\t/* XXX: workaround for broken TIFFs */\n\t\t\t} else if (dp->tdir_type == TIFF_LONG) {\n\t\t\t\tif (!TIFFFetchPerSampleLongs(tif, dp, &v) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t} else {\n\t\t\t\tif (!TIFFFetchPerSampleShorts(tif, dp, &iv)\n\t\t\t\t    || !TIFFSetField(tif, dp->tdir_tag, iv))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t\tbreak;\n\t\tcase TIFFTAG_STRIPOFFSETS:\n\t\tcase TIFFTAG_STRIPBYTECOUNTS:\n\t\tcase TIFFTAG_TILEOFFSETS:\n\t\tcase TIFFTAG_TILEBYTECOUNTS:\n\t\t\tTIFFSetFieldBit(tif, fip->field_bit);\n\t\t\tbreak;\n\t\tcase TIFFTAG_IMAGEWIDTH:\n\t\tcase TIFFTAG_IMAGELENGTH:\n\t\tcase TIFFTAG_IMAGEDEPTH:\n\t\tcase TIFFTAG_TILELENGTH:\n\t\tcase TIFFTAG_TILEWIDTH:\n\t\tcase TIFFTAG_TILEDEPTH:\n\t\tcase TIFFTAG_PLANARCONFIG:\n\t\tcase TIFFTAG_ROWSPERSTRIP:\n\t\tcase TIFFTAG_EXTRASAMPLES:\n\t\t\tif (!TIFFFetchNormalTag(tif, dp))\n\t\t\t\tgoto bad;\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Allocate directory structure and setup defaults.\n\t */\n\tif (!TIFFFieldSet(tif, FIELD_IMAGEDIMENSIONS)) {\n\t\tMissingRequired(tif, \"ImageLength\");\n\t\tgoto bad;\n\t}\n\tif (!TIFFFieldSet(tif, FIELD_PLANARCONFIG)) {\n\t\tMissingRequired(tif, \"PlanarConfiguration\");\n\t\tgoto bad;\n\t}\n\t/* \n \t * Setup appropriate structures (by strip or by tile)\n\t */\n\tif (!TIFFFieldSet(tif, FIELD_TILEDIMENSIONS)) {\n\t\ttd->td_nstrips = TIFFNumberOfStrips(tif);\n\t\ttd->td_tilewidth = td->td_imagewidth;\n\t\ttd->td_tilelength = td->td_rowsperstrip;\n\t\ttd->td_tiledepth = td->td_imagedepth;\n\t\ttif->tif_flags &= ~TIFF_ISTILED;\n\t} else {\n\t\ttd->td_nstrips = TIFFNumberOfTiles(tif);\n\t\ttif->tif_flags |= TIFF_ISTILED;\n\t}\n\tif (!td->td_nstrips) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero number of %s\",\n\t\t\t  tif->tif_name, isTiled(tif) ? \"tiles\" : \"strips\");\n\t\tgoto bad;\n\t}\n\ttd->td_stripsperimage = td->td_nstrips;\n\tif (td->td_planarconfig == PLANARCONFIG_SEPARATE)\n\t\ttd->td_stripsperimage /= td->td_samplesperpixel;\n\tif (!TIFFFieldSet(tif, FIELD_STRIPOFFSETS)) {\n\t\tMissingRequired(tif,\n\t\t    isTiled(tif) ? \"TileOffsets\" : \"StripOffsets\");\n\t\tgoto bad;\n\t}\n\n\t/*\n\t * Second pass: extract other information.\n\t */\n\tfor (dp = dir, n = dircount; n > 0; n--, dp++) {\n\t\tif (dp->tdir_tag == IGNORE)\n\t\t\tcontinue;\n\t\tswitch (dp->tdir_tag) {\n\t\tcase TIFFTAG_MINSAMPLEVALUE:\n\t\tcase TIFFTAG_MAXSAMPLEVALUE:\n\t\tcase TIFFTAG_BITSPERSAMPLE:\n\t\tcase TIFFTAG_DATATYPE:\n\t\tcase TIFFTAG_SAMPLEFORMAT:\n\t\t\t/*\n\t\t\t * The 5.0 spec says the Compression tag has\n\t\t\t * one value, while earlier specs say it has\n\t\t\t * one value per sample.  Because of this, we\n\t\t\t * accept the tag if one value is supplied.\n\t\t\t *\n                         * The MinSampleValue, MaxSampleValue, BitsPerSample\n                         * DataType and SampleFormat tags are supposed to be\n                         * written as one value/sample, but some vendors\n                         * incorrectly write one value only -- so we accept\n                         * that as well (yech). Other vendors write correct\n\t\t\t * value for NumberOfSamples, but incorrect one for\n\t\t\t * BitsPerSample and friends, and we will read this\n\t\t\t * too.\n\t\t\t */\n\t\t\tif (dp->tdir_count == 1) {\n\t\t\t\tv = TIFFExtractData(tif,\n\t\t\t\t    dp->tdir_type, dp->tdir_offset);\n\t\t\t\tif (!TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t/* XXX: workaround for broken TIFFs */\n\t\t\t} else if (dp->tdir_tag == TIFFTAG_BITSPERSAMPLE\n\t\t\t\t   && dp->tdir_type == TIFF_LONG) {\n\t\t\t\tif (!TIFFFetchPerSampleLongs(tif, dp, &v) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t} else {\n\t\t\t\tif (!TIFFFetchPerSampleShorts(tif, dp, &iv) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, iv))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_SMINSAMPLEVALUE:\n\t\tcase TIFFTAG_SMAXSAMPLEVALUE:\n\t\t\t{\n\t\t\t\tdouble dv = 0.0;\n\t\t\t\tif (!TIFFFetchPerSampleAnys(tif, dp, &dv) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, dv))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_STRIPOFFSETS:\n\t\tcase TIFFTAG_TILEOFFSETS:\n\t\t\tif (!TIFFFetchStripThing(tif, dp,\n\t\t\t    td->td_nstrips, &td->td_stripoffset))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase TIFFTAG_STRIPBYTECOUNTS:\n\t\tcase TIFFTAG_TILEBYTECOUNTS:\n\t\t\tif (!TIFFFetchStripThing(tif, dp,\n\t\t\t    td->td_nstrips, &td->td_stripbytecount))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase TIFFTAG_COLORMAP:\n\t\tcase TIFFTAG_TRANSFERFUNCTION:\n\t\t\t/*\n\t\t\t * TransferFunction can have either 1x or 3x data\n\t\t\t * values; Colormap can have only 3x items.\n\t\t\t */\n\t\t\tv = 1L<<td->td_bitspersample;\n\t\t\tif (dp->tdir_tag == TIFFTAG_COLORMAP ||\n\t\t\t    dp->tdir_count != v) {\n\t\t\t\tif (!CheckDirCount(tif, dp, 3 * v))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tv *= sizeof(uint16);\n\t\t\tcp = _TIFFCheckMalloc(tif, dp->tdir_count, sizeof (uint16),\n\t\t\t    \"to read \\\"TransferFunction\\\" tag\");\n\t\t\tif (cp != NULL) {\n\t\t\t\tif (TIFFFetchData(tif, dp, cp)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * This deals with there being only\n\t\t\t\t\t * one array to apply to all samples.\n\t\t\t\t\t */\n\t\t\t\t\tuint32 c = 1L << td->td_bitspersample;\n\t\t\t\t\tif (dp->tdir_count == c)\n\t\t\t\t\t\tv = 0L;\n\t\t\t\t\tTIFFSetField(tif, dp->tdir_tag,\n\t\t\t\t\t    cp, cp+v, cp+2*v);\n\t\t\t\t}\n\t\t\t\t_TIFFfree(cp);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_PAGENUMBER:\n\t\tcase TIFFTAG_HALFTONEHINTS:\n\t\tcase TIFFTAG_YCBCRSUBSAMPLING:\n\t\tcase TIFFTAG_DOTRANGE:\n\t\t\t(void) TIFFFetchShortPair(tif, dp);\n\t\t\tbreak;\n\t\tcase TIFFTAG_REFERENCEBLACKWHITE:\n\t\t\t(void) TIFFFetchRefBlackWhite(tif, dp);\n\t\t\tbreak;\n/* BEGIN REV 4.0 COMPATIBILITY */\n\t\tcase TIFFTAG_OSUBFILETYPE:\n\t\t\tv = 0L;\n\t\t\tswitch (TIFFExtractData(tif, dp->tdir_type,\n\t\t\t    dp->tdir_offset)) {\n\t\t\tcase OFILETYPE_REDUCEDIMAGE:\n\t\t\t\tv = FILETYPE_REDUCEDIMAGE;\n\t\t\t\tbreak;\n\t\t\tcase OFILETYPE_PAGE:\n\t\t\t\tv = FILETYPE_PAGE;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (v)\n\t\t\t\tTIFFSetField(tif, TIFFTAG_SUBFILETYPE, v);\n\t\t\tbreak;\n/* END REV 4.0 COMPATIBILITY */\n\t\tdefault:\n\t\t\t(void) TIFFFetchNormalTag(tif, dp);\n\t\t\tbreak;\n\t\t}\n\t}\n\t/*\n\t * Verify Palette image has a Colormap.\n\t */\n\tif (td->td_photometric == PHOTOMETRIC_PALETTE &&\n\t    !TIFFFieldSet(tif, FIELD_COLORMAP)) {\n\t\tMissingRequired(tif, \"Colormap\");\n\t\tgoto bad;\n\t}\n\t/*\n\t * Attempt to deal with a missing StripByteCounts tag.\n\t */\n\tif (!TIFFFieldSet(tif, FIELD_STRIPBYTECOUNTS)) {\n\t\t/*\n\t\t * Some manufacturers violate the spec by not giving\n\t\t * the size of the strips.  In this case, assume there\n\t\t * is one uncompressed strip of data.\n\t\t */\n\t\tif ((td->td_planarconfig == PLANARCONFIG_CONTIG &&\n\t\t    td->td_nstrips > 1) ||\n\t\t    (td->td_planarconfig == PLANARCONFIG_SEPARATE &&\n\t\t     td->td_nstrips != td->td_samplesperpixel)) {\n\t\t    MissingRequired(tif, \"StripByteCounts\");\n\t\t    goto bad;\n\t\t}\n\t\tTIFFWarning(module,\n\t\t\t\"%s: TIFF directory is missing required \"\n\t\t\t\"\\\"%s\\\" field, calculating from imagelength\",\n\t\t\ttif->tif_name,\n\t\t        _TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);\n\t\tif (EstimateStripByteCounts(tif, dir, dircount) < 0)\n\t\t    goto bad;\n/* \n * Assume we have wrong StripByteCount value (in case of single strip) in\n * following cases:\n *   - it is equal to zero along with StripOffset;\n *   - it is larger than file itself (in case of uncompressed image);\n *   - it is smaller than the size of the bytes per row multiplied on the\n *     number of rows.  The last case should not be checked in the case of\n *     writing new image, because we may do not know the exact strip size\n *     until the whole image will be written and directory dumped out.\n */\n#define\tBYTECOUNTLOOKSBAD \\\n    ( (td->td_stripbytecount[0] == 0 && td->td_stripoffset[0] != 0) || \\\n      (td->td_compression == COMPRESSION_NONE && \\\n       td->td_stripbytecount[0] > TIFFGetFileSize(tif) - td->td_stripoffset[0]) || \\\n      (tif->tif_mode == O_RDONLY && \\\n       td->td_compression == COMPRESSION_NONE && \\\n       td->td_stripbytecount[0] < TIFFScanlineSize(tif) * td->td_imagelength) )\n\n\t} else if (td->td_nstrips == 1 \n                   && td->td_stripoffset[0] != 0 \n                   && BYTECOUNTLOOKSBAD) {\n\t\t/*\n\t\t * XXX: Plexus (and others) sometimes give a value of zero for\n\t\t * a tag when they don't know what the correct value is!  Try\n\t\t * and handle the simple case of estimating the size of a one\n\t\t * strip image.\n\t\t */\n\t\tTIFFWarning(module,\n\t\"%s: Bogus \\\"%s\\\" field, ignoring and calculating from imagelength\",\n                            tif->tif_name,\n\t\t            _TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);\n\t\tif(EstimateStripByteCounts(tif, dir, dircount) < 0)\n\t\t    goto bad;\n\t} else if (td->td_nstrips > 1\n\t\t   && td->td_compression == COMPRESSION_NONE\n\t\t   && td->td_stripbytecount[0] != td->td_stripbytecount[1]) {\n\t\t/*\n\t\t * XXX: Some vendors fill StripByteCount array with absolutely\n\t\t * wrong values (it can be equal to StripOffset array, for\n\t\t * example). Catch this case here.\n\t\t */\n\t\tTIFFWarning(module,\n\t\"%s: Wrong \\\"%s\\\" field, ignoring and calculating from imagelength\",\n                            tif->tif_name,\n\t\t            _TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);\n\t\tif (EstimateStripByteCounts(tif, dir, dircount) < 0)\n\t\t    goto bad;\n\t}\n\tif (dir) {\n\t\t_TIFFfree((char *)dir);\n\t\tdir = NULL;\n\t}\n\tif (!TIFFFieldSet(tif, FIELD_MAXSAMPLEVALUE))\n\t\ttd->td_maxsamplevalue = (uint16)((1L<<td->td_bitspersample)-1);\n\t/*\n\t * Setup default compression scheme.\n\t */\n\n\t/*\n\t * XXX: We can optimize checking for the strip bounds using the sorted\n\t * bytecounts array. See also comments for TIFFAppendToStrip()\n\t * function in tif_write.c.\n\t */\n\tif (td->td_nstrips > 1) {\n\t\ttstrip_t strip;\n\n\t\ttd->td_stripbytecountsorted = 1;\n\t\tfor (strip = 1; strip < td->td_nstrips; strip++) {\n\t\t\tif (td->td_stripoffset[strip - 1] >\n\t\t\t    td->td_stripoffset[strip]) {\n\t\t\t\ttd->td_stripbytecountsorted = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!TIFFFieldSet(tif, FIELD_COMPRESSION))\n\t\tTIFFSetField(tif, TIFFTAG_COMPRESSION, COMPRESSION_NONE);\n        /*\n         * Some manufacturers make life difficult by writing\n\t * large amounts of uncompressed data as a single strip.\n\t * This is contrary to the recommendations of the spec.\n         * The following makes an attempt at breaking such images\n\t * into strips closer to the recommended 8k bytes.  A\n\t * side effect, however, is that the RowsPerStrip tag\n\t * value may be changed.\n         */\n\tif (td->td_nstrips == 1 && td->td_compression == COMPRESSION_NONE &&\n\t    (tif->tif_flags & (TIFF_STRIPCHOP|TIFF_ISTILED)) == TIFF_STRIPCHOP)\n\t\tChopUpSingleUncompressedStrip(tif);\n\n\t/*\n\t * Reinitialize i/o since we are starting on a new directory.\n\t */\n\ttif->tif_row = (uint32) -1;\n\ttif->tif_curstrip = (tstrip_t) -1;\n\ttif->tif_col = (uint32) -1;\n\ttif->tif_curtile = (ttile_t) -1;\n\ttif->tif_tilesize = (tsize_t) -1;\n\n\ttif->tif_scanlinesize = TIFFScanlineSize(tif);\n\tif (!tif->tif_scanlinesize) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero scanline size\",\n\t\t\t  tif->tif_name);\n\t\treturn (0);\n\t}\n\n\tif (isTiled(tif)) {\n\t\ttif->tif_tilesize = TIFFTileSize(tif);\n\t\tif (!tif->tif_tilesize) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero tile size\",\n\t\t\t\t  tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t} else {\n\t\tif (!TIFFStripSize(tif)) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero strip size\",\n\t\t\t\t  tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t}\n\treturn (1);\nbad:\n\tif (dir)\n\t\t_TIFFfree(dir);\n\treturn (0);\n}",
    "start": 70,
    "end": 682,
    "fix": "TIFFReadDirectory(TIFF* tif)\n{\n\tstatic const char module[] = \"TIFFReadDirectory\";\n\n\tint n;\n\tTIFFDirectory* td;\n\tTIFFDirEntry *dp, *dir = NULL;\n\tuint16 iv;\n\tuint32 v;\n\tconst TIFFFieldInfo* fip;\n\tsize_t fix;\n\tuint16 dircount;\n\ttoff_t nextdiroff;\n\tchar* cp;\n\tint diroutoforderwarning = 0;\n\ttoff_t* new_dirlist;\n\n\ttif->tif_diroff = tif->tif_nextdiroff;\n\tif (tif->tif_diroff == 0)\t\t/* no more directories */\n\t\treturn (0);\n\n\t/*\n\t * XXX: Trick to prevent IFD looping. The one can create TIFF file\n\t * with looped directory pointers. We will maintain a list of already\n\t * seen directories and check every IFD offset against this list.\n\t */\n\tfor (n = 0; n < tif->tif_dirnumber; n++) {\n\t\tif (tif->tif_dirlist[n] == tif->tif_diroff)\n\t\t\treturn (0);\n\t}\n\ttif->tif_dirnumber++;\n\tnew_dirlist = _TIFFrealloc(tif->tif_dirlist,\n\t\t\t\t   tif->tif_dirnumber * sizeof(toff_t));\n\tif (!new_dirlist) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t  \"%s: Failed to allocate space for IFD list\",\n\t\t\t  tif->tif_name);\n\t\treturn (0);\n\t}\n\ttif->tif_dirlist = new_dirlist;\n\ttif->tif_dirlist[tif->tif_dirnumber - 1] = tif->tif_diroff;\n\n\t/*\n\t * Cleanup any previous compression state.\n\t */\n\t(*tif->tif_cleanup)(tif);\n\ttif->tif_curdir++;\n\tnextdiroff = 0;\n\tif (!isMapped(tif)) {\n\t\tif (!SeekOK(tif, tif->tif_diroff)) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"%s: Seek error accessing TIFF directory\",\n                            tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t\tif (!ReadOK(tif, &dircount, sizeof (uint16))) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"%s: Can not read TIFF directory count\",\n                            tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t\tif (tif->tif_flags & TIFF_SWAB)\n\t\t\tTIFFSwabShort(&dircount);\n\t\tdir = (TIFFDirEntry *)_TIFFCheckMalloc(tif,\n\t\t\t\t\t\t  dircount,\n\t\t\t\t\t\t  sizeof (TIFFDirEntry),\n\t\t\t\t\t\t  \"to read TIFF directory\");\n\t\tif (dir == NULL)\n\t\t\treturn (0);\n\t\tif (!ReadOK(tif, dir, dircount*sizeof (TIFFDirEntry))) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n                                  \"%.100s: Can not read TIFF directory\",\n                                  tif->tif_name);\n\t\t\tgoto bad;\n\t\t}\n\t\t/*\n\t\t * Read offset to next directory for sequential scans.\n\t\t */\n\t\t(void) ReadOK(tif, &nextdiroff, sizeof (uint32));\n\t} else {\n\t\ttoff_t off = tif->tif_diroff;\n\n\t\tif (off + sizeof (uint16) > tif->tif_size) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"%s: Can not read TIFF directory count\",\n                            tif->tif_name);\n\t\t\treturn (0);\n\t\t} else\n\t\t\t_TIFFmemcpy(&dircount, tif->tif_base + off, sizeof (uint16));\n\t\toff += sizeof (uint16);\n\t\tif (tif->tif_flags & TIFF_SWAB)\n\t\t\tTIFFSwabShort(&dircount);\n\t\tdir = (TIFFDirEntry *)_TIFFCheckMalloc(tif,\n\t\t    dircount, sizeof (TIFFDirEntry), \"to read TIFF directory\");\n\t\tif (dir == NULL)\n\t\t\treturn (0);\n\t\tif (off + dircount*sizeof (TIFFDirEntry) > tif->tif_size) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n                                  \"%s: Can not read TIFF directory\",\n                                  tif->tif_name);\n\t\t\tgoto bad;\n\t\t} else {\n\t\t\t_TIFFmemcpy(dir, tif->tif_base + off,\n\t\t\t\t    dircount*sizeof (TIFFDirEntry));\n\t\t}\n\t\toff += dircount* sizeof (TIFFDirEntry);\n\t\tif (off + sizeof (uint32) <= tif->tif_size)\n\t\t\t_TIFFmemcpy(&nextdiroff, tif->tif_base+off, sizeof (uint32));\n\t}\n\tif (tif->tif_flags & TIFF_SWAB)\n\t\tTIFFSwabLong(&nextdiroff);\n\ttif->tif_nextdiroff = nextdiroff;\n\n\ttif->tif_flags &= ~TIFF_BEENWRITING;\t/* reset before new dir */\n\t/*\n\t * Setup default value and then make a pass over\n\t * the fields to check type and tag information,\n\t * and to extract info required to size data\n\t * structures.  A second pass is made afterwards\n\t * to read in everthing not taken in the first pass.\n\t */\n\ttd = &tif->tif_dir;\n\t/* free any old stuff and reinit */\n\tTIFFFreeDirectory(tif);\n\tTIFFDefaultDirectory(tif);\n\t/*\n\t * Electronic Arts writes gray-scale TIFF files\n\t * without a PlanarConfiguration directory entry.\n\t * Thus we setup a default value here, even though\n\t * the TIFF spec says there is no default value.\n\t */\n\tTIFFSetField(tif, TIFFTAG_PLANARCONFIG, PLANARCONFIG_CONTIG);\n\n\t/*\n\t * Sigh, we must make a separate pass through the\n\t * directory for the following reason:\n\t *\n\t * We must process the Compression tag in the first pass\n\t * in order to merge in codec-private tag definitions (otherwise\n\t * we may get complaints about unknown tags).  However, the\n\t * Compression tag may be dependent on the SamplesPerPixel\n\t * tag value because older TIFF specs permited Compression\n\t * to be written as a SamplesPerPixel-count tag entry.\n\t * Thus if we don't first figure out the correct SamplesPerPixel\n\t * tag value then we may end up ignoring the Compression tag\n\t * value because it has an incorrect count value (if the\n\t * true value of SamplesPerPixel is not 1).\n\t *\n\t * It sure would have been nice if Aldus had really thought\n\t * this stuff through carefully.\n\t */ \n\tfor (dp = dir, n = dircount; n > 0; n--, dp++) {\n\t\tif (tif->tif_flags & TIFF_SWAB) {\n\t\t\tTIFFSwabArrayOfShort(&dp->tdir_tag, 2);\n\t\t\tTIFFSwabArrayOfLong(&dp->tdir_count, 2);\n\t\t}\n\t\tif (dp->tdir_tag == TIFFTAG_SAMPLESPERPIXEL) {\n\t\t\tif (!TIFFFetchNormalTag(tif, dp))\n\t\t\t\tgoto bad;\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t}\n\t}\n\t/*\n\t * First real pass over the directory.\n\t */\n\tfix = 0;\n\tfor (dp = dir, n = dircount; n > 0; n--, dp++) {\n\n\t\tif (fix >= tif->tif_nfields || dp->tdir_tag == IGNORE)\n\t\t\tcontinue;\n               \n\t\t/*\n\t\t * Silicon Beach (at least) writes unordered\n\t\t * directory tags (violating the spec).  Handle\n\t\t * it here, but be obnoxious (maybe they'll fix it?).\n\t\t */\n\t\tif (dp->tdir_tag < tif->tif_fieldinfo[fix]->field_tag) {\n\t\t\tif (!diroutoforderwarning) {\n\t\t\t\tTIFFWarning(module,\n\"%s: invalid TIFF directory; tags are not sorted in ascending order\",\n                                            tif->tif_name);\n\t\t\t\tdiroutoforderwarning = 1;\n\t\t\t}\n\t\t\tfix = 0;\t\t\t/* O(n^2) */\n\t\t}\n\t\twhile (fix < tif->tif_nfields &&\n\t\t       tif->tif_fieldinfo[fix]->field_tag < dp->tdir_tag)\n\t\t\tfix++;\n\t\tif (fix >= tif->tif_nfields ||\n\t\t    tif->tif_fieldinfo[fix]->field_tag != dp->tdir_tag) {\n\n                    TIFFWarning(module,\n                        \"%s: unknown field with tag %d (0x%x) encountered\",\n                                tif->tif_name, dp->tdir_tag, dp->tdir_tag,\n                                dp->tdir_type);\n\n                    TIFFMergeFieldInfo( tif,\n                                        _TIFFCreateAnonFieldInfo( tif,\n                                              dp->tdir_tag,\n\t\t\t\t\t      (TIFFDataType) dp->tdir_type ),\n                                        1 );\n                    fix = 0;\n                    while (fix < tif->tif_nfields &&\n                           tif->tif_fieldinfo[fix]->field_tag < dp->tdir_tag)\n\t\t\tfix++;\n\t\t}\n\t\t/*\n\t\t * Null out old tags that we ignore.\n\t\t */\n\t\tif (tif->tif_fieldinfo[fix]->field_bit == FIELD_IGNORE) {\n\tignore:\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t\tcontinue;\n\t\t}\n\t\t/*\n\t\t * Check data type.\n\t\t */\n\t\tfip = tif->tif_fieldinfo[fix];\n\t\twhile (dp->tdir_type != (unsigned short) fip->field_type\n                       && fix < tif->tif_nfields) {\n\t\t\tif (fip->field_type == TIFF_ANY)\t/* wildcard */\n\t\t\t\tbreak;\n                        fip = tif->tif_fieldinfo[++fix];\n\t\t\tif (fix >= tif->tif_nfields ||\n\t\t\t    fip->field_tag != dp->tdir_tag) {\n\t\t\t\tTIFFWarning(module,\n\t\t\t\"%s: wrong data type %d for \\\"%s\\\"; tag ignored\",\n\t\t\t\t\t    tif->tif_name, dp->tdir_type,\n\t\t\t\t\t    tif->tif_fieldinfo[fix-1]->field_name);\n\t\t\t\tgoto ignore;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t * Check count if known in advance.\n\t\t */\n\t\tif (fip->field_readcount != TIFF_VARIABLE\n\t\t    && fip->field_readcount != TIFF_VARIABLE2) {\n\t\t\tuint32 expected = (fip->field_readcount == TIFF_SPP) ?\n\t\t\t    (uint32) td->td_samplesperpixel :\n\t\t\t    (uint32) fip->field_readcount;\n\t\t\tif (!CheckDirCount(tif, dp, expected))\n\t\t\t\tgoto ignore;\n\t\t}\n\n\t\tswitch (dp->tdir_tag) {\n\t\tcase TIFFTAG_COMPRESSION:\n\t\t\t/*\n\t\t\t * The 5.0 spec says the Compression tag has\n\t\t\t * one value, while earlier specs say it has\n\t\t\t * one value per sample.  Because of this, we\n\t\t\t * accept the tag if one value is supplied.\n\t\t\t */\n\t\t\tif (dp->tdir_count == 1) {\n\t\t\t\tv = TIFFExtractData(tif,\n\t\t\t\t    dp->tdir_type, dp->tdir_offset);\n\t\t\t\tif (!TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t\tbreak;\n\t\t\t/* XXX: workaround for broken TIFFs */\n\t\t\t} else if (dp->tdir_type == TIFF_LONG) {\n\t\t\t\tif (!TIFFFetchPerSampleLongs(tif, dp, &v) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t} else {\n\t\t\t\tif (!TIFFFetchPerSampleShorts(tif, dp, &iv)\n\t\t\t\t    || !TIFFSetField(tif, dp->tdir_tag, iv))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t\tbreak;\n\t\tcase TIFFTAG_STRIPOFFSETS:\n\t\tcase TIFFTAG_STRIPBYTECOUNTS:\n\t\tcase TIFFTAG_TILEOFFSETS:\n\t\tcase TIFFTAG_TILEBYTECOUNTS:\n\t\t\tTIFFSetFieldBit(tif, fip->field_bit);\n\t\t\tbreak;\n\t\tcase TIFFTAG_IMAGEWIDTH:\n\t\tcase TIFFTAG_IMAGELENGTH:\n\t\tcase TIFFTAG_IMAGEDEPTH:\n\t\tcase TIFFTAG_TILELENGTH:\n\t\tcase TIFFTAG_TILEWIDTH:\n\t\tcase TIFFTAG_TILEDEPTH:\n\t\tcase TIFFTAG_PLANARCONFIG:\n\t\tcase TIFFTAG_ROWSPERSTRIP:\n\t\tcase TIFFTAG_EXTRASAMPLES:\n\t\t\tif (!TIFFFetchNormalTag(tif, dp))\n\t\t\t\tgoto bad;\n\t\t\tdp->tdir_tag = IGNORE;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Allocate directory structure and setup defaults.\n\t */\n\tif (!TIFFFieldSet(tif, FIELD_IMAGEDIMENSIONS)) {\n\t\tMissingRequired(tif, \"ImageLength\");\n\t\tgoto bad;\n\t}\n\tif (!TIFFFieldSet(tif, FIELD_PLANARCONFIG)) {\n\t\tMissingRequired(tif, \"PlanarConfiguration\");\n\t\tgoto bad;\n\t}\n\t/* \n \t * Setup appropriate structures (by strip or by tile)\n\t */\n\tif (!TIFFFieldSet(tif, FIELD_TILEDIMENSIONS)) {\n\t\ttd->td_nstrips = TIFFNumberOfStrips(tif);\n\t\ttd->td_tilewidth = td->td_imagewidth;\n\t\ttd->td_tilelength = td->td_rowsperstrip;\n\t\ttd->td_tiledepth = td->td_imagedepth;\n\t\ttif->tif_flags &= ~TIFF_ISTILED;\n\t} else {\n\t\ttd->td_nstrips = TIFFNumberOfTiles(tif);\n\t\ttif->tif_flags |= TIFF_ISTILED;\n\t}\n\tif (!td->td_nstrips) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero number of %s\",\n\t\t\t  tif->tif_name, isTiled(tif) ? \"tiles\" : \"strips\");\n\t\tgoto bad;\n\t}\n\ttd->td_stripsperimage = td->td_nstrips;\n\tif (td->td_planarconfig == PLANARCONFIG_SEPARATE)\n\t\ttd->td_stripsperimage /= td->td_samplesperpixel;\n\tif (!TIFFFieldSet(tif, FIELD_STRIPOFFSETS)) {\n\t\tMissingRequired(tif,\n\t\t    isTiled(tif) ? \"TileOffsets\" : \"StripOffsets\");\n\t\tgoto bad;\n\t}\n\n\t/*\n\t * Second pass: extract other information.\n\t */\n\tfor (dp = dir, n = dircount; n > 0; n--, dp++) {\n\t\tif (dp->tdir_tag == IGNORE)\n\t\t\tcontinue;\n\t\tswitch (dp->tdir_tag) {\n\t\tcase TIFFTAG_MINSAMPLEVALUE:\n\t\tcase TIFFTAG_MAXSAMPLEVALUE:\n\t\tcase TIFFTAG_BITSPERSAMPLE:\n\t\tcase TIFFTAG_DATATYPE:\n\t\tcase TIFFTAG_SAMPLEFORMAT:\n\t\t\t/*\n\t\t\t * The 5.0 spec says the Compression tag has\n\t\t\t * one value, while earlier specs say it has\n\t\t\t * one value per sample.  Because of this, we\n\t\t\t * accept the tag if one value is supplied.\n\t\t\t *\n                         * The MinSampleValue, MaxSampleValue, BitsPerSample\n                         * DataType and SampleFormat tags are supposed to be\n                         * written as one value/sample, but some vendors\n                         * incorrectly write one value only -- so we accept\n                         * that as well (yech). Other vendors write correct\n\t\t\t * value for NumberOfSamples, but incorrect one for\n\t\t\t * BitsPerSample and friends, and we will read this\n\t\t\t * too.\n\t\t\t */\n\t\t\tif (dp->tdir_count == 1) {\n\t\t\t\tv = TIFFExtractData(tif,\n\t\t\t\t    dp->tdir_type, dp->tdir_offset);\n\t\t\t\tif (!TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t/* XXX: workaround for broken TIFFs */\n\t\t\t} else if (dp->tdir_tag == TIFFTAG_BITSPERSAMPLE\n\t\t\t\t   && dp->tdir_type == TIFF_LONG) {\n\t\t\t\tif (!TIFFFetchPerSampleLongs(tif, dp, &v) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, (uint16)v))\n\t\t\t\t\tgoto bad;\n\t\t\t} else {\n\t\t\t\tif (!TIFFFetchPerSampleShorts(tif, dp, &iv) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, iv))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_SMINSAMPLEVALUE:\n\t\tcase TIFFTAG_SMAXSAMPLEVALUE:\n\t\t\t{\n\t\t\t\tdouble dv = 0.0;\n\t\t\t\tif (!TIFFFetchPerSampleAnys(tif, dp, &dv) ||\n\t\t\t\t    !TIFFSetField(tif, dp->tdir_tag, dv))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_STRIPOFFSETS:\n\t\tcase TIFFTAG_TILEOFFSETS:\n\t\t\tif (!TIFFFetchStripThing(tif, dp,\n\t\t\t    td->td_nstrips, &td->td_stripoffset))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase TIFFTAG_STRIPBYTECOUNTS:\n\t\tcase TIFFTAG_TILEBYTECOUNTS:\n\t\t\tif (!TIFFFetchStripThing(tif, dp,\n\t\t\t    td->td_nstrips, &td->td_stripbytecount))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase TIFFTAG_COLORMAP:\n\t\tcase TIFFTAG_TRANSFERFUNCTION:\n\t\t\t/*\n\t\t\t * TransferFunction can have either 1x or 3x data\n\t\t\t * values; Colormap can have only 3x items.\n\t\t\t */\n\t\t\tv = 1L<<td->td_bitspersample;\n\t\t\tif (dp->tdir_tag == TIFFTAG_COLORMAP ||\n\t\t\t    dp->tdir_count != v) {\n\t\t\t\tif (!CheckDirCount(tif, dp, 3 * v))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tv *= sizeof(uint16);\n\t\t\tcp = _TIFFCheckMalloc(tif, dp->tdir_count, sizeof (uint16),\n\t\t\t    \"to read \\\"TransferFunction\\\" tag\");\n\t\t\tif (cp != NULL) {\n\t\t\t\tif (TIFFFetchData(tif, dp, cp)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * This deals with there being only\n\t\t\t\t\t * one array to apply to all samples.\n\t\t\t\t\t */\n\t\t\t\t\tuint32 c = 1L << td->td_bitspersample;\n\t\t\t\t\tif (dp->tdir_count == c)\n\t\t\t\t\t\tv = 0L;\n\t\t\t\t\tTIFFSetField(tif, dp->tdir_tag,\n\t\t\t\t\t    cp, cp+v, cp+2*v);\n\t\t\t\t}\n\t\t\t\t_TIFFfree(cp);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_PAGENUMBER:\n\t\tcase TIFFTAG_HALFTONEHINTS:\n\t\tcase TIFFTAG_YCBCRSUBSAMPLING:\n\t\tcase TIFFTAG_DOTRANGE:\n\t\t\t(void) TIFFFetchShortPair(tif, dp);\n\t\t\tbreak;\n\t\tcase TIFFTAG_REFERENCEBLACKWHITE:\n\t\t\t(void) TIFFFetchRefBlackWhite(tif, dp);\n\t\t\tbreak;\n/* BEGIN REV 4.0 COMPATIBILITY */\n\t\tcase TIFFTAG_OSUBFILETYPE:\n\t\t\tv = 0L;\n\t\t\tswitch (TIFFExtractData(tif, dp->tdir_type,\n\t\t\t    dp->tdir_offset)) {\n\t\t\tcase OFILETYPE_REDUCEDIMAGE:\n\t\t\t\tv = FILETYPE_REDUCEDIMAGE;\n\t\t\t\tbreak;\n\t\t\tcase OFILETYPE_PAGE:\n\t\t\t\tv = FILETYPE_PAGE;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (v)\n\t\t\t\tTIFFSetField(tif, TIFFTAG_SUBFILETYPE, v);\n\t\t\tbreak;\n/* END REV 4.0 COMPATIBILITY */\n\t\tdefault:\n\t\t\t(void) TIFFFetchNormalTag(tif, dp);\n\t\t\tbreak;\n\t\t}\n\t}\n\t/*\n\t * Verify Palette image has a Colormap.\n\t */\n\tif (td->td_photometric == PHOTOMETRIC_PALETTE &&\n\t    !TIFFFieldSet(tif, FIELD_COLORMAP)) {\n\t\tMissingRequired(tif, \"Colormap\");\n\t\tgoto bad;\n\t}\n\t/*\n\t * Attempt to deal with a missing StripByteCounts tag.\n\t */\n\tif (!TIFFFieldSet(tif, FIELD_STRIPBYTECOUNTS)) {\n\t\t/*\n\t\t * Some manufacturers violate the spec by not giving\n\t\t * the size of the strips.  In this case, assume there\n\t\t * is one uncompressed strip of data.\n\t\t */\n\t\tif ((td->td_planarconfig == PLANARCONFIG_CONTIG &&\n\t\t    td->td_nstrips > 1) ||\n\t\t    (td->td_planarconfig == PLANARCONFIG_SEPARATE &&\n\t\t     td->td_nstrips != td->td_samplesperpixel)) {\n\t\t    MissingRequired(tif, \"StripByteCounts\");\n\t\t    goto bad;\n\t\t}\n\t\tTIFFWarning(module,\n\t\t\t\"%s: TIFF directory is missing required \"\n\t\t\t\"\\\"%s\\\" field, calculating from imagelength\",\n\t\t\ttif->tif_name,\n\t\t        _TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);\n\t\tif (EstimateStripByteCounts(tif, dir, dircount) < 0)\n\t\t    goto bad;\n/* \n * Assume we have wrong StripByteCount value (in case of single strip) in\n * following cases:\n *   - it is equal to zero along with StripOffset;\n *   - it is larger than file itself (in case of uncompressed image);\n *   - it is smaller than the size of the bytes per row multiplied on the\n *     number of rows.  The last case should not be checked in the case of\n *     writing new image, because we may do not know the exact strip size\n *     until the whole image will be written and directory dumped out.\n */\n#define\tBYTECOUNTLOOKSBAD \\\n    ( (td->td_stripbytecount[0] == 0 && td->td_stripoffset[0] != 0) || \\\n      (td->td_compression == COMPRESSION_NONE && \\\n       td->td_stripbytecount[0] > TIFFGetFileSize(tif) - td->td_stripoffset[0]) || \\\n      (tif->tif_mode == O_RDONLY && \\\n       td->td_compression == COMPRESSION_NONE && \\\n       td->td_stripbytecount[0] < TIFFScanlineSize(tif) * td->td_imagelength) )\n\n\t} else if (td->td_nstrips == 1 \n                   && td->td_stripoffset[0] != 0 \n                   && BYTECOUNTLOOKSBAD) {\n\t\t/*\n\t\t * XXX: Plexus (and others) sometimes give a value of zero for\n\t\t * a tag when they don't know what the correct value is!  Try\n\t\t * and handle the simple case of estimating the size of a one\n\t\t * strip image.\n\t\t */\n\t\tTIFFWarning(module,\n\t\"%s: Bogus \\\"%s\\\" field, ignoring and calculating from imagelength\",\n                            tif->tif_name,\n\t\t            _TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);\n\t\tif(EstimateStripByteCounts(tif, dir, dircount) < 0)\n\t\t    goto bad;\n\t} else if (td->td_nstrips > 2\n\t\t   && td->td_compression == COMPRESSION_NONE\n\t\t   && td->td_stripbytecount[0] != td->td_stripbytecount[1]) {\n\t\t/*\n\t\t * XXX: Some vendors fill StripByteCount array with absolutely\n\t\t * wrong values (it can be equal to StripOffset array, for\n\t\t * example). Catch this case here.\n\t\t */\n\t\tTIFFWarning(module,\n\t\"%s: Wrong \\\"%s\\\" field, ignoring and calculating from imagelength\",\n                            tif->tif_name,\n\t\t            _TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);\n\t\tif (EstimateStripByteCounts(tif, dir, dircount) < 0)\n\t\t    goto bad;\n\t}\n\tif (dir) {\n\t\t_TIFFfree((char *)dir);\n\t\tdir = NULL;\n\t}\n\tif (!TIFFFieldSet(tif, FIELD_MAXSAMPLEVALUE))\n\t\ttd->td_maxsamplevalue = (uint16)((1L<<td->td_bitspersample)-1);\n\t/*\n\t * Setup default compression scheme.\n\t */\n\n\t/*\n\t * XXX: We can optimize checking for the strip bounds using the sorted\n\t * bytecounts array. See also comments for TIFFAppendToStrip()\n\t * function in tif_write.c.\n\t */\n\tif (td->td_nstrips > 1) {\n\t\ttstrip_t strip;\n\n\t\ttd->td_stripbytecountsorted = 1;\n\t\tfor (strip = 1; strip < td->td_nstrips; strip++) {\n\t\t\tif (td->td_stripoffset[strip - 1] >\n\t\t\t    td->td_stripoffset[strip]) {\n\t\t\t\ttd->td_stripbytecountsorted = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!TIFFFieldSet(tif, FIELD_COMPRESSION))\n\t\tTIFFSetField(tif, TIFFTAG_COMPRESSION, COMPRESSION_NONE);\n        /*\n         * Some manufacturers make life difficult by writing\n\t * large amounts of uncompressed data as a single strip.\n\t * This is contrary to the recommendations of the spec.\n         * The following makes an attempt at breaking such images\n\t * into strips closer to the recommended 8k bytes.  A\n\t * side effect, however, is that the RowsPerStrip tag\n\t * value may be changed.\n         */\n\tif (td->td_nstrips == 1 && td->td_compression == COMPRESSION_NONE &&\n\t    (tif->tif_flags & (TIFF_STRIPCHOP|TIFF_ISTILED)) == TIFF_STRIPCHOP)\n\t\tChopUpSingleUncompressedStrip(tif);\n\n\t/*\n\t * Reinitialize i/o since we are starting on a new directory.\n\t */\n\ttif->tif_row = (uint32) -1;\n\ttif->tif_curstrip = (tstrip_t) -1;\n\ttif->tif_col = (uint32) -1;\n\ttif->tif_curtile = (ttile_t) -1;\n\ttif->tif_tilesize = (tsize_t) -1;\n\n\ttif->tif_scanlinesize = TIFFScanlineSize(tif);\n\tif (!tif->tif_scanlinesize) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero scanline size\",\n\t\t\t  tif->tif_name);\n\t\treturn (0);\n\t}\n\n\tif (isTiled(tif)) {\n\t\ttif->tif_tilesize = TIFFTileSize(tif);\n\t\tif (!tif->tif_tilesize) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero tile size\",\n\t\t\t\t  tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t} else {\n\t\tif (!TIFFStripSize(tif)) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module, \"%s: cannot handle zero strip size\",\n\t\t\t\t  tif->tif_name);\n\t\t\treturn (0);\n\t\t}\n\t}\n\treturn (1);\nbad:\n\tif (dir)\n\t\t_TIFFfree(dir);\n\treturn (0);\n}",
    "filename": "libtiff/tif_dirread.c"
  },
  "libtiff_2006-02-23-b2ce5d8-207c78a": {
    "buggy": "_TIFFWriteDirectory(TIFF* tif, int done)\n{\n\tuint16 dircount;\n\ttoff_t diroff;\n\tttag_t tag;\n\tuint32 nfields;\n\ttsize_t dirsize;\n\tchar* data;\n\tTIFFDirEntry* dir;\n\tTIFFDirectory* td;\n\tunsigned long b, fields[FIELD_SETLONGS];\n\tint fi, nfi;\n\n\tif (tif->tif_mode == O_RDONLY)\n\t\treturn (1);\n\t/*\n\t * Clear write state so that subsequent images with\n\t * different characteristics get the right buffers\n\t * setup for them.\n\t */\n\tif (done)\n\t{\n\t    if (tif->tif_flags & TIFF_POSTENCODE) {\n\t\t    tif->tif_flags &= ~TIFF_POSTENCODE;\n\t\t    if (!(*tif->tif_postencode)(tif)) {\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t\t\t\"Error post-encoding before directory write\");\n\t\t\t    return (0);\n\t\t    }\n\t    }\n\t    (*tif->tif_close)(tif);\t\t/* shutdown encoder */\n\t    /*\n\t     * Flush any data that might have been written\n\t     * by the compression close+cleanup routines.\n\t     */\n\t    if (tif->tif_rawcc > 0 && !TIFFFlushData1(tif)) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t\t\"Error flushing data before directory write\");\n\t\t    return (0);\n\t    }\n\t    if ((tif->tif_flags & TIFF_MYBUFFER) && tif->tif_rawdata) {\n\t\t    _TIFFfree(tif->tif_rawdata);\n\t\t    tif->tif_rawdata = NULL;\n\t\t    tif->tif_rawcc = 0;\n\t\t    tif->tif_rawdatasize = 0;\n\t    }\n\t    tif->tif_flags &= ~(TIFF_BEENWRITING|TIFF_BUFFERSETUP);\n\t}\n\n\ttd = &tif->tif_dir;\n\t/*\n\t * Size the directory so that we can calculate\n\t * offsets for the data items that aren't kept\n\t * in-place in each field.\n\t */\n\tnfields = 0;\n\tfor (b = 0; b <= FIELD_LAST; b++)\n\t\tif (TIFFFieldSet(tif, b) && b != FIELD_CUSTOM)\n\t\t\tnfields += (b < FIELD_SUBFILETYPE ? 2 : 1);\n        nfields += td->td_customValueCount;\n\tdirsize = nfields * sizeof (TIFFDirEntry);\n\tdata = (char*) _TIFFmalloc(dirsize);\n\tif (data == NULL) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t    \"Cannot write directory, out of space\");\n\t\treturn (0);\n\t}\n\t/*\n\t * Directory hasn't been placed yet, put\n\t * it at the end of the file and link it\n\t * into the existing directory structure.\n\t */\n\tif (tif->tif_diroff == 0 && !TIFFLinkDirectory(tif))\n\t\tgoto bad;\n\ttif->tif_dataoff = (toff_t)(\n\t    tif->tif_diroff + sizeof (uint16) + dirsize + sizeof (toff_t));\n\tif (tif->tif_dataoff & 1)\n\t\ttif->tif_dataoff++;\n\t(void) TIFFSeekFile(tif, tif->tif_dataoff, SEEK_SET);\n\ttif->tif_curdir++;\n\tdir = (TIFFDirEntry*) data;\n\t/*\n\t * Setup external form of directory\n\t * entries and write data items.\n\t */\n\t_TIFFmemcpy(fields, td->td_fieldsset, sizeof (fields));\n\t/*\n\t * Write out ExtraSamples tag only if\n\t * extra samples are present in the data.\n\t */\n\tif (FieldSet(fields, FIELD_EXTRASAMPLES) && !td->td_extrasamples) {\n\t\tResetFieldBit(fields, FIELD_EXTRASAMPLES);\n\t\tnfields--;\n\t\tdirsize -= sizeof (TIFFDirEntry);\n\t}\t\t\t\t\t\t\t\t/*XXX*/\n\tfor (fi = 0, nfi = tif->tif_nfields; nfi > 0; nfi--, fi++) {\n\t\tconst TIFFFieldInfo* fip = tif->tif_fieldinfo[fi];\n\n                /*\n                ** For custom fields, we test to see if the custom field\n                ** is set or not.  For normal fields, we just use the\n                ** FieldSet test. \n                */\n                if( fip->field_bit == FIELD_CUSTOM )\n                {\n                    int ci, is_set = FALSE;\n\n                    for( ci = 0; ci < td->td_customValueCount; ci++ )\n                        is_set |= (td->td_customValues[ci].info == fip);\n\n                    if( !is_set )\n                        continue;\n                }\n\t\telse if (!FieldSet(fields, fip->field_bit))\n                    continue;\n\n\n                /*\n                ** Handle other fields.\n                */\n\t\tswitch (fip->field_bit)\n                {\n\t\tcase FIELD_STRIPOFFSETS:\n\t\t\t/*\n\t\t\t * We use one field bit for both strip and tile\n\n\t\t\t * offsets, and so must be careful in selecting\n\t\t\t * the appropriate field descriptor (so that tags\n\t\t\t * are written in sorted order).\n\t\t\t */\n\t\t\ttag = isTiled(tif) ?\n\t\t\t    TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS;\n\t\t\tif (tag != fip->field_tag)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tdir->tdir_tag = (uint16) tag;\n\t\t\tdir->tdir_type = (uint16) TIFF_LONG;\n\t\t\tdir->tdir_count = (uint32) td->td_nstrips;\n\t\t\tif (!TIFFWriteLongArray(tif, dir, td->td_stripoffset))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_STRIPBYTECOUNTS:\n\t\t\t/*\n\t\t\t * We use one field bit for both strip and tile\n\t\t\t * byte counts, and so must be careful in selecting\n\t\t\t * the appropriate field descriptor (so that tags\n\t\t\t * are written in sorted order).\n\t\t\t */\n\t\t\ttag = isTiled(tif) ?\n\t\t\t    TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS;\n\t\t\tif (tag != fip->field_tag)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tdir->tdir_tag = (uint16) tag;\n\t\t\tdir->tdir_type = (uint16) TIFF_LONG;\n\t\t\tdir->tdir_count = (uint32) td->td_nstrips;\n\t\t\tif (!TIFFWriteLongArray(tif, dir,\n\t\t\t\t\t\ttd->td_stripbytecount))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_ROWSPERSTRIP:\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_ROWSPERSTRIP,\n\t\t\t    dir, td->td_rowsperstrip);\n\t\t\tbreak;\n\t\tcase FIELD_COLORMAP:\n\t\t\tif (!TIFFWriteShortTable(tif, TIFFTAG_COLORMAP, dir,\n\t\t\t    3, td->td_colormap))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_IMAGEDIMENSIONS:\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_IMAGEWIDTH,\n\t\t\t    dir++, td->td_imagewidth);\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_IMAGELENGTH,\n\t\t\t    dir, td->td_imagelength);\n\t\t\tbreak;\n\t\tcase FIELD_TILEDIMENSIONS:\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_TILEWIDTH,\n\t\t\t    dir++, td->td_tilewidth);\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_TILELENGTH,\n\t\t\t    dir, td->td_tilelength);\n\t\t\tbreak;\n\t\tcase FIELD_COMPRESSION:\n\t\t\tTIFFSetupShort(tif, TIFFTAG_COMPRESSION,\n\t\t\t    dir, td->td_compression);\n\t\t\tbreak;\n\t\tcase FIELD_PHOTOMETRIC:\n\t\t\tTIFFSetupShort(tif, TIFFTAG_PHOTOMETRIC,\n\t\t\t    dir, td->td_photometric);\n\t\t\tbreak;\n\t\tcase FIELD_POSITION:\n\t\t\tWriteRationalPair(TIFF_RATIONAL,\n\t\t\t    TIFFTAG_XPOSITION, td->td_xposition,\n\t\t\t    TIFFTAG_YPOSITION, td->td_yposition);\n\t\t\tbreak;\n\t\tcase FIELD_RESOLUTION:\n\t\t\tWriteRationalPair(TIFF_RATIONAL,\n\t\t\t    TIFFTAG_XRESOLUTION, td->td_xresolution,\n\t\t\t    TIFFTAG_YRESOLUTION, td->td_yresolution);\n\t\t\tbreak;\n\t\tcase FIELD_BITSPERSAMPLE:\n\t\tcase FIELD_MINSAMPLEVALUE:\n\t\tcase FIELD_MAXSAMPLEVALUE:\n\t\tcase FIELD_SAMPLEFORMAT:\n\t\t\tif (!TIFFWritePerSampleShorts(tif, fip->field_tag, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_SMINSAMPLEVALUE:\n\t\tcase FIELD_SMAXSAMPLEVALUE:\n\t\t\tif (!TIFFWritePerSampleAnys(tif,\n\t\t\t    _TIFFSampleToTagType(tif), fip->field_tag, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_PAGENUMBER:\n\t\tcase FIELD_HALFTONEHINTS:\n\t\tcase FIELD_YCBCRSUBSAMPLING:\n\t\t\tif (!TIFFSetupShortPair(tif, fip->field_tag, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_INKNAMES:\n\t\t\tif (!TIFFWriteInkNames(tif, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_TRANSFERFUNCTION:\n\t\t\tif (!TIFFWriteTransferFunction(tif, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_SUBIFD:\n\t\t\t/*\n\t\t\t * XXX: Always write this field using LONG type\n\t\t\t * for backward compatibility.\n\t\t\t */\n\t\t\tdir->tdir_tag = (uint16) fip->field_tag;\n\t\t\tdir->tdir_type = (uint16) TIFF_LONG;\n\t\t\tdir->tdir_count = (uint32) td->td_nsubifd;\n\t\t\tif (!TIFFWriteLongArray(tif, dir, td->td_subifd))\n\t\t\t\tgoto bad;\n\t\t\t/*\n\t\t\t * Total hack: if this directory includes a SubIFD\n\t\t\t * tag then force the next <n> directories to be\n\t\t\t * written as ``sub directories'' of this one.  This\n\t\t\t * is used to write things like thumbnails and\n\t\t\t * image masks that one wants to keep out of the\n\t\t\t * normal directory linkage access mechanism.\n\t\t\t */\n\t\t\tif (dir->tdir_count > 0) {\n\t\t\t\ttif->tif_flags |= TIFF_INSUBIFD;\n\t\t\t\ttif->tif_nsubifd = (uint16) dir->tdir_count;\n\t\t\t\tif (dir->tdir_count > 1)\n\t\t\t\t\ttif->tif_subifdoff = dir->tdir_offset;\n\t\t\t\telse\n\t\t\t\t\ttif->tif_subifdoff = (uint32)(\n\t\t\t\t\t      tif->tif_diroff\n\t\t\t\t\t    + sizeof (uint16)\n\t\t\t\t\t    + ((char*)&dir->tdir_offset-data));\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (!TIFFWriteNormalTag(tif, dir, fip))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\t}\n\t\tdir++;\n                \n                if( fip->field_bit != FIELD_CUSTOM )\n                    ResetFieldBit(fields, fip->field_bit);\n\t}\n\n\t/*\n\t * Write directory.\n\t */\n\tdircount = (uint16) nfields;\n\tdiroff = (uint32) tif->tif_nextdiroff;\n\tif (tif->tif_flags & TIFF_SWAB) {\n\t\t/*\n\t\t * The file's byte order is opposite to the\n\t\t * native machine architecture.  We overwrite\n\t\t * the directory information with impunity\n\t\t * because it'll be released below after we\n\t\t * write it to the file.  Note that all the\n\t\t * other tag construction routines assume that\n\t\t * we do this byte-swapping; i.e. they only\n\t\t * byte-swap indirect data.\n\t\t */\n\t\tfor (dir = (TIFFDirEntry*) data; dircount; dir++, dircount--) {\n\t\t\tTIFFSwabArrayOfShort(&dir->tdir_tag, 2);\n\t\t\tTIFFSwabArrayOfLong(&dir->tdir_count, 2);\n\t\t}\n\t\tdircount = (uint16) nfields;\n\t\tTIFFSwabShort(&dircount);\n\t\tTIFFSwabLong(&diroff);\n\t}\n\t(void) TIFFSeekFile(tif, tif->tif_diroff, SEEK_SET);\n\tif (!WriteOK(tif, &dircount, sizeof (dircount))) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error writing directory count\");\n\t\tgoto bad;\n\t}\n\tif (!WriteOK(tif, data, dirsize)) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error writing directory contents\");\n\t\tgoto bad;\n\t}\n\tif (!WriteOK(tif, &diroff, sizeof (diroff))) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error writing directory link\");\n\t\tgoto bad;\n\t}\n\tif (done) {\n\t\tTIFFFreeDirectory(tif);\n\t\ttif->tif_flags &= ~TIFF_DIRTYDIRECT;\n\t\t(*tif->tif_cleanup)(tif);\n\n\t\t/*\n\t\t* Reset directory-related state for subsequent\n\t\t* directories.\n\t\t*/\n\t\tTIFFCreateDirectory(tif);\n\t}\n\t_TIFFfree(data);\n\treturn (1);\nbad:\n\t_TIFFfree(data);\n\treturn (0);\n}",
    "start": 81,
    "end": 401,
    "fix": "_TIFFWriteDirectory(TIFF* tif, int done)\n{\n\tuint16 dircount;\n\ttoff_t diroff;\n\tttag_t tag;\n\tuint32 nfields;\n\ttsize_t dirsize;\n\tchar* data;\n\tTIFFDirEntry* dir;\n\tTIFFDirectory* td;\n\tunsigned long b, fields[FIELD_SETLONGS];\n\tint fi, nfi;\n\n\tif (tif->tif_mode == O_RDONLY)\n\t\treturn (1);\n\t/*\n\t * Clear write state so that subsequent images with\n\t * different characteristics get the right buffers\n\t * setup for them.\n\t */\n\tif (done)\n\t{\n\t    if (tif->tif_flags & TIFF_POSTENCODE) {\n\t\t    tif->tif_flags &= ~TIFF_POSTENCODE;\n\t\t    if (!(*tif->tif_postencode)(tif)) {\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t\t\t\"Error post-encoding before directory write\");\n\t\t\t    return (0);\n\t\t    }\n\t    }\n\t    (*tif->tif_close)(tif);\t\t/* shutdown encoder */\n\t    /*\n\t     * Flush any data that might have been written\n\t     * by the compression close+cleanup routines.\n\t     */\n\t    if (tif->tif_rawcc > 0 && !TIFFFlushData1(tif)) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t\t\"Error flushing data before directory write\");\n\t\t    return (0);\n\t    }\n\t    if ((tif->tif_flags & TIFF_MYBUFFER) && tif->tif_rawdata) {\n\t\t    _TIFFfree(tif->tif_rawdata);\n\t\t    tif->tif_rawdata = NULL;\n\t\t    tif->tif_rawcc = 0;\n\t\t    tif->tif_rawdatasize = 0;\n\t    }\n\t    tif->tif_flags &= ~(TIFF_BEENWRITING|TIFF_BUFFERSETUP);\n\t}\n\n\ttd = &tif->tif_dir;\n\t/*\n\t * Size the directory so that we can calculate\n\t * offsets for the data items that aren't kept\n\t * in-place in each field.\n\t */\n\tnfields = 0;\n\tfor (b = 0; b <= FIELD_LAST; b++)\n\t\tif (TIFFFieldSet(tif, b) && b != FIELD_CUSTOM)\n\t\t\tnfields += (b < FIELD_SUBFILETYPE ? 2 : 1);\n        nfields += td->td_customValueCount;\n\tdirsize = nfields * sizeof (TIFFDirEntry);\n\tdata = (char*) _TIFFmalloc(dirsize);\n\tif (data == NULL) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t    \"Cannot write directory, out of space\");\n\t\treturn (0);\n\t}\n\t/*\n\t * Directory hasn't been placed yet, put\n\t * it at the end of the file and link it\n\t * into the existing directory structure.\n\t */\n\tif (tif->tif_diroff == 0 && !TIFFLinkDirectory(tif))\n\t\tgoto bad;\n\ttif->tif_dataoff = (toff_t)(\n\t    tif->tif_diroff + sizeof (uint16) + dirsize + sizeof (toff_t));\n\tif (tif->tif_dataoff & 1)\n\t\ttif->tif_dataoff++;\n\t(void) TIFFSeekFile(tif, tif->tif_dataoff, SEEK_SET);\n\ttif->tif_curdir++;\n\tdir = (TIFFDirEntry*) data;\n\t/*\n\t * Setup external form of directory\n\t * entries and write data items.\n\t */\n\t_TIFFmemcpy(fields, td->td_fieldsset, sizeof (fields));\n\t/*\n\t * Write out ExtraSamples tag only if\n\t * extra samples are present in the data.\n\t */\n\tif (FieldSet(fields, FIELD_EXTRASAMPLES) && !td->td_extrasamples) {\n\t\tResetFieldBit(fields, FIELD_EXTRASAMPLES);\n\t\tnfields--;\n\t\tdirsize -= sizeof (TIFFDirEntry);\n\t}\t\t\t\t\t\t\t\t/*XXX*/\n\tfor (fi = 0, nfi = tif->tif_nfields; nfi > 0; nfi--, fi++) {\n\t\tconst TIFFFieldInfo* fip = tif->tif_fieldinfo[fi];\n\n                /*\n                ** For custom fields, we test to see if the custom field\n                ** is set or not.  For normal fields, we just use the\n                ** FieldSet test. \n                */\n                if( fip->field_bit == FIELD_CUSTOM )\n                {\n                    int ci, is_set = FALSE;\n\n                    for( ci = 0; ci < td->td_customValueCount; ci++ )\n                        is_set |= (td->td_customValues[ci].info == fip);\n\n                    if( !is_set )\n                        continue;\n                }\n\t\telse if (!FieldSet(fields, fip->field_bit))\n                    continue;\n\n\n                /*\n                ** Handle other fields.\n                */\n\t\tswitch (fip->field_bit)\n                {\n\t\tcase FIELD_STRIPOFFSETS:\n\t\t\t/*\n\t\t\t * We use one field bit for both strip and tile\n\n\t\t\t * offsets, and so must be careful in selecting\n\t\t\t * the appropriate field descriptor (so that tags\n\t\t\t * are written in sorted order).\n\t\t\t */\n\t\t\ttag = isTiled(tif) ?\n\t\t\t    TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS;\n\t\t\tif (tag != fip->field_tag)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tdir->tdir_tag = (uint16) tag;\n\t\t\tdir->tdir_type = (uint16) TIFF_LONG;\n\t\t\tdir->tdir_count = (uint32) td->td_nstrips;\n\t\t\tif (!TIFFWriteLongArray(tif, dir, td->td_stripoffset))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_STRIPBYTECOUNTS:\n\t\t\t/*\n\t\t\t * We use one field bit for both strip and tile\n\t\t\t * byte counts, and so must be careful in selecting\n\t\t\t * the appropriate field descriptor (so that tags\n\t\t\t * are written in sorted order).\n\t\t\t */\n\t\t\ttag = isTiled(tif) ?\n\t\t\t    TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS;\n\t\t\tif (tag != fip->field_tag)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tdir->tdir_tag = (uint16) tag;\n\t\t\tdir->tdir_type = (uint16) TIFF_LONG;\n\t\t\tdir->tdir_count = (uint32) td->td_nstrips;\n\t\t\tif (!TIFFWriteLongArray(tif, dir,\n\t\t\t\t\t\ttd->td_stripbytecount))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_ROWSPERSTRIP:\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_ROWSPERSTRIP,\n\t\t\t    dir, td->td_rowsperstrip);\n\t\t\tbreak;\n\t\tcase FIELD_COLORMAP:\n\t\t\tif (!TIFFWriteShortTable(tif, TIFFTAG_COLORMAP, dir,\n\t\t\t    3, td->td_colormap))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_IMAGEDIMENSIONS:\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_IMAGEWIDTH,\n\t\t\t    dir++, td->td_imagewidth);\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_IMAGELENGTH,\n\t\t\t    dir, td->td_imagelength);\n\t\t\tbreak;\n\t\tcase FIELD_TILEDIMENSIONS:\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_TILEWIDTH,\n\t\t\t    dir++, td->td_tilewidth);\n\t\t\tTIFFSetupShortLong(tif, TIFFTAG_TILELENGTH,\n\t\t\t    dir, td->td_tilelength);\n\t\t\tbreak;\n\t\tcase FIELD_COMPRESSION:\n\t\t\tTIFFSetupShort(tif, TIFFTAG_COMPRESSION,\n\t\t\t    dir, td->td_compression);\n\t\t\tbreak;\n\t\tcase FIELD_PHOTOMETRIC:\n\t\t\tTIFFSetupShort(tif, TIFFTAG_PHOTOMETRIC,\n\t\t\t    dir, td->td_photometric);\n\t\t\tbreak;\n\t\tcase FIELD_POSITION:\n\t\t\tWriteRationalPair(TIFF_RATIONAL,\n\t\t\t    TIFFTAG_XPOSITION, td->td_xposition,\n\t\t\t    TIFFTAG_YPOSITION, td->td_yposition);\n\t\t\tbreak;\n\t\tcase FIELD_RESOLUTION:\n\t\t\tWriteRationalPair(TIFF_RATIONAL,\n\t\t\t    TIFFTAG_XRESOLUTION, td->td_xresolution,\n\t\t\t    TIFFTAG_YRESOLUTION, td->td_yresolution);\n\t\t\tbreak;\n\t\tcase FIELD_BITSPERSAMPLE:\n\t\tcase FIELD_MINSAMPLEVALUE:\n\t\tcase FIELD_MAXSAMPLEVALUE:\n\t\tcase FIELD_SAMPLEFORMAT:\n\t\t\tif (!TIFFWritePerSampleShorts(tif, fip->field_tag, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_SMINSAMPLEVALUE:\n\t\tcase FIELD_SMAXSAMPLEVALUE:\n\t\t\tif (!TIFFWritePerSampleAnys(tif,\n\t\t\t    _TIFFSampleToTagType(tif), fip->field_tag, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_PAGENUMBER:\n\t\tcase FIELD_HALFTONEHINTS:\n\t\tcase FIELD_YCBCRSUBSAMPLING:\n\t\t\tif (!TIFFSetupShortPair(tif, fip->field_tag, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_INKNAMES:\n\t\t\tif (!TIFFWriteInkNames(tif, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_TRANSFERFUNCTION:\n\t\t\tif (!TIFFWriteTransferFunction(tif, dir))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\tcase FIELD_SUBIFD:\n\t\t\t/*\n\t\t\t * XXX: Always write this field using LONG type\n\t\t\t * for backward compatibility.\n\t\t\t */\n\t\t\tdir->tdir_tag = (uint16) fip->field_tag;\n\t\t\tdir->tdir_type = (uint16) TIFF_LONG;\n\t\t\tdir->tdir_count = (uint32) td->td_nsubifd;\n\t\t\tif (!TIFFWriteLongArray(tif, dir, td->td_subifd))\n\t\t\t\tgoto bad;\n\t\t\t/*\n\t\t\t * Total hack: if this directory includes a SubIFD\n\t\t\t * tag then force the next <n> directories to be\n\t\t\t * written as ``sub directories'' of this one.  This\n\t\t\t * is used to write things like thumbnails and\n\t\t\t * image masks that one wants to keep out of the\n\t\t\t * normal directory linkage access mechanism.\n\t\t\t */\n\t\t\tif (dir->tdir_count > 0) {\n\t\t\t\ttif->tif_flags |= TIFF_INSUBIFD;\n\t\t\t\ttif->tif_nsubifd = (uint16) dir->tdir_count;\n\t\t\t\tif (dir->tdir_count > 1)\n\t\t\t\t\ttif->tif_subifdoff = dir->tdir_offset;\n\t\t\t\telse\n\t\t\t\t\ttif->tif_subifdoff = (uint32)(\n\t\t\t\t\t      tif->tif_diroff\n\t\t\t\t\t    + sizeof (uint16)\n\t\t\t\t\t    + ((char*)&dir->tdir_offset-data));\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* XXX: Should be fixed and removed. */\n\t\t\tif (fip->field_tag == TIFFTAG_DOTRANGE) {\n\t\t\t\tif (!TIFFSetupShortPair(tif, fip->field_tag, dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\telse if (!TIFFWriteNormalTag(tif, dir, fip))\n\t\t\t\tgoto bad;\n\t\t\tbreak;\n\t\t}\n\t\tdir++;\n                \n                if( fip->field_bit != FIELD_CUSTOM )\n                    ResetFieldBit(fields, fip->field_bit);\n\t}\n\n\t/*\n\t * Write directory.\n\t */\n\tdircount = (uint16) nfields;\n\tdiroff = (uint32) tif->tif_nextdiroff;\n\tif (tif->tif_flags & TIFF_SWAB) {\n\t\t/*\n\t\t * The file's byte order is opposite to the\n\t\t * native machine architecture.  We overwrite\n\t\t * the directory information with impunity\n\t\t * because it'll be released below after we\n\t\t * write it to the file.  Note that all the\n\t\t * other tag construction routines assume that\n\t\t * we do this byte-swapping; i.e. they only\n\t\t * byte-swap indirect data.\n\t\t */\n\t\tfor (dir = (TIFFDirEntry*) data; dircount; dir++, dircount--) {\n\t\t\tTIFFSwabArrayOfShort(&dir->tdir_tag, 2);\n\t\t\tTIFFSwabArrayOfLong(&dir->tdir_count, 2);\n\t\t}\n\t\tdircount = (uint16) nfields;\n\t\tTIFFSwabShort(&dircount);\n\t\tTIFFSwabLong(&diroff);\n\t}\n\t(void) TIFFSeekFile(tif, tif->tif_diroff, SEEK_SET);\n\tif (!WriteOK(tif, &dircount, sizeof (dircount))) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error writing directory count\");\n\t\tgoto bad;\n\t}\n\tif (!WriteOK(tif, data, dirsize)) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error writing directory contents\");\n\t\tgoto bad;\n\t}\n\tif (!WriteOK(tif, &diroff, sizeof (diroff))) {\n\t\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error writing directory link\");\n\t\tgoto bad;\n\t}\n\tif (done) {\n\t\tTIFFFreeDirectory(tif);\n\t\ttif->tif_flags &= ~TIFF_DIRTYDIRECT;\n\t\t(*tif->tif_cleanup)(tif);\n\n\t\t/*\n\t\t* Reset directory-related state for subsequent\n\t\t* directories.\n\t\t*/\n\t\tTIFFCreateDirectory(tif);\n\t}\n\t_TIFFfree(data);\n\treturn (1);\nbad:\n\t_TIFFfree(data);\n\treturn (0);\n}",
    "filename": "libtiff/tif_dirwrite.c"
  },
  "libtiff_2006-03-03-a72cf60-0a36d7f": {
    "buggy": "TIFFFetchData(TIFF* tif, TIFFDirEntry* dir, char* cp)\n{\n\tint w = TIFFDataWidth((TIFFDataType) dir->tdir_type);\n\ttsize_t cc = dir->tdir_count * w;\n\n\t/* Check for overflow. */\n\tif (!dir->tdir_count || !w || (tsize_t)dir->tdir_count / w != cc)\n\t\tgoto bad;\n\n\tif (!isMapped(tif)) {\n\t\tif (!SeekOK(tif, dir->tdir_offset))\n\t\t\tgoto bad;\n\t\tif (!ReadOK(tif, cp, cc))\n\t\t\tgoto bad;\n\t} else {\n\t\ttsize_t offset = dir->tdir_offset + cc;\n\t\t/* Check for overflow. */\n\t\tif ((tsize_t)dir->tdir_offset != offset - cc\n\t\t    || offset > (tsize_t)tif->tif_size)\n\t\t\tgoto bad;\n\t\t_TIFFmemcpy(cp, tif->tif_base + dir->tdir_offset, cc);\n\t}\n\tif (tif->tif_flags & TIFF_SWAB) {\n\t\tswitch (dir->tdir_type) {\n\t\tcase TIFF_SHORT:\n\t\tcase TIFF_SSHORT:\n\t\t\tTIFFSwabArrayOfShort((uint16*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_LONG:\n\t\tcase TIFF_SLONG:\n\t\tcase TIFF_FLOAT:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_RATIONAL:\n\t\tcase TIFF_SRATIONAL:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, 2*dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_DOUBLE:\n\t\t\tTIFFSwabArrayOfDouble((double*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (cc);\nbad:\n\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t     \"Error fetching data for field \\\"%s\\\"\",\n\t\t     _TIFFFieldWithTag(tif, dir->tdir_tag)->field_name);\n\treturn (tsize_t) 0;\n}",
    "start": 970,
    "end": 1018,
    "fix": "TIFFFetchData(TIFF* tif, TIFFDirEntry* dir, char* cp)\n{\n\tint w = TIFFDataWidth((TIFFDataType) dir->tdir_type);\n\ttsize_t cc = dir->tdir_count * w;\n\n\t/* Check for overflow. */\n\tif (!dir->tdir_count || !w || cc / w != (tsize_t)dir->tdir_count)\n\t\tgoto bad;\n\n\tif (!isMapped(tif)) {\n\t\tif (!SeekOK(tif, dir->tdir_offset))\n\t\t\tgoto bad;\n\t\tif (!ReadOK(tif, cp, cc))\n\t\t\tgoto bad;\n\t} else {\n\t\ttsize_t offset = dir->tdir_offset + cc;\n\t\t/* Check for overflow. */\n\t\tif ((tsize_t)dir->tdir_offset != offset - cc\n\t\t    || offset > (tsize_t)tif->tif_size)\n\t\t\tgoto bad;\n\t\t_TIFFmemcpy(cp, tif->tif_base + dir->tdir_offset, cc);\n\t}\n\tif (tif->tif_flags & TIFF_SWAB) {\n\t\tswitch (dir->tdir_type) {\n\t\tcase TIFF_SHORT:\n\t\tcase TIFF_SSHORT:\n\t\t\tTIFFSwabArrayOfShort((uint16*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_LONG:\n\t\tcase TIFF_SLONG:\n\t\tcase TIFF_FLOAT:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_RATIONAL:\n\t\tcase TIFF_SRATIONAL:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, 2*dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_DOUBLE:\n\t\t\tTIFFSwabArrayOfDouble((double*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (cc);\nbad:\n\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t     \"Error fetching data for field \\\"%s\\\"\",\n\t\t     _TIFFFieldWithTag(tif, dir->tdir_tag)->field_name);\n\treturn (tsize_t) 0;\n}",
    "filename": "libtiff/tif_dirread.c"
  },
  "libtiff_2006-03-03-eec4c06-ee65c74": {
    "buggy": "TIFFFetchData(TIFF* tif, TIFFDirEntry* dir, char* cp)\n{\n\tint w = TIFFDataWidth((TIFFDataType) dir->tdir_type);\n\ttsize_t cc = dir->tdir_count * w;\n\n\t/* Check for overflow. */\n\tif (!dir->tdir_count || !w || (tsize_t)dir->tdir_count / w != cc)\n\t\tgoto bad;\n\n\tif (!isMapped(tif)) {\n\t\tif (!SeekOK(tif, dir->tdir_offset))\n\t\t\tgoto bad;\n\t\tif (!ReadOK(tif, cp, cc))\n\t\t\tgoto bad;\n\t} else {\n\t\ttsize_t offset = dir->tdir_offset + cc;\n\t\t/* Check for overflow. */\n\t\tif ((tsize_t)dir->tdir_offset != offset - cc\n\t\t    || offset > (tsize_t)tif->tif_size)\n\t\t\tgoto bad;\n\t\t_TIFFmemcpy(cp, tif->tif_base + dir->tdir_offset, cc);\n\t}\n\tif (tif->tif_flags & TIFF_SWAB) {\n\t\tswitch (dir->tdir_type) {\n\t\tcase TIFF_SHORT:\n\t\tcase TIFF_SSHORT:\n\t\t\tTIFFSwabArrayOfShort((uint16*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_LONG:\n\t\tcase TIFF_SLONG:\n\t\tcase TIFF_FLOAT:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_RATIONAL:\n\t\tcase TIFF_SRATIONAL:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, 2*dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_DOUBLE:\n\t\t\tTIFFSwabArrayOfDouble((double*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (cc);\nbad:\n\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name,\n\t\t     \"Error fetching data for field \\\"%s\\\"\",\n\t\t     _TIFFFieldWithTag(tif, dir->tdir_tag)->field_name);\n\treturn (tsize_t) 0;\n}",
    "start": 970,
    "end": 1018,
    "fix": "TIFFFetchData(TIFF* tif, TIFFDirEntry* dir, char* cp)\n{\n\tint w = TIFFDataWidth((TIFFDataType) dir->tdir_type);\n\ttsize_t cc = dir->tdir_count * w;\n\n\tif (!isMapped(tif)) {\n\t\tif (!SeekOK(tif, dir->tdir_offset))\n\t\t\tgoto bad;\n\t\tif (!ReadOK(tif, cp, cc))\n\t\t\tgoto bad;\n\t} else {\n\t\tif (dir->tdir_offset + cc > tif->tif_size)\n\t\t\tgoto bad;\n\t\t_TIFFmemcpy(cp, tif->tif_base + dir->tdir_offset, cc);\n\t}\n\tif (tif->tif_flags & TIFF_SWAB) {\n\t\tswitch (dir->tdir_type) {\n\t\tcase TIFF_SHORT:\n\t\tcase TIFF_SSHORT:\n\t\t\tTIFFSwabArrayOfShort((uint16*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_LONG:\n\t\tcase TIFF_SLONG:\n\t\tcase TIFF_FLOAT:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_RATIONAL:\n\t\tcase TIFF_SRATIONAL:\n\t\t\tTIFFSwabArrayOfLong((uint32*) cp, 2*dir->tdir_count);\n\t\t\tbreak;\n\t\tcase TIFF_DOUBLE:\n\t\t\tTIFFSwabArrayOfDouble((double*) cp, dir->tdir_count);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (cc);\nbad:\n\tTIFFErrorExt(tif->tif_clientdata, tif->tif_name, \"Error fetching data for field \\\"%s\\\"\",\n\t    _TIFFFieldWithTag(tif, dir->tdir_tag)->field_name);\n\treturn ((tsize_t) 0);\n}",
    "filename": "libtiff/tif_dirread.c"
  },
  "libtiff_2007-07-13-09e8220-f2d989d": {
    "buggy": "TIFFReadEncodedStrip(TIFF* tif, uint32 strip, void* buf, tmsize_t size)\n{\n\tstatic const char module[] = \"TIFFReadEncodedStrip\";\n\tTIFFDirectory *td = &tif->tif_dir;\n\tuint32 rowsperstrip;\n\tuint32 stripsperplane;\n\tuint32 stripinplane;\n\tuint16 plane;\n\tuint32 rows;\n\ttmsize_t stripsize;\n\tif (!TIFFCheckRead(tif,0))\n\t\treturn((tmsize_t)(-1));\n\tif (strip>=td->td_nstrips)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\n\t\t    \"%uld: Strip out of range, max %uld\",(unsigned long)strip,\n\t\t    (unsigned long)td->td_nstrips);\n\t\treturn((tmsize_t)(-1));\n\t}\n\t/*\n\t * Calculate the strip size according to the number of\n\t * rows in the strip (check for truncated last strip on any\n\t * of the separations).\n\t */\n\trowsperstrip=td->td_rowsperstrip;\n\tif (rowsperstrip>td->td_imagelength)\n\t\trowsperstrip=td->td_imagelength;\n\tstripsperplane=((td->td_imagelength+rowsperstrip-1)/rowsperstrip);\n\tstripinplane=(strip%stripsperplane);\n\tplane=(strip/stripsperplane);\n\trows=td->td_imagelength-stripinplane*rowsperstrip;\n\tif (rows>rowsperstrip)\n\t\trows=rowsperstrip;\n\tstripsize=TIFFVStripSize(tif,rows);\n\tif (stripsize==0)\n\t\treturn((tmsize_t)(-1));\n\tif ((size!=(tmsize_t)(-1))&&(size<stripsize))\n\t\tstripsize=size;\n\tif (!TIFFFillStrip(tif,strip))\n\t\treturn((tmsize_t)(-1));\n\tif ((*tif->tif_decodestrip)(tif,buf,size,plane)<=0)\n\t\treturn((tmsize_t)(-1));\n\t(*tif->tif_postdecode)(tif,buf,size);\n\treturn(size);\n}",
    "start": 124,
    "end": 168,
    "fix": "TIFFReadEncodedStrip(TIFF* tif, uint32 strip, void* buf, tmsize_t size)\n{\n\tstatic const char module[] = \"TIFFReadEncodedStrip\";\n\tTIFFDirectory *td = &tif->tif_dir;\n\tuint32 rowsperstrip;\n\tuint32 stripsperplane;\n\tuint32 stripinplane;\n\tuint16 plane;\n\tuint32 rows;\n\ttmsize_t stripsize;\n\tif (!TIFFCheckRead(tif,0))\n\t\treturn((tmsize_t)(-1));\n\tif (strip>=td->td_nstrips)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\n\t\t    \"%uld: Strip out of range, max %uld\",(unsigned long)strip,\n\t\t    (unsigned long)td->td_nstrips);\n\t\treturn((tmsize_t)(-1));\n\t}\n\t/*\n\t * Calculate the strip size according to the number of\n\t * rows in the strip (check for truncated last strip on any\n\t * of the separations).\n\t */\n\trowsperstrip=td->td_rowsperstrip;\n\tif (rowsperstrip>td->td_imagelength)\n\t\trowsperstrip=td->td_imagelength;\n\tstripsperplane=((td->td_imagelength+rowsperstrip-1)/rowsperstrip);\n\tstripinplane=(strip%stripsperplane);\n\tplane=(strip/stripsperplane);\n\trows=td->td_imagelength-stripinplane*rowsperstrip;\n\tif (rows>rowsperstrip)\n\t\trows=rowsperstrip;\n\tstripsize=TIFFVStripSize(tif,rows);\n\tif (stripsize==0)\n\t\treturn((tmsize_t)(-1));\n\tif ((size!=(tmsize_t)(-1))&&(size<stripsize))\n\t\tstripsize=size;\n\tif (!TIFFFillStrip(tif,strip))\n\t\treturn((tmsize_t)(-1));\n\tif ((*tif->tif_decodestrip)(tif,buf,stripsize,plane)<=0)\n\t\treturn((tmsize_t)(-1));\n\t(*tif->tif_postdecode)(tif,buf,stripsize);\n\treturn(stripsize);\n}",
    "filename": "libtiff/tif_read.c"
  },
  "libtiff_2007-08-24-827b6bc-22da1d6": {
    "buggy": "_TIFFMergeFields(TIFF* tif, const TIFFField info[], uint32 n)\n{\n\tconst char module[] = \"_TIFFMergeFields\";\n\tconst char reason[] = \"for fields array\";\n\tTIFFField** tp;\n\tuint32 i;\n\n\tfor (i = 0; i < n; i++) {\n\t\tconst TIFFField *fip =\n\t\t\tTIFFFindField(tif, info[i].field_tag, TIFF_ANY);\n\t\tif (fip) {\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t\"Field with tag %lu is already registered as \\\"%s\\\"\",\n\t\t\t\t     (unsigned int) info[i].field_tag,\n\t\t\t\t     fip->field_name);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n        tif->tif_foundfield = NULL;\n\n\tif (tif->tif_fields && tif->tif_nfields > 0) {\n\t\ttif->tif_fields = (TIFFField**)\n\t\t\t_TIFFCheckRealloc(tif, tif->tif_fields,\n\t\t\t\t\t  (tif->tif_nfields + n),\n\t\t\t\t\t  sizeof(TIFFField *), reason);\n\t} else {\n\t\ttif->tif_fields = (TIFFField **)\n\t\t\t_TIFFCheckMalloc(tif, n, sizeof(TIFFField *),\n\t\t\t\t\t reason);\n\t}\n\tif (!tif->tif_fields) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t     \"Failed to allocate fields array\");\n\t\treturn 0;\n\t}\n\ttp = tif->tif_fields + tif->tif_nfields;\n\tfor (i = 0; i < n; i++)\n\t\t*tp++ = (TIFFField *) (info + i);\t/* XXX */\n\n        /* Sort the field info by tag number */\n\tqsort(tif->tif_fields, tif->tif_nfields += n,\n\t      sizeof(TIFFField *), tagCompare);\n\n\treturn n;\n}",
    "start": 326,
    "end": 371,
    "fix": "_TIFFMergeFields(TIFF* tif, const TIFFField info[], uint32 n)\n{\n\tconst char module[] = \"_TIFFMergeFields\";\n\tconst char reason[] = \"for fields array\";\n\tTIFFField** tp;\n\tuint32 i;\n\n        tif->tif_foundfield = NULL;\n\n\tif (tif->tif_fields && tif->tif_nfields > 0) {\n\t\ttif->tif_fields = (TIFFField**)\n\t\t\t_TIFFCheckRealloc(tif, tif->tif_fields,\n\t\t\t\t\t  (tif->tif_nfields + n),\n\t\t\t\t\t  sizeof(TIFFField *), reason);\n\t} else {\n\t\ttif->tif_fields = (TIFFField **)\n\t\t\t_TIFFCheckMalloc(tif, n, sizeof(TIFFField *),\n\t\t\t\t\t reason);\n\t}\n\tif (!tif->tif_fields) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t     \"Failed to allocate fields array\");\n\t\treturn 0;\n\t}\n\n\ttp = tif->tif_fields + tif->tif_nfields;\n\tfor (i = 0; i < n; i++) {\n\t\tconst TIFFField *fip =\n\t\t\tTIFFFindField(tif, info[i].field_tag, TIFF_ANY);\n\n                /* only add definitions that aren't already present */\n\t\tif (!fip) {\n                        tif->tif_fields[tif->tif_nfields] = (TIFFField *) (info+i);\n                        tif->tif_nfields++;\n                }\n\t}\n\n        /* Sort the field info by tag number */\n\tqsort(tif->tif_fields, tif->tif_nfields,\n\t      sizeof(TIFFField *), tagCompare);\n\n\treturn n;\n}",
    "filename": "libtiff/tif_dirinfo.c"
  },
  "libtiff_2007-11-02-371336d-865f7b2": {
    "buggy": "TIFFWriteDirectorySec(TIFF* tif, int isimage, int imagedone, uint64* pdiroff)\n{\n\tstatic const char module[] = \"TIFFWriteDirectorySec\";\n\tuint32 ndir;\n\tTIFFDirEntry* dir;\n\tuint32 dirsize;\n\tvoid* dirmem;\n\tuint32 m;\n\tif (tif->tif_mode == O_RDONLY)\n\t\treturn (1);\n\t/*\n\t * Clear write state so that subsequent images with\n\t * different characteristics get the right buffers\n\t * setup for them.\n\t */\n\tif (imagedone)\n\t{\n                tmsize_t orig_rawcc = tif->tif_rawcc;\n\n\t\tif (tif->tif_flags & TIFF_POSTENCODE)\n\t\t{\n\t\t\ttif->tif_flags &= ~TIFF_POSTENCODE;\n\t\t\tif (!(*tif->tif_postencode)(tif))\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\n\t\t\t\t    \"Error post-encoding before directory write\");\n\t\t\t\treturn (0);\n\t\t\t}\n\t\t}\n\t\t(*tif->tif_close)(tif);       /* shutdown encoder */\n\t\t/*\n\t\t * Flush any data that might have been written\n\t\t * by the compression close+cleanup routines.  But\n                 * be careful not to write stuff if we didn't add data\n                 * in the previous steps as the \"rawcc\" data may well be\n                 * a previously read tile/strip in mixed read/write mode.\n\t\t */\n\t\tif (tif->tif_rawcc > 0 && tif->tif_rawcc != orig_rawcc\n\t\t    && (tif->tif_flags & TIFF_BEENWRITING) != 0\n\t\t    && !TIFFFlushData1(tif))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"Error flushing data before directory write\");\n\t\t\treturn (0);\n\t\t}\n\t\tif ((tif->tif_flags & TIFF_MYBUFFER) && tif->tif_rawdata)\n\t\t{\n\t\t\t_TIFFfree(tif->tif_rawdata);\n\t\t\ttif->tif_rawdata = NULL;\n\t\t\ttif->tif_rawcc = 0;\n\t\t\ttif->tif_rawdatasize = 0;\n\t\t}\n\t\ttif->tif_flags &= ~(TIFF_BEENWRITING|TIFF_BUFFERSETUP);\n\t}\n\tdir=NULL;\n\tdirmem=NULL;\n\tdirsize=0;\n\twhile (1)\n\t{\n\t\tndir=0;\n\t\tif (isimage)\n\t\t{\n\t\t\tif (TIFFFieldSet(tif,FIELD_IMAGEDIMENSIONS))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_IMAGEWIDTH,tif->tif_dir.td_imagewidth))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_IMAGELENGTH,tif->tif_dir.td_imagelength))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_TILEDIMENSIONS))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_TILEWIDTH,tif->tif_dir.td_tilewidth))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_TILELENGTH,tif->tif_dir.td_tilelength))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_RESOLUTION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_XRESOLUTION,tif->tif_dir.td_xresolution))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_YRESOLUTION,tif->tif_dir.td_yresolution))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_POSITION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_XPOSITION,tif->tif_dir.td_xposition))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_YPOSITION,tif->tif_dir.td_yposition))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SUBFILETYPE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,TIFFTAG_SUBFILETYPE,tif->tif_dir.td_subfiletype))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_BITSPERSAMPLE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_BITSPERSAMPLE,tif->tif_dir.td_bitspersample))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_COMPRESSION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_COMPRESSION,tif->tif_dir.td_compression))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_PHOTOMETRIC))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_PHOTOMETRIC,tif->tif_dir.td_photometric))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_THRESHHOLDING))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_THRESHHOLDING,tif->tif_dir.td_threshholding))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_FILLORDER))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_FILLORDER,tif->tif_dir.td_fillorder))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_ORIENTATION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_ORIENTATION,tif->tif_dir.td_orientation))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SAMPLESPERPIXEL))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_SAMPLESPERPIXEL,tif->tif_dir.td_samplesperpixel))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_ROWSPERSTRIP))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_ROWSPERSTRIP,tif->tif_dir.td_rowsperstrip))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_MINSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_MINSAMPLEVALUE,tif->tif_dir.td_minsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_MAXSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_MAXSAMPLEVALUE,tif->tif_dir.td_maxsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_PLANARCONFIG))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_PLANARCONFIG,tif->tif_dir.td_planarconfig))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_RESOLUTIONUNIT))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_RESOLUTIONUNIT,tif->tif_dir.td_resolutionunit))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_PAGENUMBER))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_PAGENUMBER,2,&tif->tif_dir.td_pagenumber[0]))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_STRIPBYTECOUNTS))\n\t\t\t{\n\t\t\t\tif (!isTiled(tif))\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_STRIPBYTECOUNTS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripbytecount))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_TILEBYTECOUNTS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripbytecount))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_STRIPOFFSETS))\n\t\t\t{\n\t\t\t\tif (!isTiled(tif))\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_STRIPOFFSETS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripoffset))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_TILEOFFSETS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripoffset))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_COLORMAP))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagColormap(tif,&ndir,dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_EXTRASAMPLES))\n\t\t\t{\n\t\t\t\tif (tif->tif_dir.td_extrasamples)\n\t\t\t\t{\n\t\t\t\t\tuint16 na;\n\t\t\t\t\tuint16* nb;\n\t\t\t\t\tTIFFGetFieldDefaulted(tif,TIFFTAG_EXTRASAMPLES,&na,&nb);\n\t\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_EXTRASAMPLES,na,nb))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SAMPLEFORMAT))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_SAMPLEFORMAT,tif->tif_dir.td_sampleformat))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SMINSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagSampleformatPerSample(tif,&ndir,dir,TIFFTAG_SMINSAMPLEVALUE,tif->tif_dir.td_sminsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SMAXSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagSampleformatPerSample(tif,&ndir,dir,TIFFTAG_SMAXSAMPLEVALUE,tif->tif_dir.td_smaxsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_IMAGEDEPTH))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,TIFFTAG_IMAGEDEPTH,tif->tif_dir.td_imagedepth))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_TILEDEPTH))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,TIFFTAG_TILEDEPTH,tif->tif_dir.td_tiledepth))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_HALFTONEHINTS))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_HALFTONEHINTS,2,&tif->tif_dir.td_halftonehints[0]))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_YCBCRSUBSAMPLING))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_YCBCRSUBSAMPLING,2,&tif->tif_dir.td_ycbcrsubsampling[0]))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_YCBCRPOSITIONING))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_YCBCRPOSITIONING,tif->tif_dir.td_ycbcrpositioning))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_TRANSFERFUNCTION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagTransferfunction(tif,&ndir,dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_INKNAMES))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagAscii(tif,&ndir,dir,TIFFTAG_INKNAMES,tif->tif_dir.td_inknameslen,tif->tif_dir.td_inknames))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SUBIFD))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagSubifd(tif,&ndir,dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\t{\n\t\t\t\tuint32 n;\n\t\t\t\tfor (n=0; n<tif->tif_nfields; n++) {\n\t\t\t\t\tconst TIFFField* o;\n\t\t\t\t\to = tif->tif_fields[n];\n\t\t\t\t\tif ((o->field_bit>=FIELD_CODEC)&&(TIFFFieldSet(tif,o->field_bit)))\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch (o->get_field_type)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase TIFF_SETGET_ASCII:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint32 pa;\n\t\t\t\t\t\t\t\t\tchar* pb;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_ASCII);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==TIFF_VARIABLE);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==0);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&pb);\n\t\t\t\t\t\t\t\t\tpa=(uint32)(strlen(pb));\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagAscii(tif,&ndir,dir,o->field_tag,pa,pb))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase TIFF_SETGET_UINT16:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint16 p;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_SHORT);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==1);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==0);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&p);\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,o->field_tag,p))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase TIFF_SETGET_UINT32:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint32 p;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_LONG);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==1);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==0);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&p);\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,o->field_tag,p))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase TIFF_SETGET_C32_UINT8:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint32 pa;\n\t\t\t\t\t\t\t\t\tvoid* pb;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_UNDEFINED);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==TIFF_VARIABLE2);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==1);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&pa,&pb);\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagUndefinedArray(tif,&ndir,dir,o->field_tag,pa,pb))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tassert(0);   /* we should never get here */\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (m=0; m<(uint32)(tif->tif_dir.td_customValueCount); m++)\n\t\t{\n\t\t\tswitch (tif->tif_dir.td_customValues[m].info->field_type)\n\t\t\t{\n\t\t\t\tcase TIFF_ASCII:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagAscii(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_UNDEFINED:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagUndefinedArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_BYTE:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagByteArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SBYTE:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSbyteArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SHORT:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SSHORT:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSshortArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_LONG:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SLONG:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSlongArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_LONG8:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLong8Array(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SLONG8:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSlong8Array(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_RATIONAL:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagRationalArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SRATIONAL:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSrationalArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_FLOAT:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagFloatArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_DOUBLE:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagDoubleArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_IFD:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagIfdArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_IFD8:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagIfd8Array(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tassert(0);   /* we should never get here */\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (dir!=NULL)\n\t\t\tbreak;\n\t\tdir=_TIFFmalloc(ndir*sizeof(TIFFDirEntry));\n\t\tif (dir==NULL)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\tgoto bad;\n\t\t}\n\t\tif (isimage)\n\t\t{\n\t\t\tif ((tif->tif_diroff==0)&&(!TIFFLinkDirectory(tif)))\n\t\t\t\tgoto bad;\n\t\t}\n\t\telse\n\t\t\ttif->tif_diroff=(TIFFSeekFile(tif,0,SEEK_END)+1)&(~1);\n\t\tif (pdiroff!=NULL)\n\t\t\t*pdiroff=tif->tif_diroff;\n\t\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t\t\tdirsize=2+ndir*12+4;\n\t\telse\n\t\t\tdirsize=8+ndir*20+8;\n\t\ttif->tif_dataoff=tif->tif_diroff+dirsize;\n\t\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t\t\ttif->tif_dataoff=(uint32)tif->tif_dataoff;\n\t\tif ((tif->tif_dataoff<tif->tif_diroff)||(tif->tif_dataoff<(uint64)dirsize))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Maximum TIFF file size exceeded\");\n\t\t\tgoto bad;\n\t\t}\n\t\tif (tif->tif_dataoff&1)\n\t\t\ttif->tif_dataoff++;\n\t\tif (isimage)\n\t\t\ttif->tif_curdir++;\n\t}\n\tif (isimage)\n\t{\n\t\tif (TIFFFieldSet(tif,FIELD_SUBIFD)&&(tif->tif_subifdoff==0))\n\t\t{\n\t\t\tuint32 na;\n\t\t\tTIFFDirEntry* nb;\n\t\t\tfor (na=0, nb=dir; ; na++, nb++)\n\t\t\t{\n\t\t\t\tassert(na<ndir);\n\t\t\t\tif (nb->tdir_tag==TIFFTAG_SUBIFD)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t\t\t\ttif->tif_subifdoff=tif->tif_diroff+2+na*12+8;\n\t\t\telse\n\t\t\t\ttif->tif_subifdoff=tif->tif_diroff+8+na*20+12;\n\t\t}\n\t}\n\tdirmem=_TIFFmalloc(dirsize);\n\tif (dirmem==NULL)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\tgoto bad;\n\t}\n\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t{\n\t\tuint8* n;\n\t\tTIFFDirEntry* o;\n\t\tn=dirmem;\n\t\t*(uint16*)n=ndir;\n\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\tTIFFSwabShort((uint16*)n);\n\t\tn+=2;\n\t\to=dir;\n\t\tfor (m=0; m<ndir; m++)\n\t\t{\n\t\t\t*(uint16*)n=o->tdir_tag;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint16*)n=o->tdir_type;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint32*)n=(uint32)o->tdir_count;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabLong((uint32*)n);\n\t\t\tn+=4;\n\t\t\t_TIFFmemcpy(n,&o->tdir_offset,4);\n\t\t\tn+=4;\n\t\t\to++;\n\t\t}\n\t\t*(uint32*)n = (uint32)tif->tif_nextdiroff;\n\t}\n\telse\n\t{\n\t\tuint8* n;\n\t\tTIFFDirEntry* o;\n\t\tn=dirmem;\n\t\t*(uint64*)n=ndir;\n\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\tTIFFSwabLong8((uint64*)n);\n\t\tn+=8;\n\t\to=dir;\n\t\tfor (m=0; m<ndir; m++)\n\t\t{\n\t\t\t*(uint16*)n=o->tdir_tag;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint16*)n=o->tdir_type;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint64*)n=o->tdir_count;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabLong8((uint64*)n);\n\t\t\tn+=8;\n\t\t\t_TIFFmemcpy(n,&o->tdir_offset,8);\n\t\t\tn+=8;\n\t\t\to++;\n\t\t}\n\t\t*(uint64*)n = tif->tif_nextdiroff;\n\t}\n\t_TIFFfree(dir);\n\tdir=NULL;\n\tif (!SeekOK(tif,tif->tif_diroff))\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"IO error writing directory\");\n\t\tgoto bad;\n\t}\n\tif (!WriteOK(tif,dirmem,(tmsize_t)dirsize))\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"IO error writing directory\");\n\t\tgoto bad;\n\t}\n\t_TIFFfree(dirmem);\n\tif (imagedone)\n\t{\n\t\tTIFFFreeDirectory(tif);\n\t\ttif->tif_flags&=~TIFF_DIRTYDIRECT;\n\t\t(*tif->tif_cleanup)(tif);\n\t\t/*\n\t\t* Reset directory-related state for subsequent\n\t\t* directories.\n\t\t*/\n\t\tTIFFCreateDirectory(tif);\n\t}\n\treturn(1);\nbad:\n\tif (dir!=NULL)\n\t\t_TIFFfree(dir);\n\tif (dirmem!=NULL)\n\t\t_TIFFfree(dirmem);\n\treturn(0);\n}",
    "start": 309,
    "end": 852,
    "fix": "TIFFWriteDirectorySec(TIFF* tif, int isimage, int imagedone, uint64* pdiroff)\n{\n\tstatic const char module[] = \"TIFFWriteDirectorySec\";\n\tuint32 ndir;\n\tTIFFDirEntry* dir;\n\tuint32 dirsize;\n\tvoid* dirmem;\n\tuint32 m;\n\tif (tif->tif_mode == O_RDONLY)\n\t\treturn (1);\n\t/*\n\t * Clear write state so that subsequent images with\n\t * different characteristics get the right buffers\n\t * setup for them.\n\t */\n\tif (imagedone)\n\t{\n\t\tif (tif->tif_flags & TIFF_POSTENCODE)\n\t\t{\n\t\t\ttif->tif_flags &= ~TIFF_POSTENCODE;\n\t\t\tif (!(*tif->tif_postencode)(tif))\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\n\t\t\t\t    \"Error post-encoding before directory write\");\n\t\t\t\treturn (0);\n\t\t\t}\n\t\t}\n\t\t(*tif->tif_close)(tif);       /* shutdown encoder */\n\t\t/*\n\t\t * Flush any data that might have been written\n\t\t * by the compression close+cleanup routines.\n\t\t */\n\t\tif (tif->tif_rawcc > 0\n\t\t    && (tif->tif_flags & TIFF_BEENWRITING) != 0\n\t\t    && !TIFFFlushData1(tif))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"Error flushing data before directory write\");\n\t\t\treturn (0);\n\t\t}\n\t\tif ((tif->tif_flags & TIFF_MYBUFFER) && tif->tif_rawdata)\n\t\t{\n\t\t\t_TIFFfree(tif->tif_rawdata);\n\t\t\ttif->tif_rawdata = NULL;\n\t\t\ttif->tif_rawcc = 0;\n\t\t\ttif->tif_rawdatasize = 0;\n\t\t}\n\t\ttif->tif_flags &= ~(TIFF_BEENWRITING|TIFF_BUFFERSETUP);\n\t}\n\tdir=NULL;\n\tdirmem=NULL;\n\tdirsize=0;\n\twhile (1)\n\t{\n\t\tndir=0;\n\t\tif (isimage)\n\t\t{\n\t\t\tif (TIFFFieldSet(tif,FIELD_IMAGEDIMENSIONS))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_IMAGEWIDTH,tif->tif_dir.td_imagewidth))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_IMAGELENGTH,tif->tif_dir.td_imagelength))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_TILEDIMENSIONS))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_TILEWIDTH,tif->tif_dir.td_tilewidth))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_TILELENGTH,tif->tif_dir.td_tilelength))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_RESOLUTION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_XRESOLUTION,tif->tif_dir.td_xresolution))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_YRESOLUTION,tif->tif_dir.td_yresolution))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_POSITION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_XPOSITION,tif->tif_dir.td_xposition))\n\t\t\t\t\tgoto bad;\n\t\t\t\tif (!TIFFWriteDirectoryTagRational(tif,&ndir,dir,TIFFTAG_YPOSITION,tif->tif_dir.td_yposition))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SUBFILETYPE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,TIFFTAG_SUBFILETYPE,tif->tif_dir.td_subfiletype))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_BITSPERSAMPLE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_BITSPERSAMPLE,tif->tif_dir.td_bitspersample))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_COMPRESSION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_COMPRESSION,tif->tif_dir.td_compression))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_PHOTOMETRIC))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_PHOTOMETRIC,tif->tif_dir.td_photometric))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_THRESHHOLDING))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_THRESHHOLDING,tif->tif_dir.td_threshholding))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_FILLORDER))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_FILLORDER,tif->tif_dir.td_fillorder))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_ORIENTATION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_ORIENTATION,tif->tif_dir.td_orientation))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SAMPLESPERPIXEL))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_SAMPLESPERPIXEL,tif->tif_dir.td_samplesperpixel))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_ROWSPERSTRIP))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortLong(tif,&ndir,dir,TIFFTAG_ROWSPERSTRIP,tif->tif_dir.td_rowsperstrip))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_MINSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_MINSAMPLEVALUE,tif->tif_dir.td_minsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_MAXSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_MAXSAMPLEVALUE,tif->tif_dir.td_maxsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_PLANARCONFIG))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_PLANARCONFIG,tif->tif_dir.td_planarconfig))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_RESOLUTIONUNIT))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_RESOLUTIONUNIT,tif->tif_dir.td_resolutionunit))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_PAGENUMBER))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_PAGENUMBER,2,&tif->tif_dir.td_pagenumber[0]))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_STRIPBYTECOUNTS))\n\t\t\t{\n\t\t\t\tif (!isTiled(tif))\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_STRIPBYTECOUNTS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripbytecount))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_TILEBYTECOUNTS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripbytecount))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_STRIPOFFSETS))\n\t\t\t{\n\t\t\t\tif (!isTiled(tif))\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_STRIPOFFSETS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripoffset))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_TILEOFFSETS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripoffset))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_COLORMAP))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagColormap(tif,&ndir,dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_EXTRASAMPLES))\n\t\t\t{\n\t\t\t\tif (tif->tif_dir.td_extrasamples)\n\t\t\t\t{\n\t\t\t\t\tuint16 na;\n\t\t\t\t\tuint16* nb;\n\t\t\t\t\tTIFFGetFieldDefaulted(tif,TIFFTAG_EXTRASAMPLES,&na,&nb);\n\t\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_EXTRASAMPLES,na,nb))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SAMPLEFORMAT))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortPerSample(tif,&ndir,dir,TIFFTAG_SAMPLEFORMAT,tif->tif_dir.td_sampleformat))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SMINSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagSampleformatPerSample(tif,&ndir,dir,TIFFTAG_SMINSAMPLEVALUE,tif->tif_dir.td_sminsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SMAXSAMPLEVALUE))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagSampleformatPerSample(tif,&ndir,dir,TIFFTAG_SMAXSAMPLEVALUE,tif->tif_dir.td_smaxsamplevalue))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_IMAGEDEPTH))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,TIFFTAG_IMAGEDEPTH,tif->tif_dir.td_imagedepth))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_TILEDEPTH))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,TIFFTAG_TILEDEPTH,tif->tif_dir.td_tiledepth))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_HALFTONEHINTS))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_HALFTONEHINTS,2,&tif->tif_dir.td_halftonehints[0]))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_YCBCRSUBSAMPLING))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,TIFFTAG_YCBCRSUBSAMPLING,2,&tif->tif_dir.td_ycbcrsubsampling[0]))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_YCBCRPOSITIONING))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,TIFFTAG_YCBCRPOSITIONING,tif->tif_dir.td_ycbcrpositioning))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_TRANSFERFUNCTION))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagTransferfunction(tif,&ndir,dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_INKNAMES))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagAscii(tif,&ndir,dir,TIFFTAG_INKNAMES,tif->tif_dir.td_inknameslen,tif->tif_dir.td_inknames))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\tif (TIFFFieldSet(tif,FIELD_SUBIFD))\n\t\t\t{\n\t\t\t\tif (!TIFFWriteDirectoryTagSubifd(tif,&ndir,dir))\n\t\t\t\t\tgoto bad;\n\t\t\t}\n\t\t\t{\n\t\t\t\tuint32 n;\n\t\t\t\tfor (n=0; n<tif->tif_nfields; n++) {\n\t\t\t\t\tconst TIFFField* o;\n\t\t\t\t\to = tif->tif_fields[n];\n\t\t\t\t\tif ((o->field_bit>=FIELD_CODEC)&&(TIFFFieldSet(tif,o->field_bit)))\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch (o->get_field_type)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase TIFF_SETGET_ASCII:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint32 pa;\n\t\t\t\t\t\t\t\t\tchar* pb;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_ASCII);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==TIFF_VARIABLE);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==0);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&pb);\n\t\t\t\t\t\t\t\t\tpa=(uint32)(strlen(pb));\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagAscii(tif,&ndir,dir,o->field_tag,pa,pb))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase TIFF_SETGET_UINT16:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint16 p;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_SHORT);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==1);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==0);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&p);\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagShort(tif,&ndir,dir,o->field_tag,p))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase TIFF_SETGET_UINT32:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint32 p;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_LONG);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==1);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==0);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&p);\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagLong(tif,&ndir,dir,o->field_tag,p))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase TIFF_SETGET_C32_UINT8:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuint32 pa;\n\t\t\t\t\t\t\t\t\tvoid* pb;\n\t\t\t\t\t\t\t\t\tassert(o->field_type==TIFF_UNDEFINED);\n\t\t\t\t\t\t\t\t\tassert(o->field_readcount==TIFF_VARIABLE2);\n\t\t\t\t\t\t\t\t\tassert(o->field_passcount==1);\n\t\t\t\t\t\t\t\t\tTIFFGetField(tif,o->field_tag,&pa,&pb);\n\t\t\t\t\t\t\t\t\tif (!TIFFWriteDirectoryTagUndefinedArray(tif,&ndir,dir,o->field_tag,pa,pb))\n\t\t\t\t\t\t\t\t\t\tgoto bad;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tassert(0);   /* we should never get here */\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (m=0; m<(uint32)(tif->tif_dir.td_customValueCount); m++)\n\t\t{\n\t\t\tswitch (tif->tif_dir.td_customValues[m].info->field_type)\n\t\t\t{\n\t\t\t\tcase TIFF_ASCII:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagAscii(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_UNDEFINED:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagUndefinedArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_BYTE:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagByteArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SBYTE:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSbyteArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SHORT:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagShortArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SSHORT:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSshortArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_LONG:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLongArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SLONG:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSlongArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_LONG8:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagLong8Array(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SLONG8:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSlong8Array(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_RATIONAL:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagRationalArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_SRATIONAL:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagSrationalArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_FLOAT:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagFloatArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_DOUBLE:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagDoubleArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_IFD:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagIfdArray(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TIFF_IFD8:\n\t\t\t\t\tif (!TIFFWriteDirectoryTagIfd8Array(tif,&ndir,dir,tif->tif_dir.td_customValues[m].info->field_tag,tif->tif_dir.td_customValues[m].count,tif->tif_dir.td_customValues[m].value))\n\t\t\t\t\t\tgoto bad;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tassert(0);   /* we should never get here */\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (dir!=NULL)\n\t\t\tbreak;\n\t\tdir=_TIFFmalloc(ndir*sizeof(TIFFDirEntry));\n\t\tif (dir==NULL)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\tgoto bad;\n\t\t}\n\t\tif (isimage)\n\t\t{\n\t\t\tif ((tif->tif_diroff==0)&&(!TIFFLinkDirectory(tif)))\n\t\t\t\tgoto bad;\n\t\t}\n\t\telse\n\t\t\ttif->tif_diroff=(TIFFSeekFile(tif,0,SEEK_END)+1)&(~1);\n\t\tif (pdiroff!=NULL)\n\t\t\t*pdiroff=tif->tif_diroff;\n\t\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t\t\tdirsize=2+ndir*12+4;\n\t\telse\n\t\t\tdirsize=8+ndir*20+8;\n\t\ttif->tif_dataoff=tif->tif_diroff+dirsize;\n\t\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t\t\ttif->tif_dataoff=(uint32)tif->tif_dataoff;\n\t\tif ((tif->tif_dataoff<tif->tif_diroff)||(tif->tif_dataoff<(uint64)dirsize))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Maximum TIFF file size exceeded\");\n\t\t\tgoto bad;\n\t\t}\n\t\tif (tif->tif_dataoff&1)\n\t\t\ttif->tif_dataoff++;\n\t\tif (isimage)\n\t\t\ttif->tif_curdir++;\n\t}\n\tif (isimage)\n\t{\n\t\tif (TIFFFieldSet(tif,FIELD_SUBIFD)&&(tif->tif_subifdoff==0))\n\t\t{\n\t\t\tuint32 na;\n\t\t\tTIFFDirEntry* nb;\n\t\t\tfor (na=0, nb=dir; ; na++, nb++)\n\t\t\t{\n\t\t\t\tassert(na<ndir);\n\t\t\t\tif (nb->tdir_tag==TIFFTAG_SUBIFD)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t\t\t\ttif->tif_subifdoff=tif->tif_diroff+2+na*12+8;\n\t\t\telse\n\t\t\t\ttif->tif_subifdoff=tif->tif_diroff+8+na*20+12;\n\t\t}\n\t}\n\tdirmem=_TIFFmalloc(dirsize);\n\tif (dirmem==NULL)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\tgoto bad;\n\t}\n\tif (!(tif->tif_flags&TIFF_BIGTIFF))\n\t{\n\t\tuint8* n;\n\t\tTIFFDirEntry* o;\n\t\tn=dirmem;\n\t\t*(uint16*)n=ndir;\n\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\tTIFFSwabShort((uint16*)n);\n\t\tn+=2;\n\t\to=dir;\n\t\tfor (m=0; m<ndir; m++)\n\t\t{\n\t\t\t*(uint16*)n=o->tdir_tag;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint16*)n=o->tdir_type;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint32*)n=(uint32)o->tdir_count;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabLong((uint32*)n);\n\t\t\tn+=4;\n\t\t\t_TIFFmemcpy(n,&o->tdir_offset,4);\n\t\t\tn+=4;\n\t\t\to++;\n\t\t}\n\t\t*(uint32*)n = (uint32)tif->tif_nextdiroff;\n\t}\n\telse\n\t{\n\t\tuint8* n;\n\t\tTIFFDirEntry* o;\n\t\tn=dirmem;\n\t\t*(uint64*)n=ndir;\n\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\tTIFFSwabLong8((uint64*)n);\n\t\tn+=8;\n\t\to=dir;\n\t\tfor (m=0; m<ndir; m++)\n\t\t{\n\t\t\t*(uint16*)n=o->tdir_tag;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint16*)n=o->tdir_type;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabShort((uint16*)n);\n\t\t\tn+=2;\n\t\t\t*(uint64*)n=o->tdir_count;\n\t\t\tif (tif->tif_flags&TIFF_SWAB)\n\t\t\t\tTIFFSwabLong8((uint64*)n);\n\t\t\tn+=8;\n\t\t\t_TIFFmemcpy(n,&o->tdir_offset,8);\n\t\t\tn+=8;\n\t\t\to++;\n\t\t}\n\t\t*(uint64*)n = tif->tif_nextdiroff;\n\t}\n\t_TIFFfree(dir);\n\tdir=NULL;\n\tif (!SeekOK(tif,tif->tif_diroff))\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"IO error writing directory\");\n\t\tgoto bad;\n\t}\n\tif (!WriteOK(tif,dirmem,(tmsize_t)dirsize))\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"IO error writing directory\");\n\t\tgoto bad;\n\t}\n\t_TIFFfree(dirmem);\n\tif (imagedone)\n\t{\n\t\tTIFFFreeDirectory(tif);\n\t\ttif->tif_flags&=~TIFF_DIRTYDIRECT;\n\t\t(*tif->tif_cleanup)(tif);\n\t\t/*\n\t\t* Reset directory-related state for subsequent\n\t\t* directories.\n\t\t*/\n\t\tTIFFCreateDirectory(tif);\n\t}\n\treturn(1);\nbad:\n\tif (dir!=NULL)\n\t\t_TIFFfree(dir);\n\tif (dirmem!=NULL)\n\t\t_TIFFfree(dirmem);\n\treturn(0);\n}",
    "filename": "libtiff/tif_dirwrite.c"
  },
  "libtiff_2009-02-05-764dbba-2e42d63": {
    "buggy": "loadImage(TIFF* in, struct image_data *image, struct dump_opts * dump, unsigned char **read_ptr)\n  {\n  uint32   i;\n  float    xres=0.0, yres=0.0;\n  uint16   nstrips, ntiles, planar, bps, spp, res_unit, photometric, orientation;\n  uint32   width, length, rowsperstrip;\n  uint32   stsize, tlsize, buffsize, scanlinesize;\n  unsigned char *read_buff = NULL;\n  unsigned char *new_buff  = NULL;\n  int      readunit = 0;\n  static   uint32  prev_readsize = 0;\n\n  TIFFGetFieldDefaulted(in, TIFFTAG_BITSPERSAMPLE, &bps);\n  TIFFGetFieldDefaulted(in, TIFFTAG_SAMPLESPERPIXEL, &spp);\n  TIFFGetFieldDefaulted(in, TIFFTAG_PLANARCONFIG, &planar);\n  TIFFGetFieldDefaulted(in, TIFFTAG_ORIENTATION, &orientation);\n  TIFFGetField(in, TIFFTAG_PHOTOMETRIC, &photometric);\n  TIFFGetField(in, TIFFTAG_IMAGEWIDTH,  &width);\n  TIFFGetField(in, TIFFTAG_IMAGELENGTH, &length);\n  TIFFGetField(in, TIFFTAG_XRESOLUTION, &xres);\n  TIFFGetField(in, TIFFTAG_YRESOLUTION, &yres);\n  TIFFGetFieldDefaulted(in, TIFFTAG_RESOLUTIONUNIT, &res_unit);\n  scanlinesize = TIFFScanlineSize(in);\n\n  image->bps = bps;\n  image->spp = spp;\n  image->planar = planar;\n  image->width = width;\n  image->length = length;\n  image->xres = xres;\n  image->yres = yres;\n  image->res_unit = res_unit;\n  image->photometric = photometric;\n  image->orientation = orientation;\n  switch (orientation)\n    {\n    case 0:\n    case ORIENTATION_TOPLEFT:\n         image->adjustments = 0;\n\t break;\n    case ORIENTATION_TOPRIGHT:\n         image->adjustments = MIRROR_HORIZ;\n\t break;\n    case ORIENTATION_BOTRIGHT:\n         image->adjustments = ROTATECW_180;\n\t break;\n    case ORIENTATION_BOTLEFT:\n         image->adjustments = MIRROR_VERT; \n\t break;\n    case ORIENTATION_LEFTTOP:\n         image->adjustments = MIRROR_VERT | ROTATECW_90;\n\t break;\n    case ORIENTATION_RIGHTTOP:\n         image->adjustments = ROTATECW_90;\n\t break;\n    case ORIENTATION_RIGHTBOT:\n         image->adjustments = MIRROR_VERT | ROTATECW_270;\n\t break; \n    case ORIENTATION_LEFTBOT:\n         image->adjustments = ROTATECW_270;\n\t break;\n    default:\n         image->adjustments = 0;\n         image->orientation = ORIENTATION_TOPLEFT;\n   }\n\n  if ((bps == 0) || (spp == 0))\n    {\n    TIFFError(\"loadImage\", \"Invalid samples per pixel (%d) or bits per sample (%d)\",\n\t       spp, bps);\n    return (-1);\n    }\n\n  if (TIFFIsTiled(in))\n    {\n    readunit = TILE;\n    tlsize = TIFFTileSize(in);\n    ntiles = TIFFNumberOfTiles(in);\n    buffsize = tlsize * ntiles;\n    if (dump->infile != NULL)\n      dump_info (dump->infile, dump->format, \"\", \n                 \"Tilesize: %u, Number of Tiles: %u, Scanline size: %u\",\n                 tlsize, ntiles, scanlinesize);\n    }\n  else\n    {\n    readunit = STRIP;\n    TIFFGetFieldDefaulted(in, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);\n    stsize = TIFFStripSize(in);\n    nstrips = TIFFNumberOfStrips(in);\n    buffsize = stsize * nstrips;\n    if (dump->infile != NULL)\n      dump_info (dump->infile, dump->format, \"\",\n                 \"Stripsize: %u, Number of Strips: %u, Rows per Strip: %u, Scanline size: %u\",\n\t\t stsize, nstrips, rowsperstrip, scanlinesize);\n    }\n\n  read_buff = *read_ptr;\n  if (!read_buff)\n    read_buff = (unsigned char *)_TIFFmalloc(buffsize);\n  else\n    {\n    if (prev_readsize < buffsize)\n      {\n      new_buff = _TIFFrealloc(read_buff, buffsize);\n      if (!new_buff)\n        {\n\tfree (read_buff);\n        read_buff = (unsigned char *)_TIFFmalloc(buffsize);\n        }\n      else\n        read_buff = new_buff;\n      }\n    }\n\n  if (!read_buff)\n    {\n    TIFFError(\"loadImage\", \"Unable to allocate/reallocate read buffer\");\n    return (-1);\n    }\n  _TIFFmemset(read_buff, '\\0', buffsize);\n  prev_readsize = buffsize;\n  *read_ptr = read_buff;\n\n  /* N.B. The read functions used copy separate plane data into a buffer as interleaved\n   * samples rather than separate planes so the same logic works to extract regions\n   * regardless of the way the data are organized in the input file.\n   */\n  switch (readunit) {\n    case STRIP:\n         if (planar == PLANARCONFIG_CONTIG)\n           {\n\t   if (!(readContigStripsIntoBuffer(in, read_buff, length, width, spp)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read contiguous strips into buffer\");\n\t     return (-1);\n             }\n           }\n         else\n           {\n\t   if (!(readSeparateStripsIntoBuffer(in, read_buff, length, width, spp, dump)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read separate strips into buffer\");\n\t     return (-1);\n             }\n           }\n         break;\n\n    case TILE:\n         if (planar == PLANARCONFIG_CONTIG)\n           {\n\t   if (!(readContigTilesIntoBuffer(in, read_buff, length, width, spp)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read contiguous tiles into buffer\");\n\t     return (-1);\n             }\n           }\n         else\n           {\n\t   if (!(readSeparateTilesIntoBuffer(in, read_buff, length, width, spp)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read separate tiles into buffer\");\n\t     return (-1);\n             }\n           }\n         break;\n    default: TIFFError(\"loadImage\", \"Unsupported image file format\");\n          return (-1);\n          break;\n    }\n  if ((dump->infile != NULL) && (dump->level == 2))\n    {\n    dump_info  (dump->infile, dump->format, \"loadImage\", \n                \"Image width %d, length %d, Raw image data, %4d bytes\",\n                width, length,  buffsize);\n    dump_info  (dump->infile, dump->format, \"\", \n                \"Bits per sample %d, Samples per pixel %d\", bps, spp);\n\n    for (i = 0; i < length; i++)\n      dump_buffer(dump->infile, dump->format, 1, scanlinesize, \n                  i, read_buff + (i * scanlinesize));\n    }\n  return (0);\n  }   /* end loadImage */",
    "start": 4948,
    "end": 5131,
    "fix": "loadImage(TIFF* in, struct image_data *image, struct dump_opts * dump, unsigned char **read_ptr)\n  {\n  uint32   i;\n  float    xres=0.0, yres=0.0;\n  uint16   nstrips, ntiles, planar, bps, spp, res_unit, photometric, orientation;\n  uint32   width, length, rowsperstrip;\n  uint32   stsize, tlsize, buffsize, scanlinesize;\n  unsigned char *read_buff = NULL;\n  unsigned char *new_buff  = NULL;\n  int      readunit = 0;\n  static   uint32  prev_readsize = 0;\n\n  TIFFGetFieldDefaulted(in, TIFFTAG_BITSPERSAMPLE, &bps);\n  TIFFGetFieldDefaulted(in, TIFFTAG_SAMPLESPERPIXEL, &spp);\n  TIFFGetFieldDefaulted(in, TIFFTAG_PLANARCONFIG, &planar);\n  TIFFGetFieldDefaulted(in, TIFFTAG_ORIENTATION, &orientation);\n  TIFFGetField(in, TIFFTAG_PHOTOMETRIC, &photometric);\n  TIFFGetField(in, TIFFTAG_IMAGEWIDTH,  &width);\n  TIFFGetField(in, TIFFTAG_IMAGELENGTH, &length);\n  TIFFGetField(in, TIFFTAG_XRESOLUTION, &xres);\n  TIFFGetField(in, TIFFTAG_YRESOLUTION, &yres);\n  TIFFGetField(in, TIFFTAG_RESOLUTIONUNIT, &res_unit);\n  scanlinesize = TIFFScanlineSize(in);\n\n  image->bps = bps;\n  image->spp = spp;\n  image->planar = planar;\n  image->width = width;\n  image->length = length;\n  image->xres = xres;\n  image->yres = yres;\n  image->res_unit = res_unit;\n  image->photometric = photometric;\n  image->orientation = orientation;\n  switch (orientation)\n    {\n    case 0:\n    case ORIENTATION_TOPLEFT:\n         image->adjustments = 0;\n\t break;\n    case ORIENTATION_TOPRIGHT:\n         image->adjustments = MIRROR_HORIZ;\n\t break;\n    case ORIENTATION_BOTRIGHT:\n         image->adjustments = ROTATECW_180;\n\t break;\n    case ORIENTATION_BOTLEFT:\n         image->adjustments = MIRROR_VERT; \n\t break;\n    case ORIENTATION_LEFTTOP:\n         image->adjustments = MIRROR_VERT | ROTATECW_90;\n\t break;\n    case ORIENTATION_RIGHTTOP:\n         image->adjustments = ROTATECW_90;\n\t break;\n    case ORIENTATION_RIGHTBOT:\n         image->adjustments = MIRROR_VERT | ROTATECW_270;\n\t break; \n    case ORIENTATION_LEFTBOT:\n         image->adjustments = ROTATECW_270;\n\t break;\n    default:\n         image->adjustments = 0;\n         image->orientation = ORIENTATION_TOPLEFT;\n   }\n\n  if ((bps == 0) || (spp == 0))\n    {\n    TIFFError(\"loadImage\", \"Invalid samples per pixel (%d) or bits per sample (%d)\",\n\t       spp, bps);\n    return (-1);\n    }\n\n  if (TIFFIsTiled(in))\n    {\n    readunit = TILE;\n    tlsize = TIFFTileSize(in);\n    ntiles = TIFFNumberOfTiles(in);\n    buffsize = tlsize * ntiles;\n    if (dump->infile != NULL)\n      dump_info (dump->infile, dump->format, \"\", \n                 \"Tilesize: %u, Number of Tiles: %u, Scanline size: %u\",\n                 tlsize, ntiles, scanlinesize);\n    }\n  else\n    {\n    readunit = STRIP;\n    TIFFGetFieldDefaulted(in, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);\n    stsize = TIFFStripSize(in);\n    nstrips = TIFFNumberOfStrips(in);\n    buffsize = stsize * nstrips;\n    if (dump->infile != NULL)\n      dump_info (dump->infile, dump->format, \"\",\n                 \"Stripsize: %u, Number of Strips: %u, Rows per Strip: %u, Scanline size: %u\",\n\t\t stsize, nstrips, rowsperstrip, scanlinesize);\n    }\n\n  read_buff = *read_ptr;\n  if (!read_buff)\n    read_buff = (unsigned char *)_TIFFmalloc(buffsize);\n  else\n    {\n    if (prev_readsize < buffsize)\n      {\n      new_buff = _TIFFrealloc(read_buff, buffsize);\n      if (!new_buff)\n        {\n\tfree (read_buff);\n        read_buff = (unsigned char *)_TIFFmalloc(buffsize);\n        }\n      else\n        read_buff = new_buff;\n      }\n    }\n\n  if (!read_buff)\n    {\n    TIFFError(\"loadImage\", \"Unable to allocate/reallocate read buffer\");\n    return (-1);\n    }\n  _TIFFmemset(read_buff, '\\0', buffsize);\n  prev_readsize = buffsize;\n  *read_ptr = read_buff;\n\n  /* N.B. The read functions used copy separate plane data into a buffer as interleaved\n   * samples rather than separate planes so the same logic works to extract regions\n   * regardless of the way the data are organized in the input file.\n   */\n  switch (readunit) {\n    case STRIP:\n         if (planar == PLANARCONFIG_CONTIG)\n           {\n\t   if (!(readContigStripsIntoBuffer(in, read_buff, length, width, spp)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read contiguous strips into buffer\");\n\t     return (-1);\n             }\n           }\n         else\n           {\n\t   if (!(readSeparateStripsIntoBuffer(in, read_buff, length, width, spp, dump)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read separate strips into buffer\");\n\t     return (-1);\n             }\n           }\n         break;\n\n    case TILE:\n         if (planar == PLANARCONFIG_CONTIG)\n           {\n\t   if (!(readContigTilesIntoBuffer(in, read_buff, length, width, spp)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read contiguous tiles into buffer\");\n\t     return (-1);\n             }\n           }\n         else\n           {\n\t   if (!(readSeparateTilesIntoBuffer(in, read_buff, length, width, spp)))\n\t     {\n\t     TIFFError(\"loadImage\", \"Unable to read separate tiles into buffer\");\n\t     return (-1);\n             }\n           }\n         break;\n    default: TIFFError(\"loadImage\", \"Unsupported image file format\");\n          return (-1);\n          break;\n    }\n  if ((dump->infile != NULL) && (dump->level == 2))\n    {\n    dump_info  (dump->infile, dump->format, \"loadImage\", \n                \"Image width %d, length %d, Raw image data, %4d bytes\",\n                width, length,  buffsize);\n    dump_info  (dump->infile, dump->format, \"\", \n                \"Bits per sample %d, Samples per pixel %d\", bps, spp);\n\n    for (i = 0; i < length; i++)\n      dump_buffer(dump->infile, dump->format, 1, scanlinesize, \n                  i, read_buff + (i * scanlinesize));\n    }\n  return (0);\n  }   /* end loadImage */",
    "filename": "tools/tiffcrop.c"
  },
  "libtiff_2009-06-30-b44af47-e0b51f3": {
    "buggy": "processCompressOptions(char* opt)\n{\n\tif (streq(opt, \"none\")) {\n\t\tdefcompression = COMPRESSION_NONE;\n\t} else if (streq(opt, \"packbits\")) {\n\t\tdefcompression = COMPRESSION_PACKBITS;\n\t} else if (strneq(opt, \"jpeg\", 4)) {\n\t\tchar* cp = strchr(opt, ':');\n\n\t\tdefcompression = COMPRESSION_JPEG;\n\t\twhile( cp )\n\t\t{\n\t\t\tif (isdigit((int)cp[1]))\n\t\t\t\tquality = atoi(cp+1);\n\t\t\telse if (cp[1] == 'r' )\n\t\t\t\tjpegcolormode = JPEGCOLORMODE_RAW;\n\t\t\telse\n\t\t\t\tusage();\n\n\t\t\tcp = strchr(cp+1,':');\n\t\t}\n\t} else if (strneq(opt, \"g3\", 2)) {\n\t\tprocessG3Options(opt);\n\t\tdefcompression = COMPRESSION_CCITTFAX3;\n\t} else if (streq(opt, \"g4\")) {\n\t\tdefcompression = COMPRESSION_CCITTFAX4;\n\t} else if (strneq(opt, \"lzw\", 3)) {\n\t\tchar* cp = strchr(opt, ':');\n\t\tif (cp)\n\t\t\tdefpredictor = atoi(cp+1);\n\t\tdefcompression = COMPRESSION_LZW;\n\t} else if (strneq(opt, \"zip\", 3)) {\n\t\tchar* cp = strchr(opt, ':');\n\t\tif (cp)\n\t\t\tdefpredictor = atoi(cp+1);\n\t\tdefcompression = COMPRESSION_ADOBE_DEFLATE;\n\t} else if (strneq(opt, \"jbig\", 4)) {\n\t\tdefcompression = COMPRESSION_JBIG;\n\t} else\n\t\treturn (0);\n\treturn (1);\n}",
    "start": 330,
    "end": 371,
    "fix": "processCompressOptions(char* opt)\n{\n\tif (streq(opt, \"none\")) {\n\t\tdefcompression = COMPRESSION_NONE;\n\t} else if (streq(opt, \"packbits\")) {\n\t\tdefcompression = COMPRESSION_PACKBITS;\n\t} else if (strneq(opt, \"jpeg\", 4)) {\n\t\tchar* cp = strchr(opt, ':');\n\n\t\tdefcompression = COMPRESSION_JPEG;\n\t\twhile( cp )\n\t\t{\n\t\t\tif (isdigit((int)cp[1]))\n\t\t\t\tquality = atoi(cp+1);\n\t\t\telse if (cp[1] == 'r' )\n\t\t\t\tjpegcolormode = JPEGCOLORMODE_RAW;\n\t\t\telse\n\t\t\t\tusage();\n\n\t\t\tcp = strchr(cp+1,':');\n\t\t}\n\t} else if (strneq(opt, \"g3\", 2)) {\n\t\tprocessG3Options(opt);\n\t\tdefcompression = COMPRESSION_CCITTFAX3;\n\t} else if (streq(opt, \"g4\")) {\n\t\tdefcompression = COMPRESSION_CCITTFAX4;\n\t} else if (strneq(opt, \"lzw\", 3)) {\n\t\tchar* cp = strchr(opt, ':');\n\t\tif (cp)\n\t\t\tdefpredictor = atoi(cp+1);\n\t\tdefcompression = COMPRESSION_LZW;\n\t} else if (strneq(opt, \"zip\", 3)) {\n\t\tchar* cp = strchr(opt, ':');\n\t\tif (cp)\n\t\t\tdefpredictor = atoi(cp+1);\n\t\tdefcompression = COMPRESSION_ADOBE_DEFLATE;\n\t} else if (strneq(opt, \"jbig\", 4)) {\n\t\tdefcompression = COMPRESSION_JBIG;\n\t} else if (strneq(opt, \"sgilog\", 6)) {\n\t\tdefcompression = COMPRESSION_SGILOG;\n\t} else\n\t\treturn (0);\n\treturn (1);\n}",
    "filename": "tools/tiffcp.c"
  },
  "libtiff_2010-11-27-eb326f9-eec7ec0": {
    "buggy": "int main(int argc, char** argv){\n\n\textern char *optarg;\n\textern int optind;\n\tconst char *outfilename = NULL;\n\tT2P *t2p = NULL;\n\tTIFF *input = NULL, *output = NULL;\n\ttsize_t written = 0;\n\tint c, ret = EXIT_SUCCESS;\n\n\tt2p = t2p_init();\n\n\tif (t2p == NULL){\n\t\tTIFFError(TIFF2PDF_MODULE, \"Can't initialize context\");\n\t\tgoto fail;\n\t}\n\n\twhile (argv &&\n\t       (c = getopt(argc, argv,\n\t\t\t   \"o:q:u:x:y:w:l:r:p:e:c:a:t:s:k:jzndifbh\")) != -1){\n\t\tswitch (c) {\n\t\t\tcase 'o':\n\t\t\t\toutfilename = optarg;\n\t\t\t\tbreak;\n#ifdef JPEG_SUPPORT\n\t\t\tcase 'j':  \n\t\t\t\tt2p->pdf_defaultcompression=T2P_COMPRESS_JPEG;\n\t\t\t\tbreak;\n#endif\n#ifndef JPEG_SUPPORT\n\t\t\tcase 'j':  \n\t\t\t\tTIFFWarning(\n\t\t\t\t\tTIFF2PDF_MODULE, \n\t\t\t\t\t\"JPEG support in libtiff required for JPEG compression, ignoring option\");\n\t\t\t\tbreak;\n#endif\n#ifdef ZIP_SUPPORT\n\t\t\tcase 'z':  \n\t\t\t\tt2p->pdf_defaultcompression=T2P_COMPRESS_ZIP;\n\t\t\t\tbreak;\n#endif\n#ifndef ZIP_SUPPORT\n\t\t\tcase 'z':  \n\t\t\t\tTIFFWarning(\n\t\t\t\t\tTIFF2PDF_MODULE, \n\t\t\t\t\t\"Zip support in libtiff required for Zip compression, ignoring option\");\n\t\t\t\tbreak;\n#endif\n\t\t\tcase 'q': \n\t\t\t\tt2p->pdf_defaultcompressionquality=atoi(optarg);\n\t\t\t\tbreak;\n\t\t\tcase 'n': \n\t\t\t\tt2p->pdf_nopassthrough=1;\n\t\t\t\tbreak;\n\t\t\tcase 'd': \n\t\t\t\tt2p->pdf_defaultcompression=T2P_COMPRESS_NONE;\n\t\t\t\tbreak;\n\t\t\tcase 'u': \n\t\t\t\tif(optarg[0]=='m'){\n\t\t\t\t\tt2p->pdf_centimeters=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'x': \n\t\t\t\tt2p->pdf_defaultxres = \n\t\t\t\t\t(float)atof(optarg) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'y': \n\t\t\t\tt2p->pdf_defaultyres = \n\t\t\t\t\t(float)atof(optarg) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'w': \n\t\t\t\tt2p->pdf_overridepagesize=1;\n\t\t\t\tt2p->pdf_defaultpagewidth = \n\t\t\t\t\t((float)atof(optarg) * PS_UNIT_SIZE) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'l': \n\t\t\t\tt2p->pdf_overridepagesize=1;\n\t\t\t\tt2p->pdf_defaultpagelength = \n\t\t\t\t\t((float)atof(optarg) * PS_UNIT_SIZE) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'r': \n\t\t\t\tif(optarg[0]=='o'){\n\t\t\t\t\tt2p->pdf_overrideres=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'p': \n\t\t\t\tif(tiff2pdf_match_paper_size(\n\t\t\t\t\t&(t2p->pdf_defaultpagewidth), \n\t\t\t\t\t&(t2p->pdf_defaultpagelength), \n\t\t\t\t\toptarg)){\n\t\t\t\t\tt2p->pdf_overridepagesize=1;\n\t\t\t\t} else {\n\t\t\t\t\tTIFFWarning(TIFF2PDF_MODULE, \n\t\t\t\t\t\"Unknown paper size %s, ignoring option\",\n\t\t\t\t\t\toptarg);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'i':\n\t\t\t\tt2p->pdf_colorspace_invert=1;\n\t\t\t\tbreak;\n\t\t\tcase 'f': \n\t\t\t\tt2p->pdf_fitwindow=1;\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\tif (strlen(optarg) == 0) {\n\t\t\t\t\tt2p->pdf_datetime[0] = '\\0';\n\t\t\t\t} else {\n\t\t\t\t\tt2p->pdf_datetime[0] = 'D';\n\t\t\t\t\tt2p->pdf_datetime[1] = ':';\n\t\t\t\t\tstrncpy(t2p->pdf_datetime + 2, optarg,\n\t\t\t\t\t\tsizeof(t2p->pdf_datetime) - 3);\n\t\t\t\t\tt2p->pdf_datetime[sizeof(t2p->pdf_datetime) - 1] = '\\0';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'c': \n\t\t\t\tstrncpy(t2p->pdf_creator, optarg, sizeof(t2p->pdf_creator) - 1);\n\t\t\t\tt2p->pdf_creator[sizeof(t2p->pdf_creator) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'a': \n\t\t\t\tstrncpy(t2p->pdf_author, optarg, sizeof(t2p->pdf_author) - 1);\n\t\t\t\tt2p->pdf_author[sizeof(t2p->pdf_author) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 't': \n\t\t\t\tstrncpy(t2p->pdf_title, optarg, sizeof(t2p->pdf_title) - 1);\n\t\t\t\tt2p->pdf_title[sizeof(t2p->pdf_title) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 's': \n\t\t\t\tstrncpy(t2p->pdf_subject, optarg, sizeof(t2p->pdf_subject) - 1);\n\t\t\t\tt2p->pdf_subject[sizeof(t2p->pdf_subject) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'k': \n\t\t\t\tstrncpy(t2p->pdf_keywords, optarg, sizeof(t2p->pdf_keywords) - 1);\n\t\t\t\tt2p->pdf_keywords[sizeof(t2p->pdf_keywords) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt2p->pdf_image_interpolate = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'h': \n\t\t\tcase '?': \n\t\t\t\ttiff2pdf_usage();\n\t\t\t\tgoto success;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Input\n\t */\n\tif(argc > optind) {\n\t\tinput = TIFFOpen(argv[optind++], \"r\");\n\t\tif (input==NULL) {\n\t\t\tTIFFError(TIFF2PDF_MODULE, \n\t\t\t\t  \"Can't open input file %s for reading\", \n\t\t\t\t  argv[optind-1]);\n\t\t\tgoto fail;\n\t\t}\n\t} else {\n\t\tTIFFError(TIFF2PDF_MODULE, \"No input file specified\"); \n\t\ttiff2pdf_usage();\n\t\tgoto fail;\n\t}\n\n\tif(argc > optind) {\n\t\tTIFFError(TIFF2PDF_MODULE, \n\t\t\t  \"No support for multiple input files\"); \n\t\ttiff2pdf_usage();\n\t\tgoto fail;\n\t}\n\n\t/*\n\t * Output\n\t */\n\tt2p->outputdisable = 0;\n\tif (outfilename) {\n\t\tt2p->outputfile = fopen(outfilename, \"wb\");\n\t\tif (t2p->outputfile == NULL) {\n\t\t\tTIFFError(TIFF2PDF_MODULE,\n\t\t\t\t  \"Can't open output file %s for writing\",\n\t\t\t\t  outfilename);\n\t\t\tgoto fail;\n\t\t}\n\t} else {\n\t\toutfilename = \"-\";\n\t\tt2p->outputfile = stdout;\n\t}\n\n\toutput = TIFFClientOpen(outfilename, \"w\", (thandle_t) t2p,\n\t\t\t\tt2p_readproc, t2p_writeproc, t2p_seekproc, \n\t\t\t\tt2p_closeproc, t2p_sizeproc, \n\t\t\t\tt2p_mapproc, t2p_unmapproc);\n\tif (output == NULL) {\n\t\tTIFFError(TIFF2PDF_MODULE,\n\t\t\t  \"Can't initialize output descriptor\");\n\t\tgoto fail;\n\t}\n\t\n\t/*\n\t * Validate\n\t */\n\tt2p_validate(t2p);\n\tt2pSeekFile(output, (toff_t) 0, SEEK_SET);\n\n\t/*\n\t * Write\n\t */\n\twritten = t2p_write_pdf(t2p, input, output);\n\tif (t2p->t2p_error != 0) {\n\t\tTIFFError(TIFF2PDF_MODULE,\n\t\t\t  \"An error occurred creating output PDF file\");\n\t\tgoto fail;\n\t}\n\nfail:\n\tret = EXIT_FAILURE;\nsuccess:\n\tif(input != NULL)\n\t\tTIFFClose(input);\n\tif (output != NULL)\n\t\tTIFFClose(output);\n\tif (t2p != NULL)\n\t\tt2p_free(t2p);\n\treturn ret;\n  \n}",
    "start": 557,
    "end": 780,
    "fix": "int main(int argc, char** argv){\n\n\textern char *optarg;\n\textern int optind;\n\tconst char *outfilename = NULL;\n\tT2P *t2p = NULL;\n\tTIFF *input = NULL, *output = NULL;\n\ttsize_t written = 0;\n\tint c, ret = EXIT_SUCCESS;\n\n\tt2p = t2p_init();\n\n\tif (t2p == NULL){\n\t\tTIFFError(TIFF2PDF_MODULE, \"Can't initialize context\");\n\t\tgoto fail;\n\t}\n\n\twhile (argv &&\n\t       (c = getopt(argc, argv,\n\t\t\t   \"o:q:u:x:y:w:l:r:p:e:c:a:t:s:k:jzndifbh\")) != -1){\n\t\tswitch (c) {\n\t\t\tcase 'o':\n\t\t\t\toutfilename = optarg;\n\t\t\t\tbreak;\n#ifdef JPEG_SUPPORT\n\t\t\tcase 'j':  \n\t\t\t\tt2p->pdf_defaultcompression=T2P_COMPRESS_JPEG;\n\t\t\t\tbreak;\n#endif\n#ifndef JPEG_SUPPORT\n\t\t\tcase 'j':  \n\t\t\t\tTIFFWarning(\n\t\t\t\t\tTIFF2PDF_MODULE, \n\t\t\t\t\t\"JPEG support in libtiff required for JPEG compression, ignoring option\");\n\t\t\t\tbreak;\n#endif\n#ifdef ZIP_SUPPORT\n\t\t\tcase 'z':  \n\t\t\t\tt2p->pdf_defaultcompression=T2P_COMPRESS_ZIP;\n\t\t\t\tbreak;\n#endif\n#ifndef ZIP_SUPPORT\n\t\t\tcase 'z':  \n\t\t\t\tTIFFWarning(\n\t\t\t\t\tTIFF2PDF_MODULE, \n\t\t\t\t\t\"Zip support in libtiff required for Zip compression, ignoring option\");\n\t\t\t\tbreak;\n#endif\n\t\t\tcase 'q': \n\t\t\t\tt2p->pdf_defaultcompressionquality=atoi(optarg);\n\t\t\t\tbreak;\n\t\t\tcase 'n': \n\t\t\t\tt2p->pdf_nopassthrough=1;\n\t\t\t\tbreak;\n\t\t\tcase 'd': \n\t\t\t\tt2p->pdf_defaultcompression=T2P_COMPRESS_NONE;\n\t\t\t\tbreak;\n\t\t\tcase 'u': \n\t\t\t\tif(optarg[0]=='m'){\n\t\t\t\t\tt2p->pdf_centimeters=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'x': \n\t\t\t\tt2p->pdf_defaultxres = \n\t\t\t\t\t(float)atof(optarg) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'y': \n\t\t\t\tt2p->pdf_defaultyres = \n\t\t\t\t\t(float)atof(optarg) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'w': \n\t\t\t\tt2p->pdf_overridepagesize=1;\n\t\t\t\tt2p->pdf_defaultpagewidth = \n\t\t\t\t\t((float)atof(optarg) * PS_UNIT_SIZE) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'l': \n\t\t\t\tt2p->pdf_overridepagesize=1;\n\t\t\t\tt2p->pdf_defaultpagelength = \n\t\t\t\t\t((float)atof(optarg) * PS_UNIT_SIZE) / (t2p->pdf_centimeters?2.54F:1.0F);\n\t\t\t\tbreak;\n\t\t\tcase 'r': \n\t\t\t\tif(optarg[0]=='o'){\n\t\t\t\t\tt2p->pdf_overrideres=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'p': \n\t\t\t\tif(tiff2pdf_match_paper_size(\n\t\t\t\t\t&(t2p->pdf_defaultpagewidth), \n\t\t\t\t\t&(t2p->pdf_defaultpagelength), \n\t\t\t\t\toptarg)){\n\t\t\t\t\tt2p->pdf_overridepagesize=1;\n\t\t\t\t} else {\n\t\t\t\t\tTIFFWarning(TIFF2PDF_MODULE, \n\t\t\t\t\t\"Unknown paper size %s, ignoring option\",\n\t\t\t\t\t\toptarg);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'i':\n\t\t\t\tt2p->pdf_colorspace_invert=1;\n\t\t\t\tbreak;\n\t\t\tcase 'f': \n\t\t\t\tt2p->pdf_fitwindow=1;\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\tif (strlen(optarg) == 0) {\n\t\t\t\t\tt2p->pdf_datetime[0] = '\\0';\n\t\t\t\t} else {\n\t\t\t\t\tt2p->pdf_datetime[0] = 'D';\n\t\t\t\t\tt2p->pdf_datetime[1] = ':';\n\t\t\t\t\tstrncpy(t2p->pdf_datetime + 2, optarg,\n\t\t\t\t\t\tsizeof(t2p->pdf_datetime) - 3);\n\t\t\t\t\tt2p->pdf_datetime[sizeof(t2p->pdf_datetime) - 1] = '\\0';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'c': \n\t\t\t\tstrncpy(t2p->pdf_creator, optarg, sizeof(t2p->pdf_creator) - 1);\n\t\t\t\tt2p->pdf_creator[sizeof(t2p->pdf_creator) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'a': \n\t\t\t\tstrncpy(t2p->pdf_author, optarg, sizeof(t2p->pdf_author) - 1);\n\t\t\t\tt2p->pdf_author[sizeof(t2p->pdf_author) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 't': \n\t\t\t\tstrncpy(t2p->pdf_title, optarg, sizeof(t2p->pdf_title) - 1);\n\t\t\t\tt2p->pdf_title[sizeof(t2p->pdf_title) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 's': \n\t\t\t\tstrncpy(t2p->pdf_subject, optarg, sizeof(t2p->pdf_subject) - 1);\n\t\t\t\tt2p->pdf_subject[sizeof(t2p->pdf_subject) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'k': \n\t\t\t\tstrncpy(t2p->pdf_keywords, optarg, sizeof(t2p->pdf_keywords) - 1);\n\t\t\t\tt2p->pdf_keywords[sizeof(t2p->pdf_keywords) - 1] = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt2p->pdf_image_interpolate = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'h': \n\t\t\tcase '?': \n\t\t\t\ttiff2pdf_usage();\n\t\t\t\tgoto success;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Input\n\t */\n\tif(argc > optind) {\n\t\tinput = TIFFOpen(argv[optind++], \"r\");\n\t\tif (input==NULL) {\n\t\t\tTIFFError(TIFF2PDF_MODULE, \n\t\t\t\t  \"Can't open input file %s for reading\", \n\t\t\t\t  argv[optind-1]);\n\t\t\tgoto fail;\n\t\t}\n\t} else {\n\t\tTIFFError(TIFF2PDF_MODULE, \"No input file specified\"); \n\t\ttiff2pdf_usage();\n\t\tgoto fail;\n\t}\n\n\tif(argc > optind) {\n\t\tTIFFError(TIFF2PDF_MODULE, \n\t\t\t  \"No support for multiple input files\"); \n\t\ttiff2pdf_usage();\n\t\tgoto fail;\n\t}\n\n\t/*\n\t * Output\n\t */\n\tt2p->outputdisable = 0;\n\tif (outfilename) {\n\t\tt2p->outputfile = fopen(outfilename, \"wb\");\n\t\tif (t2p->outputfile == NULL) {\n\t\t\tTIFFError(TIFF2PDF_MODULE,\n\t\t\t\t  \"Can't open output file %s for writing\",\n\t\t\t\t  outfilename);\n\t\t\tgoto fail;\n\t\t}\n\t} else {\n\t\toutfilename = \"-\";\n\t\tt2p->outputfile = stdout;\n\t}\n\n\toutput = TIFFClientOpen(outfilename, \"w\", (thandle_t) t2p,\n\t\t\t\tt2p_readproc, t2p_writeproc, t2p_seekproc, \n\t\t\t\tt2p_closeproc, t2p_sizeproc, \n\t\t\t\tt2p_mapproc, t2p_unmapproc);\n\tif (output == NULL) {\n\t\tTIFFError(TIFF2PDF_MODULE,\n\t\t\t  \"Can't initialize output descriptor\");\n\t\tgoto fail;\n\t}\n\t\n\t/*\n\t * Validate\n\t */\n\tt2p_validate(t2p);\n\tt2pSeekFile(output, (toff_t) 0, SEEK_SET);\n\n\t/*\n\t * Write\n\t */\n\twritten = t2p_write_pdf(t2p, input, output);\n\tif (t2p->t2p_error != 0) {\n\t\tTIFFError(TIFF2PDF_MODULE,\n\t\t\t  \"An error occurred creating output PDF file\");\n\t\tgoto fail;\n\t}\n\n\tgoto success;\nfail:\n\tret = EXIT_FAILURE;\nsuccess:\n\tif(input != NULL)\n\t\tTIFFClose(input);\n\tif (output != NULL)\n\t\tTIFFClose(output);\n\tif (t2p != NULL)\n\t\tt2p_free(t2p);\n\treturn ret;\n  \n}",
    "filename": "tools/tiff2pdf.c"
  },
  "lighttpd_1913-1914": {
    "buggy": "static int cgi_create_env(server *srv, connection *con, plugin_data *p, buffer *cgi_handler) {\n\tpid_t pid;\n\n#ifdef HAVE_IPV6\n\tchar b2[INET6_ADDRSTRLEN + 1];\n#endif\n\n\tint to_cgi_fds[2];\n\tint from_cgi_fds[2];\n\tstruct stat st;\n\n#ifndef _WIN32\n\n\tif (cgi_handler && cgi_handler->used > 1) {\n\t\t/* stat the exec file */\n\t\tif (-1 == (stat(cgi_handler->ptr, &st))) {\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"sbss\",\n\t\t\t\t\t\"stat for cgi-handler\", cgi_handler,\n\t\t\t\t\t\"failed:\", strerror(errno));\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tif (pipe(to_cgi_fds)) {\n\t\tlog_error_write(srv, __FILE__, __LINE__, \"ss\", \"pipe failed:\", strerror(errno));\n\t\treturn -1;\n\t}\n\n\tif (pipe(from_cgi_fds)) {\n\t\tlog_error_write(srv, __FILE__, __LINE__, \"ss\", \"pipe failed:\", strerror(errno));\n\t\treturn -1;\n\t}\n\n\t/* fork, execve */\n\tswitch (pid = fork()) {\n\tcase 0: {\n\t\t/* child */\n\t\tchar **args;\n\t\tint argc;\n\t\tint i = 0;\n\t\tchar buf[32];\n\t\tsize_t n;\n\t\tchar_array env;\n\t\tchar *c;\n\t\tconst char *s;\n\t\tserver_socket *srv_sock = con->srv_socket;\n\n\t\t/* move stdout to from_cgi_fd[1] */\n\t\tclose(STDOUT_FILENO);\n\t\tdup2(from_cgi_fds[1], STDOUT_FILENO);\n\t\tclose(from_cgi_fds[1]);\n\t\t/* not needed */\n\t\tclose(from_cgi_fds[0]);\n\n\t\t/* move the stdin to to_cgi_fd[0] */\n\t\tclose(STDIN_FILENO);\n\t\tdup2(to_cgi_fds[0], STDIN_FILENO);\n\t\tclose(to_cgi_fds[0]);\n\t\t/* not needed */\n\t\tclose(to_cgi_fds[1]);\n\n\t\t/**\n\t\t * FIXME: add a event-handler for STDERR_FILENO and let it LOG()\n\t\t */\n\n\t\tclose(STDERR_FILENO);\n\n\t\t/* create environment */\n\t\tenv.ptr = NULL;\n\t\tenv.size = 0;\n\t\tenv.used = 0;\n\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_SOFTWARE\"), CONST_STR_LEN(PACKAGE_NAME\"/\"PACKAGE_VERSION));\n\n\t\tif (!buffer_is_empty(con->server_name)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_NAME\"), CONST_BUF_LEN(con->server_name));\n\t\t} else {\n#ifdef HAVE_IPV6\n\t\t\ts = inet_ntop(srv_sock->addr.plain.sa_family,\n\t\t\t\t      srv_sock->addr.plain.sa_family == AF_INET6 ?\n\t\t\t\t      (const void *) &(srv_sock->addr.ipv6.sin6_addr) :\n\t\t\t\t      (const void *) &(srv_sock->addr.ipv4.sin_addr),\n\t\t\t\t      b2, sizeof(b2)-1);\n#else\n\t\t\ts = inet_ntoa(srv_sock->addr.ipv4.sin_addr);\n#endif\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_NAME\"), s, strlen(s));\n\t\t}\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"GATEWAY_INTERFACE\"), CONST_STR_LEN(\"CGI/1.1\"));\n\n\t\ts = get_http_version_name(con->request.http_version);\n\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_PROTOCOL\"), s, strlen(s));\n\n\t\tltostr(buf,\n#ifdef HAVE_IPV6\n\t\t\tntohs(srv_sock->addr.plain.sa_family == AF_INET6 ? srv_sock->addr.ipv6.sin6_port : srv_sock->addr.ipv4.sin_port)\n#else\n\t\t\tntohs(srv_sock->addr.ipv4.sin_port)\n#endif\n\t\t\t);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_PORT\"), buf, strlen(buf));\n\n#ifdef HAVE_IPV6\n\t\ts = inet_ntop(srv_sock->addr.plain.sa_family,\n\t\t\t      srv_sock->addr.plain.sa_family == AF_INET6 ?\n\t\t\t      (const void *) &(srv_sock->addr.ipv6.sin6_addr) :\n\t\t\t      (const void *) &(srv_sock->addr.ipv4.sin_addr),\n\t\t\t      b2, sizeof(b2)-1);\n#else\n\t\ts = inet_ntoa(srv_sock->addr.ipv4.sin_addr);\n#endif\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_ADDR\"), s, strlen(s));\n\n\t\ts = get_http_method_name(con->request.http_method);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REQUEST_METHOD\"), s, strlen(s));\n\n\t\tif (!buffer_is_empty(con->request.pathinfo)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"PATH_INFO\"), CONST_BUF_LEN(con->request.pathinfo));\n\t\t}\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REDIRECT_STATUS\"), CONST_STR_LEN(\"200\"));\n\t\tif (!buffer_is_empty(con->uri.query)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"QUERY_STRING\"), CONST_BUF_LEN(con->uri.query));\n\t\t} else {\n\t\t\t/* set a empty QUERY_STRING */\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"QUERY_STRING\"), CONST_STR_LEN(\"\"));\n\t\t}\n\t\tif (!buffer_is_empty(con->request.orig_uri)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"REQUEST_URI\"), CONST_BUF_LEN(con->request.orig_uri));\n\t\t}\n\n\n#ifdef HAVE_IPV6\n\t\ts = inet_ntop(con->dst_addr.plain.sa_family,\n\t\t\t      con->dst_addr.plain.sa_family == AF_INET6 ?\n\t\t\t      (const void *) &(con->dst_addr.ipv6.sin6_addr) :\n\t\t\t      (const void *) &(con->dst_addr.ipv4.sin_addr),\n\t\t\t      b2, sizeof(b2)-1);\n#else\n\t\ts = inet_ntoa(con->dst_addr.ipv4.sin_addr);\n#endif\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REMOTE_ADDR\"), s, strlen(s));\n\n\t\tltostr(buf,\n#ifdef HAVE_IPV6\n\t\t\tntohs(con->dst_addr.plain.sa_family == AF_INET6 ? con->dst_addr.ipv6.sin6_port : con->dst_addr.ipv4.sin_port)\n#else\n\t\t\tntohs(con->dst_addr.ipv4.sin_port)\n#endif\n\t\t\t);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REMOTE_PORT\"), buf, strlen(buf));\n\n\t\tif (!buffer_is_empty(con->authed_user)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"REMOTE_USER\"),\n\t\t\t\t    CONST_BUF_LEN(con->authed_user));\n\t\t}\n\n#ifdef USE_OPENSSL\n       if (srv_sock->is_ssl) {\n               cgi_env_add(&env, CONST_STR_LEN(\"HTTPS\"), CONST_STR_LEN(\"on\"));\n       }\n#endif\n\n\t\t/* request.content_length < SSIZE_MAX, see request.c */\n\t\tltostr(buf, con->request.content_length);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"CONTENT_LENGTH\"), buf, strlen(buf));\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SCRIPT_FILENAME\"), CONST_BUF_LEN(con->physical.path));\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SCRIPT_NAME\"), CONST_BUF_LEN(con->uri.path));\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"DOCUMENT_ROOT\"), CONST_BUF_LEN(con->physical.doc_root));\n\n\t\t/* for valgrind */\n\t\tif (NULL != (s = getenv(\"LD_PRELOAD\"))) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"LD_PRELOAD\"), s, strlen(s));\n\t\t}\n\n\t\tif (NULL != (s = getenv(\"LD_LIBRARY_PATH\"))) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"LD_LIBRARY_PATH\"), s, strlen(s));\n\t\t}\n#ifdef __CYGWIN__\n\t\t/* CYGWIN needs SYSTEMROOT */\n\t\tif (NULL != (s = getenv(\"SYSTEMROOT\"))) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"SYSTEMROOT\"), s, strlen(s));\n\t\t}\n#endif\n\n\t\tfor (n = 0; n < con->request.headers->used; n++) {\n\t\t\tdata_string *ds;\n\n\t\t\tds = (data_string *)con->request.headers->data[n];\n\n\t\t\tif (ds->value->used && ds->key->used) {\n\t\t\t\tsize_t j;\n\n\t\t\t\tbuffer_reset(p->tmp_buf);\n\n\t\t\t\tif (0 != strcasecmp(ds->key->ptr, \"CONTENT-TYPE\")) {\n\t\t\t\t\tbuffer_copy_string(p->tmp_buf, \"HTTP_\");\n\t\t\t\t\tp->tmp_buf->used--; /* strip \\0 after HTTP_ */\n\t\t\t\t}\n\n\t\t\t\tbuffer_prepare_append(p->tmp_buf, ds->key->used + 2);\n\n\t\t\t\tfor (j = 0; j < ds->key->used - 1; j++) {\n\t\t\t\t\tchar cr = '_';\n\t\t\t\t\tif (light_isalpha(ds->key->ptr[j])) {\n\t\t\t\t\t\t/* upper-case */\n\t\t\t\t\t\tcr = ds->key->ptr[j] & ~32;\n\t\t\t\t\t} else if (light_isdigit(ds->key->ptr[j])) {\n\t\t\t\t\t\t/* copy */\n\t\t\t\t\t\tcr = ds->key->ptr[j];\n\t\t\t\t\t}\n\t\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] = cr;\n\t\t\t\t}\n\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] = '\\0';\n\n\t\t\t\tcgi_env_add(&env, CONST_BUF_LEN(p->tmp_buf), CONST_BUF_LEN(ds->value));\n\t\t\t}\n\t\t}\n\n\t\tfor (n = 0; n < con->environment->used; n++) {\n\t\t\tdata_string *ds;\n\n\t\t\tds = (data_string *)con->environment->data[n];\n\n\t\t\tif (ds->value->used && ds->key->used) {\n\t\t\t\tsize_t j;\n\n\t\t\t\tbuffer_reset(p->tmp_buf);\n\n\t\t\t\tbuffer_prepare_append(p->tmp_buf, ds->key->used + 2);\n\n\t\t\t\tfor (j = 0; j < ds->key->used - 1; j++) {\n\t\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] =\n\t\t\t\t\t\tisalpha((unsigned char)ds->key->ptr[j]) ?\n\t\t\t\t\t\ttoupper((unsigned char)ds->key->ptr[j]) : '_';\n\t\t\t\t}\n\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] = '\\0';\n\n\t\t\t\tcgi_env_add(&env, CONST_BUF_LEN(p->tmp_buf), CONST_BUF_LEN(ds->value));\n\t\t\t}\n\t\t}\n\n\t\tif (env.size == env.used) {\n\t\t\tenv.size += 16;\n\t\t\tenv.ptr = realloc(env.ptr, env.size * sizeof(*env.ptr));\n\t\t}\n\n\t\tenv.ptr[env.used] = NULL;\n\n\t\t/* set up args */\n\t\targc = 3;\n\t\targs = malloc(sizeof(*args) * argc);\n\t\ti = 0;\n\n\t\tif (cgi_handler && cgi_handler->used > 1) {\n\t\t\targs[i++] = cgi_handler->ptr;\n\t\t}\n\t\targs[i++] = con->physical.path->ptr;\n\t\targs[i++] = NULL;\n\n\t\t/* search for the last / */\n\t\tif (NULL != (c = strrchr(con->physical.path->ptr, '/'))) {\n\t\t\t*c = '\\0';\n\n\t\t\t/* change to the physical directory */\n\t\t\tif (-1 == chdir(con->physical.path->ptr)) {\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"ssb\", \"chdir failed:\", strerror(errno), con->physical.path);\n\t\t\t}\n\t\t\t*c = '/';\n\t\t}\n\n\t\t/* we don't need the client socket */\n\t\tfor (i = 3; i < 256; i++) {\n\t\t\tclose(i);\n\t\t}\n\n\t\t/* exec the cgi */\n\t\texecve(args[0], args, env.ptr);\n\n\t\t/* */\n\t\tSEGFAULT(\"execve(%s) failed: %s\", args[0], strerror(errno));\n\t\tbreak;\n\t}\n\tcase -1:\n\t\t/* error */\n\t\tERROR(\"fork() failed: %s\", strerror(errno));\n\t\tbreak;\n\tdefault: {\n\t\tcgi_session *sess;\n\t\t/* father */\n\n\t\tclose(from_cgi_fds[1]);\n\t\tclose(to_cgi_fds[0]);\n\n\t\t/* register PID and wait for them asyncronously */\n\t\tcon->mode = p->id;\n\t\tbuffer_reset(con->physical.path);\n\n\t\tsess = cgi_session_init();\n\n\t\tsess->remote_con = con;\n\t\tsess->pid = pid;\n\n\t\tassert(sess->sock);\n\n\t\tsess->sock->fd = from_cgi_fds[0];\n\t\tsess->sock->type = IOSOCKET_TYPE_PIPE;\n\t\tsess->wb_sock->fd = to_cgi_fds[1];\n\t\tsess->wb_sock->type = IOSOCKET_TYPE_PIPE;\n\n\t\tif (-1 == fdevent_fcntl_set(srv->ev, sess->sock)) {\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"ss\", \"fcntl failed: \", strerror(errno));\n\n\t\t\tcgi_session_free(sess);\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tcon->plugin_ctx[p->id] = sess;\n\n\t\tfdevent_register(srv->ev, sess->sock, cgi_handle_fdevent, sess);\n\t\tfdevent_event_add(srv->ev, sess->sock, FDEVENT_IN);\n\n\t\tsess->state = CGI_STATE_READ_RESPONSE_HEADER;\n\n\t\tbreak;\n\t}\n\t}\n\n\treturn 0;\n#else\n\treturn -1;\n#endif\n}",
    "start": 583,
    "end": 916,
    "fix": "static int cgi_create_env(server *srv, connection *con, plugin_data *p, buffer *cgi_handler) {\n\tpid_t pid;\n\n#ifdef HAVE_IPV6\n\tchar b2[INET6_ADDRSTRLEN + 1];\n#endif\n\n\tint to_cgi_fds[2];\n\tint from_cgi_fds[2];\n\tstruct stat st;\n\n#ifndef _WIN32\n\n\tif (cgi_handler && cgi_handler->used > 1) {\n\t\t/* stat the exec file */\n\t\tif (-1 == (stat(cgi_handler->ptr, &st))) {\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"sbss\",\n\t\t\t\t\t\"stat for cgi-handler\", cgi_handler,\n\t\t\t\t\t\"failed:\", strerror(errno));\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tif (pipe(to_cgi_fds)) {\n\t\tlog_error_write(srv, __FILE__, __LINE__, \"ss\", \"pipe failed:\", strerror(errno));\n\t\treturn -1;\n\t}\n\n\tif (pipe(from_cgi_fds)) {\n\t\tlog_error_write(srv, __FILE__, __LINE__, \"ss\", \"pipe failed:\", strerror(errno));\n\t\treturn -1;\n\t}\n\n\t/* fork, execve */\n\tswitch (pid = fork()) {\n\tcase 0: {\n\t\t/* child */\n\t\tchar **args;\n\t\tint argc;\n\t\tint i = 0;\n\t\tchar buf[32];\n\t\tsize_t n;\n\t\tchar_array env;\n\t\tchar *c;\n\t\tconst char *s;\n\t\tserver_socket *srv_sock = con->srv_socket;\n\n\t\t/* move stdout to from_cgi_fd[1] */\n\t\tclose(STDOUT_FILENO);\n\t\tdup2(from_cgi_fds[1], STDOUT_FILENO);\n\t\tclose(from_cgi_fds[1]);\n\t\t/* not needed */\n\t\tclose(from_cgi_fds[0]);\n\n\t\t/* move the stdin to to_cgi_fd[0] */\n\t\tclose(STDIN_FILENO);\n\t\tdup2(to_cgi_fds[0], STDIN_FILENO);\n\t\tclose(to_cgi_fds[0]);\n\t\t/* not needed */\n\t\tclose(to_cgi_fds[1]);\n\n\t\t/**\n\t\t * FIXME: add a event-handler for STDERR_FILENO and let it LOG()\n\t\t */\n\n\t\tclose(STDERR_FILENO);\n\n\t\t/* create environment */\n\t\tenv.ptr = NULL;\n\t\tenv.size = 0;\n\t\tenv.used = 0;\n\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_SOFTWARE\"), CONST_STR_LEN(PACKAGE_NAME\"/\"PACKAGE_VERSION));\n\n\t\tif (!buffer_is_empty(con->server_name)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_NAME\"), CONST_BUF_LEN(con->server_name));\n\t\t} else {\n#ifdef HAVE_IPV6\n\t\t\ts = inet_ntop(srv_sock->addr.plain.sa_family,\n\t\t\t\t      srv_sock->addr.plain.sa_family == AF_INET6 ?\n\t\t\t\t      (const void *) &(srv_sock->addr.ipv6.sin6_addr) :\n\t\t\t\t      (const void *) &(srv_sock->addr.ipv4.sin_addr),\n\t\t\t\t      b2, sizeof(b2)-1);\n#else\n\t\t\ts = inet_ntoa(srv_sock->addr.ipv4.sin_addr);\n#endif\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_NAME\"), s, strlen(s));\n\t\t}\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"GATEWAY_INTERFACE\"), CONST_STR_LEN(\"CGI/1.1\"));\n\n\t\ts = get_http_version_name(con->request.http_version);\n\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_PROTOCOL\"), s, strlen(s));\n\n\t\tltostr(buf,\n#ifdef HAVE_IPV6\n\t\t\tntohs(srv_sock->addr.plain.sa_family == AF_INET6 ? srv_sock->addr.ipv6.sin6_port : srv_sock->addr.ipv4.sin_port)\n#else\n\t\t\tntohs(srv_sock->addr.ipv4.sin_port)\n#endif\n\t\t\t);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_PORT\"), buf, strlen(buf));\n\n#ifdef HAVE_IPV6\n\t\ts = inet_ntop(srv_sock->addr.plain.sa_family,\n\t\t\t      srv_sock->addr.plain.sa_family == AF_INET6 ?\n\t\t\t      (const void *) &(srv_sock->addr.ipv6.sin6_addr) :\n\t\t\t      (const void *) &(srv_sock->addr.ipv4.sin_addr),\n\t\t\t      b2, sizeof(b2)-1);\n#else\n\t\ts = inet_ntoa(srv_sock->addr.ipv4.sin_addr);\n#endif\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SERVER_ADDR\"), s, strlen(s));\n\n\t\ts = get_http_method_name(con->request.http_method);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REQUEST_METHOD\"), s, strlen(s));\n\n\t\tif (!buffer_is_empty(con->request.pathinfo)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"PATH_INFO\"), CONST_BUF_LEN(con->request.pathinfo));\n\t\t}\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REDIRECT_STATUS\"), CONST_STR_LEN(\"200\"));\n\t\tif (!buffer_is_empty(con->uri.query)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"QUERY_STRING\"), CONST_BUF_LEN(con->uri.query));\n\t\t} else {\n\t\t\t/* set a empty QUERY_STRING */\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"QUERY_STRING\"), CONST_STR_LEN(\"\"));\n\t\t}\n\t\tif (!buffer_is_empty(con->request.orig_uri)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"REQUEST_URI\"), CONST_BUF_LEN(con->request.orig_uri));\n\t\t}\n\n\n#ifdef HAVE_IPV6\n\t\ts = inet_ntop(con->dst_addr.plain.sa_family,\n\t\t\t      con->dst_addr.plain.sa_family == AF_INET6 ?\n\t\t\t      (const void *) &(con->dst_addr.ipv6.sin6_addr) :\n\t\t\t      (const void *) &(con->dst_addr.ipv4.sin_addr),\n\t\t\t      b2, sizeof(b2)-1);\n#else\n\t\ts = inet_ntoa(con->dst_addr.ipv4.sin_addr);\n#endif\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REMOTE_ADDR\"), s, strlen(s));\n\n\t\tltostr(buf,\n#ifdef HAVE_IPV6\n\t\t\tntohs(con->dst_addr.plain.sa_family == AF_INET6 ? con->dst_addr.ipv6.sin6_port : con->dst_addr.ipv4.sin_port)\n#else\n\t\t\tntohs(con->dst_addr.ipv4.sin_port)\n#endif\n\t\t\t);\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"REMOTE_PORT\"), buf, strlen(buf));\n\n\t\tif (!buffer_is_empty(con->authed_user)) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"REMOTE_USER\"),\n\t\t\t\t    CONST_BUF_LEN(con->authed_user));\n\t\t}\n\n#ifdef USE_OPENSSL\n\t\tif (srv_sock->is_ssl) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"HTTPS\"), CONST_STR_LEN(\"on\"));\n\t\t}\n#endif\n\n\t\t/* request.content_length < SSIZE_MAX, see request.c */\n\t\tif (con->request.content_length > 0) {\n\t\t\tltostr(buf, con->request.content_length);\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"CONTENT_LENGTH\"), buf, strlen(buf));\n\t\t}\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SCRIPT_FILENAME\"), CONST_BUF_LEN(con->physical.path));\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"SCRIPT_NAME\"), CONST_BUF_LEN(con->uri.path));\n\t\tcgi_env_add(&env, CONST_STR_LEN(\"DOCUMENT_ROOT\"), CONST_BUF_LEN(con->physical.doc_root));\n\n\t\t/* for valgrind */\n\t\tif (NULL != (s = getenv(\"LD_PRELOAD\"))) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"LD_PRELOAD\"), s, strlen(s));\n\t\t}\n\n\t\tif (NULL != (s = getenv(\"LD_LIBRARY_PATH\"))) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"LD_LIBRARY_PATH\"), s, strlen(s));\n\t\t}\n#ifdef __CYGWIN__\n\t\t/* CYGWIN needs SYSTEMROOT */\n\t\tif (NULL != (s = getenv(\"SYSTEMROOT\"))) {\n\t\t\tcgi_env_add(&env, CONST_STR_LEN(\"SYSTEMROOT\"), s, strlen(s));\n\t\t}\n#endif\n\n\t\tfor (n = 0; n < con->request.headers->used; n++) {\n\t\t\tdata_string *ds;\n\n\t\t\tds = (data_string *)con->request.headers->data[n];\n\n\t\t\tif (ds->value->used && ds->key->used) {\n\t\t\t\tsize_t j;\n\n\t\t\t\tbuffer_reset(p->tmp_buf);\n\n\t\t\t\tif (0 != strcasecmp(ds->key->ptr, \"CONTENT-TYPE\")) {\n\t\t\t\t\tbuffer_copy_string(p->tmp_buf, \"HTTP_\");\n\t\t\t\t\tp->tmp_buf->used--; /* strip \\0 after HTTP_ */\n\t\t\t\t}\n\n\t\t\t\tbuffer_prepare_append(p->tmp_buf, ds->key->used + 2);\n\n\t\t\t\tfor (j = 0; j < ds->key->used - 1; j++) {\n\t\t\t\t\tchar cr = '_';\n\t\t\t\t\tif (light_isalpha(ds->key->ptr[j])) {\n\t\t\t\t\t\t/* upper-case */\n\t\t\t\t\t\tcr = ds->key->ptr[j] & ~32;\n\t\t\t\t\t} else if (light_isdigit(ds->key->ptr[j])) {\n\t\t\t\t\t\t/* copy */\n\t\t\t\t\t\tcr = ds->key->ptr[j];\n\t\t\t\t\t}\n\t\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] = cr;\n\t\t\t\t}\n\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] = '\\0';\n\n\t\t\t\tcgi_env_add(&env, CONST_BUF_LEN(p->tmp_buf), CONST_BUF_LEN(ds->value));\n\t\t\t}\n\t\t}\n\n\t\tfor (n = 0; n < con->environment->used; n++) {\n\t\t\tdata_string *ds;\n\n\t\t\tds = (data_string *)con->environment->data[n];\n\n\t\t\tif (ds->value->used && ds->key->used) {\n\t\t\t\tsize_t j;\n\n\t\t\t\tbuffer_reset(p->tmp_buf);\n\n\t\t\t\tbuffer_prepare_append(p->tmp_buf, ds->key->used + 2);\n\n\t\t\t\tfor (j = 0; j < ds->key->used - 1; j++) {\n\t\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] =\n\t\t\t\t\t\tisalpha((unsigned char)ds->key->ptr[j]) ?\n\t\t\t\t\t\ttoupper((unsigned char)ds->key->ptr[j]) : '_';\n\t\t\t\t}\n\t\t\t\tp->tmp_buf->ptr[p->tmp_buf->used++] = '\\0';\n\n\t\t\t\tcgi_env_add(&env, CONST_BUF_LEN(p->tmp_buf), CONST_BUF_LEN(ds->value));\n\t\t\t}\n\t\t}\n\n\t\tif (env.size == env.used) {\n\t\t\tenv.size += 16;\n\t\t\tenv.ptr = realloc(env.ptr, env.size * sizeof(*env.ptr));\n\t\t}\n\n\t\tenv.ptr[env.used] = NULL;\n\n\t\t/* set up args */\n\t\targc = 3;\n\t\targs = malloc(sizeof(*args) * argc);\n\t\ti = 0;\n\n\t\tif (cgi_handler && cgi_handler->used > 1) {\n\t\t\targs[i++] = cgi_handler->ptr;\n\t\t}\n\t\targs[i++] = con->physical.path->ptr;\n\t\targs[i++] = NULL;\n\n\t\t/* search for the last / */\n\t\tif (NULL != (c = strrchr(con->physical.path->ptr, '/'))) {\n\t\t\t*c = '\\0';\n\n\t\t\t/* change to the physical directory */\n\t\t\tif (-1 == chdir(con->physical.path->ptr)) {\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"ssb\", \"chdir failed:\", strerror(errno), con->physical.path);\n\t\t\t}\n\t\t\t*c = '/';\n\t\t}\n\n\t\t/* we don't need the client socket */\n\t\tfor (i = 3; i < 256; i++) {\n\t\t\tclose(i);\n\t\t}\n\n\t\t/* exec the cgi */\n\t\texecve(args[0], args, env.ptr);\n\n\t\t/* */\n\t\tSEGFAULT(\"execve(%s) failed: %s\", args[0], strerror(errno));\n\t\tbreak;\n\t}\n\tcase -1:\n\t\t/* error */\n\t\tERROR(\"fork() failed: %s\", strerror(errno));\n\t\tbreak;\n\tdefault: {\n\t\tcgi_session *sess;\n\t\t/* father */\n\n\t\tclose(from_cgi_fds[1]);\n\t\tclose(to_cgi_fds[0]);\n\n\t\t/* register PID and wait for them asyncronously */\n\t\tcon->mode = p->id;\n\t\tbuffer_reset(con->physical.path);\n\n\t\tsess = cgi_session_init();\n\n\t\tsess->remote_con = con;\n\t\tsess->pid = pid;\n\n\t\tassert(sess->sock);\n\n\t\tsess->sock->fd = from_cgi_fds[0];\n\t\tsess->sock->type = IOSOCKET_TYPE_PIPE;\n\t\tsess->wb_sock->fd = to_cgi_fds[1];\n\t\tsess->wb_sock->type = IOSOCKET_TYPE_PIPE;\n\n\t\tif (-1 == fdevent_fcntl_set(srv->ev, sess->sock)) {\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"ss\", \"fcntl failed: \", strerror(errno));\n\n\t\t\tcgi_session_free(sess);\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tcon->plugin_ctx[p->id] = sess;\n\n\t\tfdevent_register(srv->ev, sess->sock, cgi_handle_fdevent, sess);\n\t\tfdevent_event_add(srv->ev, sess->sock, FDEVENT_IN);\n\n\t\tsess->state = CGI_STATE_READ_RESPONSE_HEADER;\n\n\t\tbreak;\n\t}\n\t}\n\n\treturn 0;\n#else\n\treturn -1;\n#endif\n}",
    "filename": "src/mod_cgi.c"
  },
  "lighttpd_1948-1949": {
    "buggy": "int http_response_write_header(server *srv, connection *con, chunkqueue *raw) {\n\tbuffer *b;\n\tsize_t i;\n\tint have_date = 0;\n\tint have_server = 0;\n\tint allow_keep_alive = 0;\n\n\tb = chunkqueue_get_prepend_buffer(raw);\n\n\tif (con->request.http_version == HTTP_VERSION_1_1) {\n\t\tBUFFER_COPY_STRING_CONST(b, \"HTTP/1.1 \");\n\t} else {\n\t\tBUFFER_COPY_STRING_CONST(b, \"HTTP/1.0 \");\n\t}\n\tbuffer_append_long(b, con->http_status);\n\tBUFFER_APPEND_STRING_CONST(b, \" \");\n\tbuffer_append_string(b, get_http_status_name(con->http_status));\n\n\tif (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) {\n\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Transfer-Encoding\"), CONST_STR_LEN(\"chunked\"));\n\t\tallow_keep_alive = 1;\n\t} else if (con->response.content_length >= 0) {\n\t\tbuffer_copy_off_t(srv->tmp_buf, con->response.content_length);\n\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Content-Length\"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1);\n\n\t\tallow_keep_alive = 1;\n\t}\n\n\t/* keep-alive needs Content-Length or chunked encoding. */\n\tif (!allow_keep_alive) con->keep_alive = 0;\n\n\tif (con->request.http_version != HTTP_VERSION_1_1 || con->keep_alive == 0) {\n\t\tif (con->keep_alive) {\n\t\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Connection\"), CONST_STR_LEN(\"keep-alive\"));\n\t\t} else {\n\t\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Connection\"), CONST_STR_LEN(\"close\"));\n\t\t}\n\t}\n\n\n\t/* add all headers */\n\tfor (i = 0; i < con->response.headers->used; i++) {\n\t\tdata_string *ds;\n\n\t\tds = (data_string *)con->response.headers->data[i];\n\n\t\tif (ds->value->used && ds->key->used &&\n\t\t    0 != strncmp(ds->key->ptr, \"X-LIGHTTPD-\", sizeof(\"X-LIGHTTPD-\") - 1) &&\n\t\t    0 != strcasecmp(ds->key->ptr, \"X-Sendfile\")) {\n\t\t\tif (buffer_is_equal_string(ds->key, CONST_STR_LEN(\"Date\"))) have_date = 1;\n\t\t\tif (buffer_is_equal_string(ds->key, CONST_STR_LEN(\"Server\"))) have_server = 1;\n\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\n\");\n\t\t\tbuffer_append_string_buffer(b, ds->key);\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \": \");\n\t\t\tbuffer_append_string_buffer(b, ds->value);\n#if 0\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"bb\",\n\t\t\t\t\tds->key, ds->value);\n#endif\n\t\t}\n\t}\n\n\tif (!have_date) {\n\t\t/* HTTP/1.1 requires a Date: header */\n\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\nDate: \");\n\n\t\t/* cache the generated timestamp */\n\t\tif (srv->cur_ts != srv->last_generated_date_ts) {\n\t\t\tbuffer_prepare_copy(srv->ts_date_str, 255);\n\n\t\t\tstrftime(srv->ts_date_str->ptr, srv->ts_date_str->size - 1,\n\t\t\t\t \"%a, %d %b %Y %H:%M:%S GMT\", gmtime(&(srv->cur_ts)));\n\n\t\t\tsrv->ts_date_str->used = strlen(srv->ts_date_str->ptr) + 1;\n\n\t\t\tsrv->last_generated_date_ts = srv->cur_ts;\n\t\t}\n\n\t\tbuffer_append_string_buffer(b, srv->ts_date_str);\n\t}\n\n\tif (!have_server) {\n\t\tif (buffer_is_empty(con->conf.server_tag)) {\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\nServer: \" PACKAGE_NAME \"/\" PACKAGE_VERSION);\n\t\t} else {\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\nServer: \");\n\t\t\tbuffer_append_string_buffer(b, con->conf.server_tag);\n\t\t}\n\t}\n\n\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\n\\r\\n\");\n\n\n\tcon->bytes_header = b->used - 1;\n\traw->bytes_in += b->used - 1;\n\n\tif (con->conf.log_response_header) {\n\t\tlog_error_write(srv, __FILE__, __LINE__, \"sSb\", \"Response-Header:\", \"\\n\", b);\n\t}\n\n\treturn 0;\n}",
    "start": 31,
    "end": 133,
    "fix": "int http_response_write_header(server *srv, connection *con, chunkqueue *raw) {\n\tbuffer *b;\n\tsize_t i;\n\tint have_date = 0;\n\tint have_server = 0;\n\tint allow_keep_alive = 0;\n\n\tb = chunkqueue_get_prepend_buffer(raw);\n\n\tif (con->request.http_version == HTTP_VERSION_1_1) {\n\t\tBUFFER_COPY_STRING_CONST(b, \"HTTP/1.1 \");\n\t} else {\n\t\tBUFFER_COPY_STRING_CONST(b, \"HTTP/1.0 \");\n\t}\n\tbuffer_append_long(b, con->http_status);\n\tBUFFER_APPEND_STRING_CONST(b, \" \");\n\tbuffer_append_string(b, get_http_status_name(con->http_status));\n\n\tif (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) {\n\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Transfer-Encoding\"), CONST_STR_LEN(\"chunked\"));\n\t\tallow_keep_alive = 1;\n\t} else if ((con->http_status >= 100 && con->http_status < 200) ||\n\t\t    con->http_status == 204 ||\n\t\t    con->http_status == 304) {\n\t\t/* 1xx, 204 and 304 never have a content-body -> \n\t\t *   never have a Content-Length and are always \n\t\t *   able to do keep-alive\n\t\t */\n\t\tallow_keep_alive = 1;\n\t} else if (con->response.content_length >= 0) {\n\t\tbuffer_copy_off_t(srv->tmp_buf, con->response.content_length);\n\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Content-Length\"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1);\n\n\t\tallow_keep_alive = 1;\n\t}\n\n\t/* keep-alive needs Content-Length or chunked encoding. */\n\tif (!allow_keep_alive) con->keep_alive = 0;\n\n\tif (con->request.http_version != HTTP_VERSION_1_1 || con->keep_alive == 0) {\n\t\tif (con->keep_alive) {\n\t\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Connection\"), CONST_STR_LEN(\"keep-alive\"));\n\t\t} else {\n\t\t\tresponse_header_overwrite(srv, con, CONST_STR_LEN(\"Connection\"), CONST_STR_LEN(\"close\"));\n\t\t}\n\t}\n\n\n\t/* add all headers */\n\tfor (i = 0; i < con->response.headers->used; i++) {\n\t\tdata_string *ds;\n\n\t\tds = (data_string *)con->response.headers->data[i];\n\n\t\tif (ds->value->used && ds->key->used &&\n\t\t    0 != strncmp(ds->key->ptr, \"X-LIGHTTPD-\", sizeof(\"X-LIGHTTPD-\") - 1) &&\n\t\t    0 != strcasecmp(ds->key->ptr, \"X-Sendfile\")) {\n\t\t\tif (buffer_is_equal_string(ds->key, CONST_STR_LEN(\"Date\"))) have_date = 1;\n\t\t\tif (buffer_is_equal_string(ds->key, CONST_STR_LEN(\"Server\"))) have_server = 1;\n\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\n\");\n\t\t\tbuffer_append_string_buffer(b, ds->key);\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \": \");\n\t\t\tbuffer_append_string_buffer(b, ds->value);\n#if 0\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"bb\",\n\t\t\t\t\tds->key, ds->value);\n#endif\n\t\t}\n\t}\n\n\tif (!have_date) {\n\t\t/* HTTP/1.1 requires a Date: header */\n\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\nDate: \");\n\n\t\t/* cache the generated timestamp */\n\t\tif (srv->cur_ts != srv->last_generated_date_ts) {\n\t\t\tbuffer_prepare_copy(srv->ts_date_str, 255);\n\n\t\t\tstrftime(srv->ts_date_str->ptr, srv->ts_date_str->size - 1,\n\t\t\t\t \"%a, %d %b %Y %H:%M:%S GMT\", gmtime(&(srv->cur_ts)));\n\n\t\t\tsrv->ts_date_str->used = strlen(srv->ts_date_str->ptr) + 1;\n\n\t\t\tsrv->last_generated_date_ts = srv->cur_ts;\n\t\t}\n\n\t\tbuffer_append_string_buffer(b, srv->ts_date_str);\n\t}\n\n\tif (!have_server) {\n\t\tif (buffer_is_empty(con->conf.server_tag)) {\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\nServer: \" PACKAGE_NAME \"/\" PACKAGE_VERSION);\n\t\t} else {\n\t\t\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\nServer: \");\n\t\t\tbuffer_append_string_buffer(b, con->conf.server_tag);\n\t\t}\n\t}\n\n\tBUFFER_APPEND_STRING_CONST(b, \"\\r\\n\\r\\n\");\n\n\n\tcon->bytes_header = b->used - 1;\n\traw->bytes_in += b->used - 1;\n\n\tif (con->conf.log_response_header) {\n\t\tlog_error_write(srv, __FILE__, __LINE__, \"sSb\", \"Response-Header:\", \"\\n\", b);\n\t}\n\n\treturn 0;\n}",
    "filename": "src/response.c"
  },
  "lighttpd_2254-2259": {
    "buggy": "URIHANDLER_FUNC(mod_secdownload_uri_handler) {\n\tplugin_data *p = p_d;\n\tMD5_CTX Md5Ctx;\n\tHASH HA1;\n\tconst char *rel_uri, *ts_str, *md5_str;\n\ttime_t ts = 0;\n\tsize_t i;\n\n\tif (con->uri.path->used == 0) return HANDLER_GO_ON;\n\n\tmod_secdownload_patch_connection(srv, con, p);\n\n\tif (buffer_is_empty(p->conf.uri_prefix)) return HANDLER_GO_ON;\n\n\tif (buffer_is_empty(p->conf.secret)) {\n\t\tERROR(\"secdownload.secret has to be set: %s\", \"\");\n\n\t\treturn HANDLER_ERROR;\n\t}\n\n\tif (buffer_is_empty(p->conf.doc_root)) {\n\t\tERROR(\"secdownload.document-root has to be set: %s\", \"\");\n\t\t\n\t\treturn HANDLER_ERROR;\n\t}\n\n\tif (con->conf.log_request_handling) {\n\t\tTRACE(\"-- handling %s in mod_secdownload\", SAFE_BUF_STR(con->uri.path));\n\t}\n\n\t/*\n\t *  /<uri-prefix>[a-f0-9]{32}/[a-f0-9]{8}/<rel-path>\n\t */\n\n\tif (0 != strncmp(con->uri.path->ptr, p->conf.uri_prefix->ptr, p->conf.uri_prefix->used - 1)) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"prefix '%s' didn't matched the url: %s\", SAFE_BUF_STR(p->conf.uri_prefix), SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\n\tmd5_str = con->uri.path->ptr + p->conf.uri_prefix->used - 1;\n\n\tif (!is_hex_len(md5_str, 32)) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"expected a 32-char hex-val as md5-hash: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\tif (*(md5_str + 32) != '/') {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"missing a / after the md5-hash: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\n\tts_str = md5_str + 32 + 1;\n\n\tif (!is_hex_len(ts_str, 8)) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"expected a 8-char hex-val after md5-hash: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\tif (*(ts_str + 8) != '/') {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"missing a / after the timestamp: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\n\tfor (i = 0; i < 8; i++) {\n\t\tts = (ts << 4) + hex2int(*(ts_str + i));\n\t}\n\n\t/* timed-out */\n\tif (srv->cur_ts - ts > p->conf.timeout ||\n\t    srv->cur_ts - ts < -p->conf.timeout) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"timestamp is too old: %ld, timeout: %d\", ts, p->conf.timeout);\n\t\t}\n\n\t\tcon->http_status = 408;\n\n\t\treturn HANDLER_FINISHED;\n\t}\n\n\trel_uri = ts_str + 8;\n\n\t/* checking MD5\n\t *\n\t * <secret><rel-path><timestamp-hex>\n\t */\n\n\tbuffer_copy_string_buffer(p->md5, p->conf.secret);\n\tbuffer_append_string(p->md5, rel_uri);\n\tbuffer_append_string_len(p->md5, ts_str, 8);\n\n\tMD5_Init(&Md5Ctx);\n\tMD5_Update(&Md5Ctx, (unsigned char *)p->md5->ptr, p->md5->used - 1);\n\tMD5_Final(HA1, &Md5Ctx);\n\n\tbuffer_copy_string_hex(p->md5, (char *)HA1, 16);\n\n\tif (0 != strncasecmp(md5_str, p->md5->ptr, 32)) {\n\t\tcon->http_status = 403;\n\n\t\tTRACE(\"MD5 didn't matched: %s == %s\", md5_str, SAFE_BUF_STR(p->md5));\n\n\t\treturn HANDLER_FINISHED;\n\t}\n\n\t/* starting with the last / we should have relative-path to the docroot\n\t */\n\n\tbuffer_copy_string_buffer(con->physical.doc_root, p->conf.doc_root);\n\tbuffer_copy_string(con->physical.rel_path, rel_uri);\n\tbuffer_copy_string_buffer(con->physical.path, con->physical.doc_root);\n\tbuffer_append_string_buffer(con->physical.path, con->physical.rel_path);\n\n\tif (con->conf.log_request_handling) {\n\t\tTRACE(\"MD5 matched, timestamp is ok, sending %s\", SAFE_BUF_STR(con->physical.path));\n\t}\n\n\treturn HANDLER_GO_ON;\n}",
    "start": 197,
    "end": 327,
    "fix": "URIHANDLER_FUNC(mod_secdownload_uri_handler) {\n\tplugin_data *p = p_d;\n\tMD5_CTX Md5Ctx;\n\tHASH HA1;\n\tconst char *rel_uri, *ts_str, *md5_str;\n\ttime_t ts = 0;\n\tsize_t i;\n\n\tif (con->uri.path->used == 0) return HANDLER_GO_ON;\n\n\tmod_secdownload_patch_connection(srv, con, p);\n\n\tif (buffer_is_empty(p->conf.uri_prefix)) return HANDLER_GO_ON;\n\n\tif (buffer_is_empty(p->conf.secret)) {\n\t\tERROR(\"secdownload.secret has to be set: %s\", \"\");\n\n\t\treturn HANDLER_ERROR;\n\t}\n\n\tif (buffer_is_empty(p->conf.doc_root)) {\n\t\tERROR(\"secdownload.document-root has to be set: %s\", \"\");\n\t\t\n\t\treturn HANDLER_ERROR;\n\t}\n\n\tif (con->conf.log_request_handling) {\n\t\tTRACE(\"-- handling %s in mod_secdownload\", SAFE_BUF_STR(con->uri.path));\n\t}\n\n\t/*\n\t *  /<uri-prefix>[a-f0-9]{32}/[a-f0-9]{8}/<rel-path>\n\t */\n\n\tif (0 != strncmp(con->uri.path->ptr, p->conf.uri_prefix->ptr, p->conf.uri_prefix->used - 1)) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"prefix '%s' didn't matched the url: %s\", SAFE_BUF_STR(p->conf.uri_prefix), SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\n\tmd5_str = con->uri.path->ptr + p->conf.uri_prefix->used - 1;\n\n\tif (!is_hex_len(md5_str, 32)) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"expected a 32-char hex-val as md5-hash: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\tif (*(md5_str + 32) != '/') {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"missing a / after the md5-hash: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\n\tts_str = md5_str + 32 + 1;\n\n\tif (!is_hex_len(ts_str, 8)) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"expected a 8-char hex-val after md5-hash: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\tif (*(ts_str + 8) != '/') {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"missing a / after the timestamp: %s\", SAFE_BUF_STR(con->uri.path));\n\t\t}\n\n\t\treturn HANDLER_GO_ON;\n\t}\n\n\tfor (i = 0; i < 8; i++) {\n\t\tts = (ts << 4) + hex2int(*(ts_str + i));\n\t}\n\n\t/* timed-out */\n\tif ( (srv->cur_ts > ts && srv->cur_ts - ts > p->conf.timeout) ||\n\t     (srv->cur_ts < ts && ts - srv->cur_ts > p->conf.timeout) ) {\n\t\tif (con->conf.log_request_handling) {\n\t\t\tTRACE(\"timestamp is too old: %ld, timeout: %d\", ts, p->conf.timeout);\n\t\t}\n\n\t\t/* \"Gone\" as the url will never be valid again instead of \"408 - Timeout\" where the request may be repeated */\n\t\tcon->http_status = 410;\n\n\t\treturn HANDLER_FINISHED;\n\t}\n\n\trel_uri = ts_str + 8;\n\n\t/* checking MD5\n\t *\n\t * <secret><rel-path><timestamp-hex>\n\t */\n\n\tbuffer_copy_string_buffer(p->md5, p->conf.secret);\n\tbuffer_append_string(p->md5, rel_uri);\n\tbuffer_append_string_len(p->md5, ts_str, 8);\n\n\tMD5_Init(&Md5Ctx);\n\tMD5_Update(&Md5Ctx, (unsigned char *)p->md5->ptr, p->md5->used - 1);\n\tMD5_Final(HA1, &Md5Ctx);\n\n\tbuffer_copy_string_hex(p->md5, (char *)HA1, 16);\n\n\tif (0 != strncasecmp(md5_str, p->md5->ptr, 32)) {\n\t\tcon->http_status = 403;\n\n\t\tTRACE(\"MD5 didn't matched: %s == %s\", md5_str, SAFE_BUF_STR(p->md5));\n\n\t\treturn HANDLER_FINISHED;\n\t}\n\n\t/* starting with the last / we should have relative-path to the docroot\n\t */\n\n\tbuffer_copy_string_buffer(con->physical.doc_root, p->conf.doc_root);\n\tbuffer_copy_string(con->physical.rel_path, rel_uri);\n\tbuffer_copy_string_buffer(con->physical.path, con->physical.doc_root);\n\tbuffer_append_string_buffer(con->physical.path, con->physical.rel_path);\n\n\tif (con->conf.log_request_handling) {\n\t\tTRACE(\"MD5 matched, timestamp is ok, sending %s\", SAFE_BUF_STR(con->physical.path));\n\t}\n\n\treturn HANDLER_GO_ON;\n}",
    "filename": "src/mod_secure_download.c"
  },
  "lighttpd_2661-2662": {
    "buggy": "static void accesslog_append_escaped(buffer *dest, buffer *str) {\n\t/* replaces non-printable chars with \\xHH where HH is the hex representation of the byte */\n\t/* exceptions: \" => \\\", \\ => \\\\, whitespace chars => \\n \\t etc. */\n\tbuffer_prepare_append(dest, str->used - 1);\n\n\tfor (unsigned int i = 0; i < str->used - 1; i++) {\n\t\tif (str->ptr[i] >= ' ' && str->ptr[i] <= '~') {\n\t\t\t/* printable chars */\n\t\t\tbuffer_append_string_len(dest, &str->ptr[i], 1);\n\t\t} else switch (str->ptr[i]) {\n\t\tcase '\"':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\\\\"\");\n\t\t\tbreak;\n\t\tcase '\\\\':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\\\\\\");\n\t\t\tbreak;\n\t\tcase '\\b':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\b\");\n\t\t\tbreak;\n\t\tcase '\\n':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\n\");\n\t\t\tbreak;\n\t\tcase '\\r':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\r\");\n\t\t\tbreak;\n\t\tcase '\\t':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\t\");\n\t\t\tbreak;\n\t\tcase '\\v':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\v\");\n\t\t\tbreak;\n\t\tdefault: {\n\t\t\t\t/* non printable char => \\xHH */\n\t\t\t\tchar hh[5] = {'\\\\','x',0,0,0};\n\t\t\t\tchar h = str->ptr[i] / 16;\n\t\t\t\thh[2] = (h > 9) ? (h - 10 + 'A') : (h + '0');\n\t\t\t\th = str->ptr[i] % 16;\n\t\t\t\thh[3] = (h > 9) ? (h - 10 + 'A') : (h + '0');\n\t\t\t\tbuffer_append_string_len(dest, &hh[0], 4);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}",
    "start": 166,
    "end": 209,
    "fix": "static void accesslog_append_escaped(buffer *dest, buffer *str) {\n\t/* replaces non-printable chars with \\xHH where HH is the hex representation of the byte */\n\t/* exceptions: \" => \\\", \\ => \\\\, whitespace chars => \\n \\t etc. */\n\tif (str->used == 0) return;\n\tbuffer_prepare_append(dest, str->used - 1);\n\n\tfor (unsigned int i = 0; i < str->used - 1; i++) {\n\t\tif (str->ptr[i] >= ' ' && str->ptr[i] <= '~') {\n\t\t\t/* printable chars */\n\t\t\tbuffer_append_string_len(dest, &str->ptr[i], 1);\n\t\t} else switch (str->ptr[i]) {\n\t\tcase '\"':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\\\\"\");\n\t\t\tbreak;\n\t\tcase '\\\\':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\\\\\\");\n\t\t\tbreak;\n\t\tcase '\\b':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\b\");\n\t\t\tbreak;\n\t\tcase '\\n':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\n\");\n\t\t\tbreak;\n\t\tcase '\\r':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\r\");\n\t\t\tbreak;\n\t\tcase '\\t':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\t\");\n\t\t\tbreak;\n\t\tcase '\\v':\n\t\t\tBUFFER_APPEND_STRING_CONST(dest, \"\\\\v\");\n\t\t\tbreak;\n\t\tdefault: {\n\t\t\t\t/* non printable char => \\xHH */\n\t\t\t\tchar hh[5] = {'\\\\','x',0,0,0};\n\t\t\t\tchar h = str->ptr[i] / 16;\n\t\t\t\thh[2] = (h > 9) ? (h - 10 + 'A') : (h + '0');\n\t\t\t\th = str->ptr[i] % 16;\n\t\t\t\thh[3] = (h > 9) ? (h - 10 + 'A') : (h + '0');\n\t\t\t\tbuffer_append_string_len(dest, &hh[0], 4);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}",
    "filename": "src/mod_accesslog.c"
  },
  "lighttpd_2785-2786": {
    "buggy": "int http_request_parse(server *srv, connection *con, http_req *req) {\n\tsize_t i;\n\tenum { HTTP_CONNECTION_UNSET, HTTP_CONNECTION_CLOSE, HTTP_CONNECTION_KEEPALIVE } keep_alive_set = HTTP_CONNECTION_UNSET;\n\n\tif (req->protocol == HTTP_VERSION_UNSET) {\n\t\tcon->http_status = 505; /* Version not Supported */\n\t\treturn 0;\n\t}\n\n\tif (req->method == HTTP_METHOD_UNSET) {\n\t\tcon->http_status = 405; /* Method not allowed */\n\t\treturn 0;\n\t}\n\n\tif (buffer_is_empty(req->uri_raw)) {\n\t\tcon->http_status = 400;\n\t\treturn 0;\n\t}\n\n\t/* strip absolute URLs\n\t * */\n\n\tbuffer_copy_string_buffer(con->request.orig_uri, req->uri_raw);\n\tif (req->uri_raw->ptr[0] == '/') {\n\t\tbuffer_copy_string_buffer(con->request.uri, req->uri_raw);\n\t} else if (req->uri_raw->ptr[0] == '*') {\n\t\tif (req->method != HTTP_METHOD_OPTIONS) {\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\t\tbuffer_copy_string_buffer(con->request.uri, req->uri_raw);\n\t} else {\n\t\t/* GET http://www.example.org/foobar */\n\t\tchar *sl;\n\n\t\tif (0 != strncmp(BUF_STR(req->uri_raw), \"http://\", 7)) {\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (NULL == (sl = strchr(BUF_STR(req->uri_raw) + 7, '/'))) {\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\n\t\tbuffer_copy_string(con->request.uri, sl);\n\t\tbuffer_copy_string_len(con->request.http_host, BUF_STR(req->uri_raw) + 7, sl - BUF_STR(req->uri_raw) - 7);\n\n\t\tif (request_check_hostname(con->request.http_host)) {\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tTRACE(\"Host header is invalid (Status: 400), was %s\", SAFE_BUF_STR(con->request.http_host));\n\t\t\t}\n\t\t\tcon->http_status = 400;\n\t\t\tcon->keep_alive = 0;\n\n\t\t\tbuffer_reset(con->request.http_host);\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tcon->request.http_method = req->method;\n\tcon->request.http_version = req->protocol;\n\n\tfor (i = 0; i < req->headers->used; i++) {\n\t\tdata_string *ds = (data_string *)req->headers->data[i];\n\t\tdata_string *hdr;\n\t\tint cmp;\n\n\t\t/* this list is sorted */\n\t\tif (0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Connection\")))) {\n\t\t\tarray *vals;\n\t\t\tsize_t vi;\n\t\t\t/* Connection: Keep-Alive, ... */\n\n\t\t\tvals = srv->split_vals;\n\n\t\t\tarray_reset(vals);\n\t\t\thttp_request_split_value(vals, ds->value);\n\n\t\t\tfor (vi = 0; vi < vals->used; vi++) {\n\t\t\t\tdata_string *dsv = (data_string *)vals->data[vi];\n\n\t\t\t\tif (0 == buffer_caseless_compare(CONST_BUF_LEN(dsv->value), CONST_STR_LEN(\"keep-alive\"))) {\n\t\t\t\t\tkeep_alive_set = HTTP_CONNECTION_KEEPALIVE;\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (0 == buffer_caseless_compare(CONST_BUF_LEN(dsv->value), CONST_STR_LEN(\"close\"))) {\n\t\t\t\t\tkeep_alive_set = HTTP_CONNECTION_CLOSE;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Content-Length\")))) {\n\t\t\tchar *err;\n\t\t\toff_t r;\n\n\t\t\t/* ignore the header, if it is a duplicate */\n\t\t\tif (con->request.content_length != -1) continue;\n\n\t\t\tr = str_to_off_t(ds->value->ptr, &err, 10);\n\n\t\t\tif (*err != '\\0') {\n\t\t\t\tTRACE(\"content-length is not a number: %s (Status: 400)\", err);\n\n\t\t\t\tcon->http_status = 400;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * check if we had a over- or underrun in the string conversion\n\t\t\t */\n\t\t\tif (r == STR_OFF_T_MIN ||\n\t\t\t    r == STR_OFF_T_MAX) {\n\t\t\t\tif (errno == ERANGE) {\n\t\t\t\t\tcon->http_status = 413;\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * negative content-length is not supported \n\t\t\t * and is a bad request\n\t\t\t */\n\t\t\tif (r < 0) {\n\t\t\t\tcon->http_status = 400;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t/* don't handle more the SSIZE_MAX bytes in content-length */\n\t\t\tif (r > SSIZE_MAX) {\n\t\t\t\tcon->http_status = 413;\n\n\t\t\t\tERROR(\"request-size too long: %s (Status: 413)\", SAFE_BUF_STR(ds->value));\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tcon->request.content_length = r;\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Expect\")))) {\n\t\t\t/* HTTP 2616 8.2.3\n\t\t\t * Expect: 100-continue\n\t\t\t *\n\t\t\t *   -> (10.1.1)  100 (read content, process request, send final status-code)\n\t\t\t *   -> (10.4.18) 417 (close)\n\t\t\t *\n\t\t\t *\n\t\t\t */\n\n\t\t\tif (0 != buffer_caseless_compare(CONST_BUF_LEN(ds->value), CONST_STR_LEN(\"100-continue\"))) {\n\t\t\t\t/* we only support 100-continue */\n\t\t\t\tcon->http_status = 417;\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (con->request.http_version != HTTP_VERSION_1_1) {\n\t\t\t\t/* only HTTP/1.1 clients can send us this header */\n\t\t\t\tcon->http_status = 417;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Host\")))) {\n\t\t\tif (request_check_hostname(ds->value)) {\n\t\t\t\tTRACE(\"Host header is invalid (Status: 400), was %s\", SAFE_BUF_STR(ds->value));\n\t\t\t\tcon->http_status = 400;\n\t\t\t\tcon->keep_alive = 0;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (!buffer_is_empty(con->request.http_host) && !buffer_is_equal(con->request.http_host, ds->value)) {\n\t\t\t\tTRACE(\"%s\", \"Host header is duplicate (Status: 400)\");\n\t\t\t\tcon->http_status = 400;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tbuffer_copy_string_buffer(con->request.http_host, ds->value);\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"If-Modified-Since\")))) {\n\t\t\tdata_string *old;\n\n\t\t\tif (NULL != (old = (data_string *)array_get_element(con->request.headers, CONST_STR_LEN(\"If-Modified-Since\")))) {\n\t\t\t\tif (0 != buffer_caseless_compare(CONST_BUF_LEN(old->value), CONST_BUF_LEN(ds->value))) {\n\t\t\t\t\t/* duplicate header and different timestamps */\n\t\t\t\t\tcon->http_status = 400;\n\n\t\t\t\t\tTRACE(\"%s\", \"If-Modified-Since is duplicate (Status: 400)\");\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"If-None-Match\")))) {\n\t\t\tdata_string *old;\n\t\t\t/* if dup, only the first one will survive */\n\t\t\tif (NULL != (old = (data_string *)array_get_element(con->request.headers, CONST_STR_LEN(\"If-None-Match\")))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Range\")))) {\n\t\t\tif (NULL != array_get_element(con->request.headers, CONST_STR_LEN(\"Range\"))) { \n\t\t\t\t/* duplicate Range header */\n\n\t\t\t\tTRACE(\"%s\", \"Range: header is duplicate (Status: 400)\");\n\n\t\t\t\tcon->http_status = 400;\n\t\t\t\tcon->keep_alive = 0;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (NULL == (hdr = (data_string *)array_get_unused_element(con->request.headers, TYPE_STRING))) {\n\t\t\thdr = data_string_init();\n\t\t}\n\n\t\tbuffer_copy_string_buffer(hdr->key, ds->key);\n\t\tbuffer_copy_string_buffer(hdr->value, ds->value);\n\n\t\tarray_insert_unique(con->request.headers, (data_unset *)hdr);\n\t}\n\n\n\tcon->header_len = i;\n\n\t/* do some post-processing */\n\n\tif (con->request.http_version == HTTP_VERSION_1_1) {\n\t\tif (keep_alive_set != HTTP_CONNECTION_CLOSE) {\n\t\t\t/* no Connection-Header sent */\n\n\t\t\t/* HTTP/1.1 -> keep-alive default TRUE */\n\t\t\tcon->keep_alive = 1;\n\t\t} else {\n\t\t\tcon->keep_alive = 0;\n\t\t}\n\n\t\t/* RFC 2616, 14.23 */\n\t\tif (buffer_is_empty(con->request.http_host)) {\n\t\t\tcon->http_status = 400;\n\t\t\tcon->response.keep_alive = 0;\n\t\t\tcon->keep_alive = 0;\n\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"s\", \"HTTP/1.1 but Host missing -> 400\");\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"Sb\",\n\t\t\t\t\t\t\"request-header:\\n\",\n\t\t\t\t\t\tcon->request.request);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t} else {\n\t\tif (keep_alive_set == HTTP_CONNECTION_KEEPALIVE) {\n\t\t\t/* no Connection-Header sent */\n\n\t\t\t/* HTTP/1.0 -> keep-alive default FALSE  */\n\t\t\tcon->keep_alive = 1;\n\t\t} else {\n\t\t\tcon->keep_alive = 0;\n\t\t}\n\t}\n\n\tswitch(con->request.http_method) {\n\tcase HTTP_METHOD_GET:\n\tcase HTTP_METHOD_HEAD:\n\t\t/* content-length is forbidden for those */\n\t\tif (con->request.content_length != -1) {\n\t\t\t/* content-length is missing */\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tERROR(\"GET/HEAD with content-length: %d\", 400);\n\t\t\t}\n\n\t\t\tcon->keep_alive = 0;\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\t\tbreak;\n\tcase HTTP_METHOD_POST:\n\t\t/* content-length is required for them */\n\t\tif (con->request.content_length == -1) {\n\t\t\t/* content-length is missing */\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"s\",\n\t\t\t\t\t\t\"POST-request, but content-length missing -> 411\");\n\t\t\t}\n\n\t\t\tcon->keep_alive = 0;\n\t\t\tcon->http_status = 411;\n\t\t\treturn 0;\n\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\t/* the may have a content-length */\n\t\tbreak;\n\t}\n\n\n\t/* check if we have read post data */\n\tif (con->request.content_length != -1) {\n\t\t/* divide by 1024 as srvconf.max_request_size is in kBytes */\n\t\tif (srv->srvconf.max_request_size != 0 &&\n\t\t    ((size_t)(con->request.content_length >> 10)) > srv->srvconf.max_request_size) {\n\t\t\t/* the request body itself is larger then\n\t\t\t * our our max_request_size\n\t\t\t */\n\n\t\t\tcon->http_status = 413;\n\t\t\tcon->keep_alive = 0;\n\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"sos\",\n\t\t\t\t\t\"request-size too long:\", con->request.content_length, \"-> 413\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\treturn 0;\n}",
    "start": 275,
    "end": 592,
    "fix": "int http_request_parse(server *srv, connection *con, http_req *req) {\n\tsize_t i;\n\tenum { HTTP_CONNECTION_UNSET, HTTP_CONNECTION_CLOSE, HTTP_CONNECTION_KEEPALIVE } keep_alive_set = HTTP_CONNECTION_UNSET;\n\n\tif (req->protocol == HTTP_VERSION_UNSET) {\n\t\tcon->http_status = 505; /* Version not Supported */\n\t\treturn 0;\n\t}\n\n\tif (req->method == HTTP_METHOD_UNSET) {\n\t\tcon->http_status = 405; /* Method not allowed */\n\t\treturn 0;\n\t}\n\n\tif (buffer_is_empty(req->uri_raw)) {\n\t\tcon->http_status = 400;\n\t\treturn 0;\n\t}\n\n\t/* strip absolute URLs\n\t * */\n\n\tbuffer_copy_string_buffer(con->request.orig_uri, req->uri_raw);\n\tif (req->uri_raw->ptr[0] == '/') {\n\t\tbuffer_copy_string_buffer(con->request.uri, req->uri_raw);\n\t} else if (req->uri_raw->ptr[0] == '*') {\n\t\tif (req->method != HTTP_METHOD_OPTIONS) {\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\t\tbuffer_copy_string_buffer(con->request.uri, req->uri_raw);\n\t} else {\n\t\t/* GET http://www.example.org/foobar */\n\t\tchar *sl;\n\t\tint l;\n\n\t\tif (0 == strncmp(BUF_STR(req->uri_raw), \"https://\", 8)) {\n\t\t\tl = 8;\n\t\t} else if (0 == strncmp(BUF_STR(req->uri_raw), \"http://\", 7)) {\n\t\t\tl = 7;\n\t\t} else {\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (NULL == (sl = strchr(BUF_STR(req->uri_raw) + l, '/'))) {\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\n\t\tbuffer_copy_string(con->request.uri, sl);\n\t\tbuffer_copy_string_len(con->request.http_host, BUF_STR(req->uri_raw) + l, sl - BUF_STR(req->uri_raw) - l);\n\n\t\tif (request_check_hostname(con->request.http_host)) {\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tTRACE(\"Host header is invalid (Status: 400), was %s\", SAFE_BUF_STR(con->request.http_host));\n\t\t\t}\n\t\t\tcon->http_status = 400;\n\t\t\tcon->keep_alive = 0;\n\n\t\t\tbuffer_reset(con->request.http_host);\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tcon->request.http_method = req->method;\n\tcon->request.http_version = req->protocol;\n\n\tfor (i = 0; i < req->headers->used; i++) {\n\t\tdata_string *ds = (data_string *)req->headers->data[i];\n\t\tdata_string *hdr;\n\t\tint cmp;\n\n\t\t/* this list is sorted */\n\t\tif (0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Connection\")))) {\n\t\t\tarray *vals;\n\t\t\tsize_t vi;\n\t\t\t/* Connection: Keep-Alive, ... */\n\n\t\t\tvals = srv->split_vals;\n\n\t\t\tarray_reset(vals);\n\t\t\thttp_request_split_value(vals, ds->value);\n\n\t\t\tfor (vi = 0; vi < vals->used; vi++) {\n\t\t\t\tdata_string *dsv = (data_string *)vals->data[vi];\n\n\t\t\t\tif (0 == buffer_caseless_compare(CONST_BUF_LEN(dsv->value), CONST_STR_LEN(\"keep-alive\"))) {\n\t\t\t\t\tkeep_alive_set = HTTP_CONNECTION_KEEPALIVE;\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (0 == buffer_caseless_compare(CONST_BUF_LEN(dsv->value), CONST_STR_LEN(\"close\"))) {\n\t\t\t\t\tkeep_alive_set = HTTP_CONNECTION_CLOSE;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Content-Length\")))) {\n\t\t\tchar *err;\n\t\t\toff_t r;\n\n\t\t\t/* ignore the header, if it is a duplicate */\n\t\t\tif (con->request.content_length != -1) continue;\n\n\t\t\tr = str_to_off_t(ds->value->ptr, &err, 10);\n\n\t\t\tif (*err != '\\0') {\n\t\t\t\tTRACE(\"content-length is not a number: %s (Status: 400)\", err);\n\n\t\t\t\tcon->http_status = 400;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * check if we had a over- or underrun in the string conversion\n\t\t\t */\n\t\t\tif (r == STR_OFF_T_MIN ||\n\t\t\t    r == STR_OFF_T_MAX) {\n\t\t\t\tif (errno == ERANGE) {\n\t\t\t\t\tcon->http_status = 413;\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * negative content-length is not supported \n\t\t\t * and is a bad request\n\t\t\t */\n\t\t\tif (r < 0) {\n\t\t\t\tcon->http_status = 400;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t/* don't handle more the SSIZE_MAX bytes in content-length */\n\t\t\tif (r > SSIZE_MAX) {\n\t\t\t\tcon->http_status = 413;\n\n\t\t\t\tERROR(\"request-size too long: %s (Status: 413)\", SAFE_BUF_STR(ds->value));\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tcon->request.content_length = r;\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Expect\")))) {\n\t\t\t/* HTTP 2616 8.2.3\n\t\t\t * Expect: 100-continue\n\t\t\t *\n\t\t\t *   -> (10.1.1)  100 (read content, process request, send final status-code)\n\t\t\t *   -> (10.4.18) 417 (close)\n\t\t\t *\n\t\t\t *\n\t\t\t */\n\n\t\t\tif (0 != buffer_caseless_compare(CONST_BUF_LEN(ds->value), CONST_STR_LEN(\"100-continue\"))) {\n\t\t\t\t/* we only support 100-continue */\n\t\t\t\tcon->http_status = 417;\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (con->request.http_version != HTTP_VERSION_1_1) {\n\t\t\t\t/* only HTTP/1.1 clients can send us this header */\n\t\t\t\tcon->http_status = 417;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Host\")))) {\n\t\t\tif (request_check_hostname(ds->value)) {\n\t\t\t\tTRACE(\"Host header is invalid (Status: 400), was %s\", SAFE_BUF_STR(ds->value));\n\t\t\t\tcon->http_status = 400;\n\t\t\t\tcon->keep_alive = 0;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (!buffer_is_empty(con->request.http_host) && !buffer_is_equal(con->request.http_host, ds->value)) {\n\t\t\t\tTRACE(\"%s\", \"Host header is duplicate (Status: 400)\");\n\t\t\t\tcon->http_status = 400;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tbuffer_copy_string_buffer(con->request.http_host, ds->value);\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"If-Modified-Since\")))) {\n\t\t\tdata_string *old;\n\n\t\t\tif (NULL != (old = (data_string *)array_get_element(con->request.headers, CONST_STR_LEN(\"If-Modified-Since\")))) {\n\t\t\t\tif (0 != buffer_caseless_compare(CONST_BUF_LEN(old->value), CONST_BUF_LEN(ds->value))) {\n\t\t\t\t\t/* duplicate header and different timestamps */\n\t\t\t\t\tcon->http_status = 400;\n\n\t\t\t\t\tTRACE(\"%s\", \"If-Modified-Since is duplicate (Status: 400)\");\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"If-None-Match\")))) {\n\t\t\tdata_string *old;\n\t\t\t/* if dup, only the first one will survive */\n\t\t\tif (NULL != (old = (data_string *)array_get_element(con->request.headers, CONST_STR_LEN(\"If-None-Match\")))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Range\")))) {\n\t\t\tif (NULL != array_get_element(con->request.headers, CONST_STR_LEN(\"Range\"))) { \n\t\t\t\t/* duplicate Range header */\n\n\t\t\t\tTRACE(\"%s\", \"Range: header is duplicate (Status: 400)\");\n\n\t\t\t\tcon->http_status = 400;\n\t\t\t\tcon->keep_alive = 0;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (NULL == (hdr = (data_string *)array_get_unused_element(con->request.headers, TYPE_STRING))) {\n\t\t\thdr = data_string_init();\n\t\t}\n\n\t\tbuffer_copy_string_buffer(hdr->key, ds->key);\n\t\tbuffer_copy_string_buffer(hdr->value, ds->value);\n\n\t\tarray_insert_unique(con->request.headers, (data_unset *)hdr);\n\t}\n\n\n\tcon->header_len = i;\n\n\t/* do some post-processing */\n\n\tif (con->request.http_version == HTTP_VERSION_1_1) {\n\t\tif (keep_alive_set != HTTP_CONNECTION_CLOSE) {\n\t\t\t/* no Connection-Header sent */\n\n\t\t\t/* HTTP/1.1 -> keep-alive default TRUE */\n\t\t\tcon->keep_alive = 1;\n\t\t} else {\n\t\t\tcon->keep_alive = 0;\n\t\t}\n\n\t\t/* RFC 2616, 14.23 */\n\t\tif (buffer_is_empty(con->request.http_host)) {\n\t\t\tcon->http_status = 400;\n\t\t\tcon->response.keep_alive = 0;\n\t\t\tcon->keep_alive = 0;\n\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"s\", \"HTTP/1.1 but Host missing -> 400\");\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"Sb\",\n\t\t\t\t\t\t\"request-header:\\n\",\n\t\t\t\t\t\tcon->request.request);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t} else {\n\t\tif (keep_alive_set == HTTP_CONNECTION_KEEPALIVE) {\n\t\t\t/* no Connection-Header sent */\n\n\t\t\t/* HTTP/1.0 -> keep-alive default FALSE  */\n\t\t\tcon->keep_alive = 1;\n\t\t} else {\n\t\t\tcon->keep_alive = 0;\n\t\t}\n\t}\n\n\tswitch(con->request.http_method) {\n\tcase HTTP_METHOD_GET:\n\tcase HTTP_METHOD_HEAD:\n\t\t/* content-length is forbidden for those */\n\t\tif (con->request.content_length != -1) {\n\t\t\t/* content-length is missing */\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tERROR(\"GET/HEAD with content-length: %d\", 400);\n\t\t\t}\n\n\t\t\tcon->keep_alive = 0;\n\t\t\tcon->http_status = 400;\n\t\t\treturn 0;\n\t\t}\n\t\tbreak;\n\tcase HTTP_METHOD_POST:\n\t\t/* content-length is required for them */\n\t\tif (con->request.content_length == -1) {\n\t\t\t/* content-length is missing */\n\t\t\tif (srv->srvconf.log_request_header_on_error) {\n\t\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"s\",\n\t\t\t\t\t\t\"POST-request, but content-length missing -> 411\");\n\t\t\t}\n\n\t\t\tcon->keep_alive = 0;\n\t\t\tcon->http_status = 411;\n\t\t\treturn 0;\n\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\t/* the may have a content-length */\n\t\tbreak;\n\t}\n\n\n\t/* check if we have read post data */\n\tif (con->request.content_length != -1) {\n\t\t/* divide by 1024 as srvconf.max_request_size is in kBytes */\n\t\tif (srv->srvconf.max_request_size != 0 &&\n\t\t    ((size_t)(con->request.content_length >> 10)) > srv->srvconf.max_request_size) {\n\t\t\t/* the request body itself is larger then\n\t\t\t * our our max_request_size\n\t\t\t */\n\n\t\t\tcon->http_status = 413;\n\t\t\tcon->keep_alive = 0;\n\n\t\t\tlog_error_write(srv, __FILE__, __LINE__, \"sos\",\n\t\t\t\t\t\"request-size too long:\", con->request.content_length, \"-> 413\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\treturn 0;\n}",
    "filename": "src/request.c"
  },
  "php_2011-01-18-95388b7cda-b9b1fb1827": {
    "buggy": "PHP_FUNCTION(dom_document_save_html)\n{\n\tzval *id, *nodep = NULL;\n\txmlDoc *docp;\n\txmlNode *node;\n\txmlBufferPtr buf;\n\tdom_object *intern, *nodeobj;\n\txmlChar *mem = NULL;\n\tint size, format;\n\tdom_doc_propsptr doc_props;\n\n\tif (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(),\n\t\t\"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry)\n\t\t== FAILURE) {\n\t\treturn;\n\t}\n\n\tDOM_GET_OBJ(docp, id, xmlDocPtr, intern);\n\n\tdoc_props = dom_get_doc_props(intern->document);\n\tformat = doc_props->formatoutput;\n\n\tif (nodep != NULL) {\n\t\t/* Dump contents of Node */\n\t\tDOM_GET_OBJ(node, nodep, xmlNodePtr, nodeobj);\n\t\tif (node->doc != docp) {\n\t\t\tphp_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document) TSRMLS_CC);\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\t\n\t\tbuf = xmlBufferCreate();\n\t\tif (!buf) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Could not fetch buffer\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\t\n\t\thtmlNodeDumpFormatOutput(buf, docp, node, 0, format);\n\t\tmem = (xmlChar*) xmlBufferContent(buf);\n\t\tif (!mem) {\n\t\t\tRETVAL_FALSE;\n\t\t} else {\n\t\t\tRETVAL_STRING(mem, 1);\n\t\t}\n\t\txmlBufferFree(buf);\n\t} else {\n#if LIBXML_VERSION >= 20623\n\t\thtmlDocDumpMemoryFormat(docp, &mem, &size, format);\n#else\n\t\thtmlDocDumpMemory(docp, &mem, &size);\n#endif\n\t\tif (!size) {\n\t\t\tRETVAL_FALSE;\n\t\t} else {\n\t\t\tRETVAL_STRINGL(mem, size, 1);\n\t\t}\n\t\tif (mem)\n\t\t\txmlFree(mem);\n\t}\n\n}",
    "start": 2285,
    "end": 2344,
    "fix": "PHP_FUNCTION(dom_document_save_html)\n{\n\tzval *id, *nodep = NULL;\n\txmlDoc *docp;\n\txmlNode *node;\n\txmlBufferPtr buf;\n\tdom_object *intern, *nodeobj;\n\txmlChar *mem = NULL;\n\tint size, format;\n\tdom_doc_propsptr doc_props;\n\n\tif (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(),\n\t\t\"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry)\n\t\t== FAILURE) {\n\t\treturn;\n\t}\n\n\tDOM_GET_OBJ(docp, id, xmlDocPtr, intern);\n\n\tdoc_props = dom_get_doc_props(intern->document);\n\tformat = doc_props->formatoutput;\n\n\tif (nodep != NULL) {\n\t\t/* Dump contents of Node */\n\t\tDOM_GET_OBJ(node, nodep, xmlNodePtr, nodeobj);\n\t\tif (node->doc != docp) {\n\t\t\tphp_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document) TSRMLS_CC);\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\t\n\t\tbuf = xmlBufferCreate();\n\t\tif (!buf) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Could not fetch buffer\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\t\n\t\tsize = htmlNodeDump(buf, docp, node);\n\t\tif (size >= 0) {\n\t\t\tmem = (xmlChar*) xmlBufferContent(buf);\n\t\t\tif (!mem) {\n\t\t\t\tRETVAL_FALSE;\n\t\t\t} else {\n\t\t\t\tRETVAL_STRINGL((const char*) mem, size, 1);\n\t\t\t}\n\t\t} else {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Error dumping HTML node\");\n\t\t\tRETVAL_FALSE;\n\t\t}\n\t\txmlBufferFree(buf);\n\t} else {\n#if LIBXML_VERSION >= 20623\n\t\thtmlDocDumpMemoryFormat(docp, &mem, &size, format);\n#else\n\t\thtmlDocDumpMemory(docp, &mem, &size);\n#endif\n\t\tif (!size) {\n\t\t\tRETVAL_FALSE;\n\t\t} else {\n\t\t\tRETVAL_STRINGL((const char*) mem, size, 1);\n\t\t}\n\t\tif (mem)\n\t\t\txmlFree(mem);\n\t}\n\n}",
    "filename": "ext/dom/document.c"
  },
  "php_2011-01-18-b5e12bd4da-163b3bcec9": {
    "buggy": "PHP_FUNCTION(dom_document_save_html)\n{\n\tzval *id;\n\txmlDoc *docp;\n\tdom_object *intern;\n\txmlChar *mem;\n\tint size, format;\n\tdom_doc_propsptr doc_props;\n\n\tif (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"O\", &id, dom_document_class_entry) == FAILURE) {\n\t\treturn;\n\t}\n\n\tDOM_GET_OBJ(docp, id, xmlDocPtr, intern);\n\n#if LIBXML_VERSION >= 20623\n\tdoc_props = dom_get_doc_props(intern->document);\n\tformat = doc_props->formatoutput;\n\thtmlDocDumpMemoryFormat(docp, &mem, &size, format);\n#else\n\thtmlDocDumpMemory(docp, &mem, &size);\n#endif\n\tif (!size) {\n\t\tif (mem)\n\t\t\txmlFree(mem);\n\t\tRETURN_FALSE;\n\t}\n\tRETVAL_STRINGL(mem, size, 1);\n\txmlFree(mem);\n}",
    "start": 2285,
    "end": 2314,
    "fix": "PHP_FUNCTION(dom_document_save_html)\n{\n\tzval *id, *nodep = NULL;\n\txmlDoc *docp;\n\txmlNode *node;\n\txmlBufferPtr buf;\n\tdom_object *intern, *nodeobj;\n\txmlChar *mem = NULL;\n\tint size, format;\n\tdom_doc_propsptr doc_props;\n\n\tif (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(),\n\t\t\"O|O!\", &id, dom_document_class_entry, &nodep, dom_node_class_entry)\n\t\t== FAILURE) {\n\t\treturn;\n\t}\n\n\tDOM_GET_OBJ(docp, id, xmlDocPtr, intern);\n\n\tdoc_props = dom_get_doc_props(intern->document);\n\tformat = doc_props->formatoutput;\n\n\tif (nodep != NULL) {\n\t\t/* Dump contents of Node */\n\t\tDOM_GET_OBJ(node, nodep, xmlNodePtr, nodeobj);\n\t\tif (node->doc != docp) {\n\t\t\tphp_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document) TSRMLS_CC);\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\t\n\t\tbuf = xmlBufferCreate();\n\t\tif (!buf) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Could not fetch buffer\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\t\n\t\txmlNodeDump(buf, docp, node, 0, format);\n\t\tmem = (xmlChar*) xmlBufferContent(buf);\n\t\tif (!mem) {\n\t\t\tRETVAL_FALSE;\n\t\t} else {\n\t\t\tRETVAL_STRING(mem, 1);\n\t\t}\n\t\txmlBufferFree(buf);\n\t} else {\n#if LIBXML_VERSION >= 20623\n\t\thtmlDocDumpMemoryFormat(docp, &mem, &size, format);\n#else\n\t\thtmlDocDumpMemory(docp, &mem, &size);\n#endif\n\t\tif (!size) {\n\t\t\tRETVAL_FALSE;\n\t\t} else {\n\t\t\tRETVAL_STRINGL(mem, size, 1);\n\t\t}\n\t\tif (mem)\n\t\t\txmlFree(mem);\n\t}\n\n}",
    "filename": "ext/dom/document.c"
  },
  "php_2011-01-29-147382033a-5bb0a44e06": {
    "buggy": "static int date_interval_initialize(timelib_rel_time **rt, /*const*/ char *format, int format_length TSRMLS_DC)\n{\n\ttimelib_time     *b = NULL, *e = NULL;\n\ttimelib_rel_time *p = NULL;\n\tint               r = 0;\n\tint               retval = 0;\n\tstruct timelib_error_container *errors;\n\n\ttimelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors);\n\t\n\tif (errors->error_count > 0) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unknown or bad format (%s)\", format);\n\t\tretval = FAILURE;\n\t} else {\n\t\t*rt = p;\n\t\tretval = SUCCESS;\n\t}\n\ttimelib_error_container_dtor(errors);\n\treturn retval;\n}",
    "start": 3445,
    "end": 3464,
    "fix": "static int date_interval_initialize(timelib_rel_time **rt, /*const*/ char *format, int format_length TSRMLS_DC)\n{\n\ttimelib_time     *b = NULL, *e = NULL;\n\ttimelib_rel_time *p = NULL;\n\tint               r = 0;\n\tint               retval = 0;\n\tstruct timelib_error_container *errors;\n\n\ttimelib_strtointerval(format, format_length, &b, &e, &p, &r, &errors);\n\t\n\tif (errors->error_count > 0) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unknown or bad format (%s)\", format);\n\t\tretval = FAILURE;\n\t} else {\n\t\tif(p) {\n\t\t\t*rt = p;\n\t\t\tretval = SUCCESS;\n\t\t} else {\n\t\t\tif(b && e) {\n\t\t\t\ttimelib_update_ts(b, NULL);\n\t\t\t\ttimelib_update_ts(e, NULL);\n\t\t\t\t*rt = timelib_diff(b, e);\n\t\t\t\tretval = SUCCESS;\n\t\t\t} else {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Failed to parse interval (%s)\", format);\n\t\t\t\tretval = FAILURE;\n\t\t\t}\n\t\t}\n\t}\n\ttimelib_error_container_dtor(errors);\n\treturn retval;\n}",
    "filename": "ext/date/php_date.c"
  },
  "php_2011-01-30-5bb0a44e06-1e91069eb4": {
    "buggy": "PHP_FUNCTION(date_isodate_set)\n{\n\tzval         *object;\n\tphp_date_obj *dateobj;\n\tlong          y, w, d = 1;\n\n\tif (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Oll|l\", &object, date_ce_date, &y, &w, &d) == FAILURE) {\n\t\tRETURN_FALSE;\n\t}\n\tdateobj = (php_date_obj *) zend_object_store_get_object(object TSRMLS_CC);\n\tDATE_CHECK_INITIALIZED(dateobj->time, DateTime);\n\tdateobj->time->y = y;\n\tdateobj->time->m = 1;\n\tdateobj->time->d = 1;\n\tdateobj->time->relative.d = timelib_daynr_from_weeknr(y, w, d);\n\tdateobj->time->have_relative = 1;\n\t\n\ttimelib_update_ts(dateobj->time, NULL);\n\n\tRETURN_ZVAL(object, 1, 0);\n}",
    "start": 3074,
    "end": 3094,
    "fix": "PHP_FUNCTION(date_isodate_set)\n{\n\tzval         *object;\n\tphp_date_obj *dateobj;\n\tlong          y, w, d = 1;\n\n\tif (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Oll|l\", &object, date_ce_date, &y, &w, &d) == FAILURE) {\n\t\tRETURN_FALSE;\n\t}\n\tdateobj = (php_date_obj *) zend_object_store_get_object(object TSRMLS_CC);\n\tDATE_CHECK_INITIALIZED(dateobj->time, DateTime);\n\tdateobj->time->y = y;\n\tdateobj->time->m = 1;\n\tdateobj->time->d = 1;\n\tmemset(&dateobj->time->relative, 0, sizeof(dateobj->time->relative));\n\tdateobj->time->relative.d = timelib_daynr_from_weeknr(y, w, d);\n\tdateobj->time->have_relative = 1;\n\t\n\ttimelib_update_ts(dateobj->time, NULL);\n\n\tRETURN_ZVAL(object, 1, 0);\n}",
    "filename": "ext/date/php_date.c"
  },
  "php_2011-02-01-01745fa657-1f49902999": {
    "buggy": "static int statbuf_from_array(zval *array, php_stream_statbuf *ssb TSRMLS_DC)\n{\n\tzval **elem;\n\n#define STAT_PROP_ENTRY_EX(name, name2)                        \\\n\tif (SUCCESS == zend_hash_find(Z_ARRVAL_P(array), #name, sizeof(#name), (void**)&elem)) {     \\\n\t\tconvert_to_long(*elem);                                                                   \\\n\t\tssb->sb.st_##name2 = Z_LVAL_PP(elem);                                                      \\\n\t}\n\n#define STAT_PROP_ENTRY(name) STAT_PROP_ENTRY_EX(name,name)\n\n\tSTAT_PROP_ENTRY(dev);\n\tSTAT_PROP_ENTRY(ino);\n\tSTAT_PROP_ENTRY(mode);\n\tSTAT_PROP_ENTRY(nlink);\n\tSTAT_PROP_ENTRY(uid);\n\tSTAT_PROP_ENTRY(gid);\n#if HAVE_ST_RDEV\n\tSTAT_PROP_ENTRY(rdev);\n#endif\n\tSTAT_PROP_ENTRY(size);\n#ifdef NETWARE\n\tSTAT_PROP_ENTRY_EX(atime, atime.tv_sec);\n\tSTAT_PROP_ENTRY_EX(mtime, mtime.tv_sec);\n\tSTAT_PROP_ENTRY_EX(ctime, ctime.tv_sec);\n#else\n\tSTAT_PROP_ENTRY(atime);\n\tSTAT_PROP_ENTRY(mtime);\n\tSTAT_PROP_ENTRY(ctime);\n#endif\n#ifdef HAVE_ST_BLKSIZE\n\tSTAT_PROP_ENTRY(blksize);\n#endif\n#ifdef HAVE_ST_BLOCKS\n\tSTAT_PROP_ENTRY(blocks);\n#endif\n\n#undef STAT_PROP_ENTRY\t\n#undef STAT_PROP_ENTRY_EX\t\n\treturn SUCCESS;\n}",
    "start": 852,
    "end": 893,
    "fix": "static int statbuf_from_array(zval *array, php_stream_statbuf *ssb TSRMLS_DC)\n{\n\tzval **elem;\n\n#define STAT_PROP_ENTRY_EX(name, name2)                        \\\n\tif (SUCCESS == zend_hash_find(Z_ARRVAL_P(array), #name, sizeof(#name), (void**)&elem)) {     \\\n\t\tSEPARATE_ZVAL(elem);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \\\n\t\tconvert_to_long(*elem);                                                                   \\\n\t\tssb->sb.st_##name2 = Z_LVAL_PP(elem);                                                      \\\n\t}\n\n#define STAT_PROP_ENTRY(name) STAT_PROP_ENTRY_EX(name,name)\n\n\tSTAT_PROP_ENTRY(dev);\n\tSTAT_PROP_ENTRY(ino);\n\tSTAT_PROP_ENTRY(mode);\n\tSTAT_PROP_ENTRY(nlink);\n\tSTAT_PROP_ENTRY(uid);\n\tSTAT_PROP_ENTRY(gid);\n#if HAVE_ST_RDEV\n\tSTAT_PROP_ENTRY(rdev);\n#endif\n\tSTAT_PROP_ENTRY(size);\n#ifdef NETWARE\n\tSTAT_PROP_ENTRY_EX(atime, atime.tv_sec);\n\tSTAT_PROP_ENTRY_EX(mtime, mtime.tv_sec);\n\tSTAT_PROP_ENTRY_EX(ctime, ctime.tv_sec);\n#else\n\tSTAT_PROP_ENTRY(atime);\n\tSTAT_PROP_ENTRY(mtime);\n\tSTAT_PROP_ENTRY(ctime);\n#endif\n#ifdef HAVE_ST_BLKSIZE\n\tSTAT_PROP_ENTRY(blksize);\n#endif\n#ifdef HAVE_ST_BLOCKS\n\tSTAT_PROP_ENTRY(blocks);\n#endif\n\n#undef STAT_PROP_ENTRY\t\n#undef STAT_PROP_ENTRY_EX\t\n\treturn SUCCESS;\n}",
    "filename": "main/streams/userspace.c"
  },
  "php_2011-02-01-fefe9fc5c7-0927309852": {
    "buggy": "int phar_open_or_create_filename(char *fname, int fname_len, char *alias, int alias_len, int is_data, int options, phar_archive_data** pphar, char **error TSRMLS_DC) /* {{{ */\n{\n\tconst char *ext_str, *z;\n\tchar *my_error;\n\tint ext_len;\n\tphar_archive_data **test, *unused = NULL;\n\n\ttest = &unused;\n\n\tif (error) {\n\t\t*error = NULL;\n\t}\n\n\t/* first try to open an existing file */\n\tif (phar_detect_phar_fname_ext(fname, fname_len, &ext_str, &ext_len, !is_data, 0, 1 TSRMLS_CC) == SUCCESS) {\n\t\tgoto check_file;\n\t}\n\n\t/* next try to create a new file */\n\tif (FAILURE == phar_detect_phar_fname_ext(fname, fname_len, &ext_str, &ext_len, !is_data, 1, 1 TSRMLS_CC)) {\n\t\tif (error) {\n\t\t\tif (ext_len == -2) {\n\t\t\t\tspprintf(error, 0, \"Cannot create a phar archive from a URL like \\\"%s\\\". Phar objects can only be created from local files\", fname);\n\t\t\t} else {\n\t\t\t\tspprintf(error, 0, \"Cannot create phar '%s', file extension (or combination) not recognised\", fname);\n\t\t\t}\n\t\t}\n\t\treturn FAILURE;\n\t}\ncheck_file:\n\tif (phar_open_parsed_phar(fname, fname_len, alias, alias_len, is_data, options, test, &my_error TSRMLS_CC) == SUCCESS) {\n\t\tif (pphar) {\n\t\t\t*pphar = *test;\n\t\t}\n\n\t\tif ((*test)->is_data && !(*test)->is_tar && !(*test)->is_zip) {\n\t\t\tif (error) {\n\t\t\t\tspprintf(error, 0, \"Cannot open '%s' as a PharData object. Use Phar::__construct() for executable archives\", fname);\n\t\t\t}\n\t\t\treturn FAILURE;\n\t\t}\n\n\t\tif (PHAR_G(readonly) && !(*test)->is_data && ((*test)->is_tar || (*test)->is_zip)) {\n\t\t\tphar_entry_info *stub;\n\t\t\tif (FAILURE == zend_hash_find(&((*test)->manifest), \".phar/stub.php\", sizeof(\".phar/stub.php\")-1, (void **)&stub)) {\n\t\t\t\tspprintf(error, 0, \"'%s' is not a phar archive. Use PharData::__construct() for a standard zip or tar archive\", fname);\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\t\t}\n\n\t\tif (!PHAR_G(readonly) || (*test)->is_data) {\n\t\t\t(*test)->is_writeable = 1;\n\t\t}\n\t\treturn SUCCESS;\n\t} else if (my_error) {\n\t\tif (error) {\n\t\t\t*error = my_error;\n\t\t} else {\n\t\t\tefree(my_error);\n\t\t}\n\t\treturn FAILURE;\n\t}\n\n\tif (ext_len > 3 && (z = memchr(ext_str, 'z', ext_len)) && ((ext_str + ext_len) - z >= 2) && !memcmp(z + 1, \"ip\", 2)) {\n\t\t/* assume zip-based phar */\n\t\treturn phar_open_or_create_zip(fname, fname_len, alias, alias_len, is_data, options, pphar, error TSRMLS_CC);\n\t}\n\n\tif (ext_len > 3 && (z = memchr(ext_str, 't', ext_len)) && ((ext_str + ext_len) - z >= 2) && !memcmp(z + 1, \"ar\", 2)) {\n\t\t/* assume tar-based phar */\n\t\treturn phar_open_or_create_tar(fname, fname_len, alias, alias_len, is_data, options, pphar, error TSRMLS_CC);\n\t}\n\n\treturn phar_create_or_parse_filename(fname, fname_len, alias, alias_len, is_data, options, pphar, error TSRMLS_CC);\n}",
    "start": 1244,
    "end": 1318,
    "fix": "int phar_open_or_create_filename(char *fname, int fname_len, char *alias, int alias_len, int is_data, int options, phar_archive_data** pphar, char **error TSRMLS_DC) /* {{{ */\n{\n\tconst char *ext_str, *z;\n\tchar *my_error;\n\tint ext_len;\n\tphar_archive_data **test, *unused = NULL;\n\n\ttest = &unused;\n\n\tif (error) {\n\t\t*error = NULL;\n\t}\n\n\t/* first try to open an existing file */\n\tif (phar_detect_phar_fname_ext(fname, fname_len, &ext_str, &ext_len, !is_data, 0, 1 TSRMLS_CC) == SUCCESS) {\n\t\tgoto check_file;\n\t}\n\n\t/* next try to create a new file */\n\tif (FAILURE == phar_detect_phar_fname_ext(fname, fname_len, &ext_str, &ext_len, !is_data, 1, 1 TSRMLS_CC)) {\n\t\tif (error) {\n\t\t\tif (ext_len == -2) {\n\t\t\t\tspprintf(error, 0, \"Cannot create a phar archive from a URL like \\\"%s\\\". Phar objects can only be created from local files\", fname);\n\t\t\t} else {\n\t\t\t\tspprintf(error, 0, \"Cannot create phar '%s', file extension (or combination) not recognised or the directory does not exist\", fname);\n\t\t\t}\n\t\t}\n\t\treturn FAILURE;\n\t}\ncheck_file:\n\tif (phar_open_parsed_phar(fname, fname_len, alias, alias_len, is_data, options, test, &my_error TSRMLS_CC) == SUCCESS) {\n\t\tif (pphar) {\n\t\t\t*pphar = *test;\n\t\t}\n\n\t\tif ((*test)->is_data && !(*test)->is_tar && !(*test)->is_zip) {\n\t\t\tif (error) {\n\t\t\t\tspprintf(error, 0, \"Cannot open '%s' as a PharData object. Use Phar::__construct() for executable archives\", fname);\n\t\t\t}\n\t\t\treturn FAILURE;\n\t\t}\n\n\t\tif (PHAR_G(readonly) && !(*test)->is_data && ((*test)->is_tar || (*test)->is_zip)) {\n\t\t\tphar_entry_info *stub;\n\t\t\tif (FAILURE == zend_hash_find(&((*test)->manifest), \".phar/stub.php\", sizeof(\".phar/stub.php\")-1, (void **)&stub)) {\n\t\t\t\tspprintf(error, 0, \"'%s' is not a phar archive. Use PharData::__construct() for a standard zip or tar archive\", fname);\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\t\t}\n\n\t\tif (!PHAR_G(readonly) || (*test)->is_data) {\n\t\t\t(*test)->is_writeable = 1;\n\t\t}\n\t\treturn SUCCESS;\n\t} else if (my_error) {\n\t\tif (error) {\n\t\t\t*error = my_error;\n\t\t} else {\n\t\t\tefree(my_error);\n\t\t}\n\t\treturn FAILURE;\n\t}\n\n\tif (ext_len > 3 && (z = memchr(ext_str, 'z', ext_len)) && ((ext_str + ext_len) - z >= 2) && !memcmp(z + 1, \"ip\", 2)) {\n\t\t/* assume zip-based phar */\n\t\treturn phar_open_or_create_zip(fname, fname_len, alias, alias_len, is_data, options, pphar, error TSRMLS_CC);\n\t}\n\n\tif (ext_len > 3 && (z = memchr(ext_str, 't', ext_len)) && ((ext_str + ext_len) - z >= 2) && !memcmp(z + 1, \"ar\", 2)) {\n\t\t/* assume tar-based phar */\n\t\treturn phar_open_or_create_tar(fname, fname_len, alias, alias_len, is_data, options, pphar, error TSRMLS_CC);\n\t}\n\n\treturn phar_create_or_parse_filename(fname, fname_len, alias, alias_len, is_data, options, pphar, error TSRMLS_CC);\n}",
    "filename": "ext/phar/phar.c"
  },
  "php_2011-02-04-793cfe1376-109b8e99e0": {
    "buggy": "PHPAPI php_url *php_url_parse_ex(char const *str, int length)\n{\n\tchar port_buf[6];\n\tphp_url *ret = ecalloc(1, sizeof(php_url));\n\tchar const *s, *e, *p, *pp, *ue;\n\t\t\n\ts = str;\n\tue = s + length;\n\n\t/* parse scheme */\n\tif ((e = memchr(s, ':', length)) && (e - s)) {\n\t\t/* validate scheme */\n\t\tp = s;\n\t\twhile (p < e) {\n\t\t\t/* scheme = 1*[ lowalpha | digit | \"+\" | \"-\" | \".\" ] */\n\t\t\tif (!isalpha(*p) && !isdigit(*p) && *p != '+' && *p != '.' && *p != '-') {\n\t\t\t\tif (e + 1 < ue) {\n\t\t\t\t\tgoto parse_port;\n\t\t\t\t} else {\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\n\t\tif (*(e + 1) == '\\0') { /* only scheme is available */\n\t\t\tret->scheme = estrndup(s, (e - s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\tgoto end;\n\t\t}\n\n\t\t/* \n\t\t * certain schemas like mailto: and zlib: may not have any / after them\n\t\t * this check ensures we support those.\n\t\t */\n\t\tif (*(e+1) != '/') {\n\t\t\t/* check if the data we get is a port this allows us to \n\t\t\t * correctly parse things like a.com:80\n\t\t\t */\n\t\t\tp = e + 1;\n\t\t\twhile (isdigit(*p)) {\n\t\t\t\tp++;\n\t\t\t}\n\t\t\t\n\t\t\tif ((*p == '\\0' || *p == '/') && (p - e) < 7) {\n\t\t\t\tgoto parse_port;\n\t\t\t}\n\t\t\t\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\t\n\t\t\tlength -= ++e - s;\n\t\t\ts = e;\n\t\t\tgoto just_path;\n\t\t} else {\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\n\t\t\tif (*(e+2) == '/') {\n\t\t\t\ts = e + 3;\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\tif (*(e + 3) == '/') {\n\t\t\t\t\t\t/* support windows drive letters as in:\n\t\t\t\t\t\t   file:///c:/somedir/file.txt\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (*(e + 5) == ':') {\n\t\t\t\t\t\t\ts = e + 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgoto nohost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\ts = e + 1;\n\t\t\t\t\tgoto nohost;\n\t\t\t\t} else {\n\t\t\t\t\tlength -= ++e - s;\n\t\t\t\t\ts = e;\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\t\n\t} else if (e) { /* no scheme, look for port */\n\t\tparse_port:\n\t\tp = e + 1;\n\t\tpp = p;\n\t\t\n\t\twhile (pp-p < 6 && isdigit(*pp)) {\n\t\t\tpp++;\n\t\t}\n\t\t\n\t\tif (pp-p < 6 && (*pp == '/' || *pp == '\\0')) {\n\t\t\tmemcpy(port_buf, p, (pp-p));\n\t\t\tport_buf[pp-p] = '\\0';\n\t\t\tret->port = atoi(port_buf);\n\t\t} else {\n\t\t\tgoto just_path;\n\t\t}\n\t} else {\n\t\tjust_path:\n\t\tue = s + length;\n\t\tgoto nohost;\n\t}\n\t\n\te = ue;\n\t\n\tif (!(p = memchr(s, '/', (ue - s)))) {\n\t\tchar *query, *fragment;\n\n\t\tquery = memchr(s, '?', (ue - s));\n\t\tfragment = memchr(s, '#', (ue - s));\n\n\t\tif (query && fragment) {\n\t\t\tif (query > fragment) {\n\t\t\t\tp = e = fragment;\n\t\t\t} else {\n\t\t\t\tp = e = query;\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tp = e = query;\n\t\t} else if (fragment) {\n\t\t\tp = e = fragment;\n\t\t}\n\t} else {\n\t\te = p;\n\t}\t\n\t\t\n\t/* check for login and password */\n\tif ((p = zend_memrchr(s, '@', (e-s)))) {\n\t\tif ((pp = memchr(s, ':', (p-s)))) {\n\t\t\tif ((pp-s) > 0) {\n\t\t\t\tret->user = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->user, (pp - s));\n\t\t\t}\t\n\t\t\n\t\t\tpp++;\n\t\t\tif (p-pp > 0) {\n\t\t\t\tret->pass = estrndup(pp, (p-pp));\n\t\t\t\tphp_replace_controlchars_ex(ret->pass, (p-pp));\n\t\t\t}\t\n\t\t} else {\n\t\t\tret->user = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->user, (p-s));\n\t\t}\n\t\t\n\t\ts = p + 1;\n\t}\n\n\t/* check for port */\n\tif (*s == '[' && *(e-1) == ']') {\n\t\t/* Short circuit portscan, \n\t\t   we're dealing with an \n\t\t   IPv6 embedded address */\n\t\tp = s;\n\t} else {\n\t\t/* memrchr is a GNU specific extension\n\t\t   Emulate for wide compatability */\n\t\tfor(p = e; *p != ':' && p >= s; p--);\n\t}\n\n\tif (p >= s && *p == ':') {\n\t\tif (!ret->port) {\n\t\t\tp++;\n\t\t\tif (e-p > 5) { /* port cannot be longer then 5 characters */\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t} else if (e - p > 0) {\n\t\t\t\tmemcpy(port_buf, p, (e-p));\n\t\t\t\tport_buf[e-p] = '\\0';\n\t\t\t\tret->port = atoi(port_buf);\n\t\t\t}\n\t\t\tp--;\n\t\t}\t\n\t} else {\n\t\tp = e;\n\t}\n\t\n\t/* check if we have a valid host, if we don't reject the string as url */\n\tif ((p-s) < 1) {\n\t\tSTR_FREE(ret->scheme);\n\t\tSTR_FREE(ret->user);\n\t\tSTR_FREE(ret->pass);\n\t\tefree(ret);\n\t\treturn NULL;\n\t}\n\n\tret->host = estrndup(s, (p-s));\n\tphp_replace_controlchars_ex(ret->host, (p - s));\n\t\n\tif (e == ue) {\n\t\treturn ret;\n\t}\n\t\n\ts = e;\n\t\n\tnohost:\n\t\n\tif ((p = memchr(s, '?', (ue - s)))) {\n\t\tpp = strchr(s, '#');\n\n\t\tif (pp && pp < p) {\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t}\n\t\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\n\t\tif (pp) {\n\t\t\tif (pp - ++p) { \n\t\t\t\tret->query = estrndup(p, (pp-p));\n\t\t\t\tphp_replace_controlchars_ex(ret->query, (pp - p));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t} else if (++p - ue) {\n\t\t\tret->query = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->query, (ue - p));\n\t\t}\n\t} else if ((p = memchr(s, '#', (ue - s)))) {\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\t\n\t\tlabel_parse:\n\t\tp++;\n\t\t\n\t\tif (ue - p) {\n\t\t\tret->fragment = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->fragment, (ue - p));\n\t\t}\t\n\t} else {\n\t\tret->path = estrndup(s, (ue-s));\n\t\tphp_replace_controlchars_ex(ret->path, (ue - s));\n\t}\nend:\n\treturn ret;\n}",
    "start": 97,
    "end": 340,
    "fix": "PHPAPI php_url *php_url_parse_ex(char const *str, int length)\n{\n\tchar port_buf[6];\n\tphp_url *ret = ecalloc(1, sizeof(php_url));\n\tchar const *s, *e, *p, *pp, *ue;\n\t\t\n\ts = str;\n\tue = s + length;\n\n\t/* parse scheme */\n\tif ((e = memchr(s, ':', length)) && (e - s)) {\n\t\t/* validate scheme */\n\t\tp = s;\n\t\twhile (p < e) {\n\t\t\t/* scheme = 1*[ lowalpha | digit | \"+\" | \"-\" | \".\" ] */\n\t\t\tif (!isalpha(*p) && !isdigit(*p) && *p != '+' && *p != '.' && *p != '-') {\n\t\t\t\tif (e + 1 < ue) {\n\t\t\t\t\tgoto parse_port;\n\t\t\t\t} else {\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\n\t\tif (*(e + 1) == '\\0') { /* only scheme is available */\n\t\t\tret->scheme = estrndup(s, (e - s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\tgoto end;\n\t\t}\n\n\t\t/* \n\t\t * certain schemas like mailto: and zlib: may not have any / after them\n\t\t * this check ensures we support those.\n\t\t */\n\t\tif (*(e+1) != '/') {\n\t\t\t/* check if the data we get is a port this allows us to \n\t\t\t * correctly parse things like a.com:80\n\t\t\t */\n\t\t\tp = e + 1;\n\t\t\twhile (isdigit(*p)) {\n\t\t\t\tp++;\n\t\t\t}\n\t\t\t\n\t\t\tif ((*p == '\\0' || *p == '/') && (p - e) < 7) {\n\t\t\t\tgoto parse_port;\n\t\t\t}\n\t\t\t\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\t\n\t\t\tlength -= ++e - s;\n\t\t\ts = e;\n\t\t\tgoto just_path;\n\t\t} else {\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\n\t\t\tif (*(e+2) == '/') {\n\t\t\t\ts = e + 3;\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\tif (*(e + 3) == '/') {\n\t\t\t\t\t\t/* support windows drive letters as in:\n\t\t\t\t\t\t   file:///c:/somedir/file.txt\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (*(e + 5) == ':') {\n\t\t\t\t\t\t\ts = e + 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgoto nohost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\ts = e + 1;\n\t\t\t\t\tgoto nohost;\n\t\t\t\t} else {\n\t\t\t\t\tlength -= ++e - s;\n\t\t\t\t\ts = e;\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\t\n\t} else if (e) { /* no scheme, look for port */\n\t\tparse_port:\n\t\tp = e + 1;\n\t\tpp = p;\n\n\t\twhile (pp-p < 6 && isdigit(*pp)) {\n\t\t\tpp++;\n\t\t}\n\n\t\tif (pp-p < 6 && (*pp == '/' || *pp == '\\0')) {\n\t\t\tmemcpy(port_buf, p, (pp-p));\n\t\t\tport_buf[pp-p] = '\\0';\n\t\t\tret->port = atoi(port_buf);\n\t\t\tif (!ret->port && (pp - p) > 0) {\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t} else {\n\t\t\tgoto just_path;\n\t\t}\n\t} else {\n\t\tjust_path:\n\t\tue = s + length;\n\t\tgoto nohost;\n\t}\n\t\n\te = ue;\n\t\n\tif (!(p = memchr(s, '/', (ue - s)))) {\n\t\tchar *query, *fragment;\n\n\t\tquery = memchr(s, '?', (ue - s));\n\t\tfragment = memchr(s, '#', (ue - s));\n\n\t\tif (query && fragment) {\n\t\t\tif (query > fragment) {\n\t\t\t\tp = e = fragment;\n\t\t\t} else {\n\t\t\t\tp = e = query;\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tp = e = query;\n\t\t} else if (fragment) {\n\t\t\tp = e = fragment;\n\t\t}\n\t} else {\n\t\te = p;\n\t}\t\n\t\t\n\t/* check for login and password */\n\tif ((p = zend_memrchr(s, '@', (e-s)))) {\n\t\tif ((pp = memchr(s, ':', (p-s)))) {\n\t\t\tif ((pp-s) > 0) {\n\t\t\t\tret->user = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->user, (pp - s));\n\t\t\t}\t\n\t\t\n\t\t\tpp++;\n\t\t\tif (p-pp > 0) {\n\t\t\t\tret->pass = estrndup(pp, (p-pp));\n\t\t\t\tphp_replace_controlchars_ex(ret->pass, (p-pp));\n\t\t\t}\t\n\t\t} else {\n\t\t\tret->user = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->user, (p-s));\n\t\t}\n\t\t\n\t\ts = p + 1;\n\t}\n\n\t/* check for port */\n\tif (*s == '[' && *(e-1) == ']') {\n\t\t/* Short circuit portscan, \n\t\t   we're dealing with an \n\t\t   IPv6 embedded address */\n\t\tp = s;\n\t} else {\n\t\t/* memrchr is a GNU specific extension\n\t\t   Emulate for wide compatability */\n\t\tfor(p = e; *p != ':' && p >= s; p--);\n\t}\n\n\tif (p >= s && *p == ':') {\n\t\tif (!ret->port) {\n\t\t\tp++;\n\t\t\tif (e-p > 5) { /* port cannot be longer then 5 characters */\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t} else if (e - p > 0) {\n\t\t\t\tmemcpy(port_buf, p, (e-p));\n\t\t\t\tport_buf[e-p] = '\\0';\n\t\t\t\tret->port = atoi(port_buf);\n\t\t\t\tif (!ret->port && (e - p)) {\n\t\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\t\tefree(ret);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp--;\n\t\t}\t\n\t} else {\n\t\tp = e;\n\t}\n\t\n\t/* check if we have a valid host, if we don't reject the string as url */\n\tif ((p-s) < 1) {\n\t\tSTR_FREE(ret->scheme);\n\t\tSTR_FREE(ret->user);\n\t\tSTR_FREE(ret->pass);\n\t\tefree(ret);\n\t\treturn NULL;\n\t}\n\n\tret->host = estrndup(s, (p-s));\n\tphp_replace_controlchars_ex(ret->host, (p - s));\n\t\n\tif (e == ue) {\n\t\treturn ret;\n\t}\n\t\n\ts = e;\n\t\n\tnohost:\n\t\n\tif ((p = memchr(s, '?', (ue - s)))) {\n\t\tpp = strchr(s, '#');\n\n\t\tif (pp && pp < p) {\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t}\n\t\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\n\t\tif (pp) {\n\t\t\tif (pp - ++p) { \n\t\t\t\tret->query = estrndup(p, (pp-p));\n\t\t\t\tphp_replace_controlchars_ex(ret->query, (pp - p));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t} else if (++p - ue) {\n\t\t\tret->query = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->query, (ue - p));\n\t\t}\n\t} else if ((p = memchr(s, '#', (ue - s)))) {\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\t\n\t\tlabel_parse:\n\t\tp++;\n\t\t\n\t\tif (ue - p) {\n\t\t\tret->fragment = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->fragment, (ue - p));\n\t\t}\t\n\t} else {\n\t\tret->path = estrndup(s, (ue-s));\n\t\tphp_replace_controlchars_ex(ret->path, (ue - s));\n\t}\nend:\n\treturn ret;\n}",
    "filename": "ext/standard/url.c"
  },
  "php_2011-02-05-c50b3d7add-426f31e790": {
    "buggy": "PHPAPI php_url *php_url_parse_ex(char const *str, int length)\n{\n\tchar port_buf[6];\n\tphp_url *ret = ecalloc(1, sizeof(php_url));\n\tchar const *s, *e, *p, *pp, *ue;\n\t\t\n\ts = str;\n\tue = s + length;\n\n\t/* parse scheme */\n\tif ((e = memchr(s, ':', length)) && (e - s)) {\n\t\t/* validate scheme */\n\t\tp = s;\n\t\twhile (p < e) {\n\t\t\t/* scheme = 1*[ lowalpha | digit | \"+\" | \"-\" | \".\" ] */\n\t\t\tif (!isalpha(*p) && !isdigit(*p) && *p != '+' && *p != '.' && *p != '-') {\n\t\t\t\tif (e + 1 < ue) {\n\t\t\t\t\tgoto parse_port;\n\t\t\t\t} else {\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\n\t\tif (*(e + 1) == '\\0') { /* only scheme is available */\n\t\t\tret->scheme = estrndup(s, (e - s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\tgoto end;\n\t\t}\n\n\t\t/* \n\t\t * certain schemas like mailto: and zlib: may not have any / after them\n\t\t * this check ensures we support those.\n\t\t */\n\t\tif (*(e+1) != '/') {\n\t\t\t/* check if the data we get is a port this allows us to \n\t\t\t * correctly parse things like a.com:80\n\t\t\t */\n\t\t\tp = e + 1;\n\t\t\twhile (isdigit(*p)) {\n\t\t\t\tp++;\n\t\t\t}\n\t\t\t\n\t\t\tif ((*p == '\\0' || *p == '/') && (p - e) < 7) {\n\t\t\t\tgoto parse_port;\n\t\t\t}\n\t\t\t\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\t\n\t\t\tlength -= ++e - s;\n\t\t\ts = e;\n\t\t\tgoto just_path;\n\t\t} else {\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\n\t\t\tif (*(e+2) == '/') {\n\t\t\t\ts = e + 3;\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\tif (*(e + 3) == '/') {\n\t\t\t\t\t\t/* support windows drive letters as in:\n\t\t\t\t\t\t   file:///c:/somedir/file.txt\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (*(e + 5) == ':') {\n\t\t\t\t\t\t\ts = e + 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgoto nohost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\ts = e + 1;\n\t\t\t\t\tgoto nohost;\n\t\t\t\t} else {\n\t\t\t\t\tlength -= ++e - s;\n\t\t\t\t\ts = e;\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\t\n\t} else if (e) { /* no scheme, look for port */\n\t\tparse_port:\n\t\tp = e + 1;\n\t\tpp = p;\n\n\t\twhile (pp-p < 6 && isdigit(*pp)) {\n\t\t\tpp++;\n\t\t}\n\n\t\tif (pp-p < 6 && (*pp == '/' || *pp == '\\0')) {\n\t\t\tmemcpy(port_buf, p, (pp-p));\n\t\t\tport_buf[pp-p] = '\\0';\n\t\t\tret->port = atoi(port_buf);\n\t\t\tif (!ret->port && (pp - p) > 0) {\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t} else {\n\t\t\tgoto just_path;\n\t\t}\n\t} else {\n\t\tjust_path:\n\t\tue = s + length;\n\t\tgoto nohost;\n\t}\n\t\n\te = ue;\n\t\n\tif (!(p = memchr(s, '/', (ue - s)))) {\n\t\tchar *query, *fragment;\n\n\t\tquery = memchr(s, '?', (ue - s));\n\t\tfragment = memchr(s, '#', (ue - s));\n\n\t\tif (query && fragment) {\n\t\t\tif (query > fragment) {\n\t\t\t\tp = e = fragment;\n\t\t\t} else {\n\t\t\t\tp = e = query;\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tp = e = query;\n\t\t} else if (fragment) {\n\t\t\tp = e = fragment;\n\t\t}\n\t} else {\n\t\te = p;\n\t}\t\n\t\t\n\t/* check for login and password */\n\tif ((p = zend_memrchr(s, '@', (e-s)))) {\n\t\tif ((pp = memchr(s, ':', (p-s)))) {\n\t\t\tif ((pp-s) > 0) {\n\t\t\t\tret->user = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->user, (pp - s));\n\t\t\t}\t\n\t\t\n\t\t\tpp++;\n\t\t\tif (p-pp > 0) {\n\t\t\t\tret->pass = estrndup(pp, (p-pp));\n\t\t\t\tphp_replace_controlchars_ex(ret->pass, (p-pp));\n\t\t\t}\t\n\t\t} else {\n\t\t\tret->user = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->user, (p-s));\n\t\t}\n\t\t\n\t\ts = p + 1;\n\t}\n\n\t/* check for port */\n\tif (*s == '[' && *(e-1) == ']') {\n\t\t/* Short circuit portscan, \n\t\t   we're dealing with an \n\t\t   IPv6 embedded address */\n\t\tp = s;\n\t} else {\n\t\t/* memrchr is a GNU specific extension\n\t\t   Emulate for wide compatability */\n\t\tfor(p = e; *p != ':' && p >= s; p--);\n\t}\n\n\tif (p >= s && *p == ':') {\n\t\tif (!ret->port) {\n\t\t\tp++;\n\t\t\tif (e-p > 5) { /* port cannot be longer then 5 characters */\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t} else if (e - p > 0) {\n\t\t\t\tmemcpy(port_buf, p, (e-p));\n\t\t\t\tport_buf[e-p] = '\\0';\n\t\t\t\tret->port = atoi(port_buf);\n\t\t\t\tif (!ret->port && (e - p)) {\n\t\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\t\tefree(ret);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp--;\n\t\t}\t\n\t} else {\n\t\tp = e;\n\t}\n\t\n\t/* check if we have a valid host, if we don't reject the string as url */\n\tif ((p-s) < 1) {\n\t\tSTR_FREE(ret->scheme);\n\t\tSTR_FREE(ret->user);\n\t\tSTR_FREE(ret->pass);\n\t\tefree(ret);\n\t\treturn NULL;\n\t}\n\n\tret->host = estrndup(s, (p-s));\n\tphp_replace_controlchars_ex(ret->host, (p - s));\n\t\n\tif (e == ue) {\n\t\treturn ret;\n\t}\n\t\n\ts = e;\n\t\n\tnohost:\n\t\n\tif ((p = memchr(s, '?', (ue - s)))) {\n\t\tpp = strchr(s, '#');\n\n\t\tif (pp && pp < p) {\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t}\n\t\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\n\t\tif (pp) {\n\t\t\tif (pp - ++p) { \n\t\t\t\tret->query = estrndup(p, (pp-p));\n\t\t\t\tphp_replace_controlchars_ex(ret->query, (pp - p));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t} else if (++p - ue) {\n\t\t\tret->query = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->query, (ue - p));\n\t\t}\n\t} else if ((p = memchr(s, '#', (ue - s)))) {\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\t\n\t\tlabel_parse:\n\t\tp++;\n\t\t\n\t\tif (ue - p) {\n\t\t\tret->fragment = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->fragment, (ue - p));\n\t\t}\t\n\t} else {\n\t\tret->path = estrndup(s, (ue-s));\n\t\tphp_replace_controlchars_ex(ret->path, (ue - s));\n\t}\nend:\n\treturn ret;\n}",
    "start": 97,
    "end": 352,
    "fix": "PHPAPI php_url *php_url_parse_ex(char const *str, int length)\n{\n\tchar port_buf[6];\n\tphp_url *ret = ecalloc(1, sizeof(php_url));\n\tchar const *s, *e, *p, *pp, *ue;\n\t\t\n\ts = str;\n\tue = s + length;\n\n\t/* parse scheme */\n\tif ((e = memchr(s, ':', length)) && (e - s)) {\n\t\t/* validate scheme */\n\t\tp = s;\n\t\twhile (p < e) {\n\t\t\t/* scheme = 1*[ lowalpha | digit | \"+\" | \"-\" | \".\" ] */\n\t\t\tif (!isalpha(*p) && !isdigit(*p) && *p != '+' && *p != '.' && *p != '-') {\n\t\t\t\tif (e + 1 < ue) {\n\t\t\t\t\tgoto parse_port;\n\t\t\t\t} else {\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\n\t\tif (*(e + 1) == '\\0') { /* only scheme is available */\n\t\t\tret->scheme = estrndup(s, (e - s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\tgoto end;\n\t\t}\n\n\t\t/* \n\t\t * certain schemas like mailto: and zlib: may not have any / after them\n\t\t * this check ensures we support those.\n\t\t */\n\t\tif (*(e+1) != '/') {\n\t\t\t/* check if the data we get is a port this allows us to \n\t\t\t * correctly parse things like a.com:80\n\t\t\t */\n\t\t\tp = e + 1;\n\t\t\twhile (isdigit(*p)) {\n\t\t\t\tp++;\n\t\t\t}\n\t\t\t\n\t\t\tif ((*p == '\\0' || *p == '/') && (p - e) < 7) {\n\t\t\t\tgoto parse_port;\n\t\t\t}\n\t\t\t\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\t\n\t\t\tlength -= ++e - s;\n\t\t\ts = e;\n\t\t\tgoto just_path;\n\t\t} else {\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\n\t\t\tif (*(e+2) == '/') {\n\t\t\t\ts = e + 3;\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\tif (*(e + 3) == '/') {\n\t\t\t\t\t\t/* support windows drive letters as in:\n\t\t\t\t\t\t   file:///c:/somedir/file.txt\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (*(e + 5) == ':') {\n\t\t\t\t\t\t\ts = e + 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgoto nohost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\ts = e + 1;\n\t\t\t\t\tgoto nohost;\n\t\t\t\t} else {\n\t\t\t\t\tlength -= ++e - s;\n\t\t\t\t\ts = e;\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\t\n\t} else if (e) { /* no scheme; starts with colon: look for port */\n\t\tparse_port:\n\t\tp = e + 1;\n\t\tpp = p;\n\n\t\twhile (pp-p < 6 && isdigit(*pp)) {\n\t\t\tpp++;\n\t\t}\n\n\t\tif (pp - p > 0 && pp - p < 6 && (*pp == '/' || *pp == '\\0')) {\n\t\t\tlong port;\n\t\t\tmemcpy(port_buf, p, (pp - p));\n\t\t\tport_buf[pp - p] = '\\0';\n\t\t\tport = strtol(port_buf, NULL, 10);\n\t\t\tif (port > 0 && port <= 65535) {\n\t\t\t\tret->port = (unsigned short) port;\n\t\t\t} else {\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t} else {\n\t\t\tgoto just_path;\n\t\t}\n\t} else {\n\t\tjust_path:\n\t\tue = s + length;\n\t\tgoto nohost;\n\t}\n\t\n\te = ue;\n\t\n\tif (!(p = memchr(s, '/', (ue - s)))) {\n\t\tchar *query, *fragment;\n\n\t\tquery = memchr(s, '?', (ue - s));\n\t\tfragment = memchr(s, '#', (ue - s));\n\n\t\tif (query && fragment) {\n\t\t\tif (query > fragment) {\n\t\t\t\tp = e = fragment;\n\t\t\t} else {\n\t\t\t\tp = e = query;\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tp = e = query;\n\t\t} else if (fragment) {\n\t\t\tp = e = fragment;\n\t\t}\n\t} else {\n\t\te = p;\n\t}\t\n\t\t\n\t/* check for login and password */\n\tif ((p = zend_memrchr(s, '@', (e-s)))) {\n\t\tif ((pp = memchr(s, ':', (p-s)))) {\n\t\t\tif ((pp-s) > 0) {\n\t\t\t\tret->user = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->user, (pp - s));\n\t\t\t}\t\n\t\t\n\t\t\tpp++;\n\t\t\tif (p-pp > 0) {\n\t\t\t\tret->pass = estrndup(pp, (p-pp));\n\t\t\t\tphp_replace_controlchars_ex(ret->pass, (p-pp));\n\t\t\t}\t\n\t\t} else {\n\t\t\tret->user = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->user, (p-s));\n\t\t}\n\t\t\n\t\ts = p + 1;\n\t}\n\n\t/* check for port */\n\tif (*s == '[' && *(e-1) == ']') {\n\t\t/* Short circuit portscan, \n\t\t   we're dealing with an \n\t\t   IPv6 embedded address */\n\t\tp = s;\n\t} else {\n\t\t/* memrchr is a GNU specific extension\n\t\t   Emulate for wide compatability */\n\t\tfor(p = e; *p != ':' && p >= s; p--);\n\t}\n\n\tif (p >= s && *p == ':') {\n\t\tif (!ret->port) {\n\t\t\tp++;\n\t\t\tif (e-p > 5) { /* port cannot be longer then 5 characters */\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t} else if (e - p > 0) {\n\t\t\t\tlong port;\n\t\t\t\tmemcpy(port_buf, p, (e - p));\n\t\t\t\tport_buf[e - p] = '\\0';\n\t\t\t\tport = strtol(port_buf, NULL, 10);\n\t\t\t\tif (port > 0 && port <= 65535) {\n\t\t\t\t\tret->port = (unsigned short)port;\n\t\t\t\t} else {\n\t\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\t\tefree(ret);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp--;\n\t\t}\t\n\t} else {\n\t\tp = e;\n\t}\n\t\n\t/* check if we have a valid host, if we don't reject the string as url */\n\tif ((p-s) < 1) {\n\t\tSTR_FREE(ret->scheme);\n\t\tSTR_FREE(ret->user);\n\t\tSTR_FREE(ret->pass);\n\t\tefree(ret);\n\t\treturn NULL;\n\t}\n\n\tret->host = estrndup(s, (p-s));\n\tphp_replace_controlchars_ex(ret->host, (p - s));\n\t\n\tif (e == ue) {\n\t\treturn ret;\n\t}\n\t\n\ts = e;\n\t\n\tnohost:\n\t\n\tif ((p = memchr(s, '?', (ue - s)))) {\n\t\tpp = strchr(s, '#');\n\n\t\tif (pp && pp < p) {\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t}\n\t\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\n\t\tif (pp) {\n\t\t\tif (pp - ++p) { \n\t\t\t\tret->query = estrndup(p, (pp-p));\n\t\t\t\tphp_replace_controlchars_ex(ret->query, (pp - p));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t} else if (++p - ue) {\n\t\t\tret->query = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->query, (ue - p));\n\t\t}\n\t} else if ((p = memchr(s, '#', (ue - s)))) {\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\t\n\t\tlabel_parse:\n\t\tp++;\n\t\t\n\t\tif (ue - p) {\n\t\t\tret->fragment = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->fragment, (ue - p));\n\t\t}\t\n\t} else {\n\t\tret->path = estrndup(s, (ue-s));\n\t\tphp_replace_controlchars_ex(ret->path, (ue - s));\n\t}\nend:\n\treturn ret;\n}",
    "filename": "ext/standard/url.c"
  },
  "php_2011-02-11-f912a2d087-b84967d3e2": {
    "buggy": "static void zend_fetch_dimension_address_read(temp_variable *result, zval **container_ptr, zval *dim, int dim_type, int type TSRMLS_DC)\n{\n\tzval *container = *container_ptr;\n\tzval **retval;\n\n\tswitch (Z_TYPE_P(container)) {\n\n\t\tcase IS_ARRAY:\n\t\t\tretval = zend_fetch_dimension_address_inner(Z_ARRVAL_P(container), dim, dim_type, type TSRMLS_CC);\n\t\t\tAI_SET_PTR(result, *retval);\n\t\t\tPZVAL_LOCK(*retval);\n\t\t\treturn;\n\n\t\tcase IS_NULL:\n\t\t\tAI_SET_PTR(result, &EG(uninitialized_zval));\n\t\t\tPZVAL_LOCK(&EG(uninitialized_zval));\n\t\t\treturn;\n\n\t\tcase IS_STRING: {\n\t\t\t\tzval tmp;\n\t\t\t\tzval *ptr;\n\n\t\t\t\tif (Z_TYPE_P(dim) != IS_LONG) {\n\t\t\t\t\tswitch(Z_TYPE_P(dim)) {\n\t\t\t\t\t\t/* case IS_LONG: */\n\t\t\t\t\t\tcase IS_STRING:\n\t\t\t\t\t\tcase IS_DOUBLE:\n\t\t\t\t\t\tcase IS_NULL:\n\t\t\t\t\t\tcase IS_BOOL:\n\t\t\t\t\t\t\t/* do nothing */\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tzend_error(E_WARNING, \"Illegal offset type\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tZVAL_COPY_VALUE(&tmp, dim);\n\t\t\t\t\tzval_copy_ctor(&tmp);\n\t\t\t\t\tconvert_to_long(&tmp);\n\t\t\t\t\tdim = &tmp;\n\t\t\t\t}\n\n\t\t\t\tALLOC_ZVAL(ptr);\n\t\t\t\tINIT_PZVAL(ptr);\n\t\t\t\tZ_TYPE_P(ptr) = IS_STRING;\n\n\t\t\t\tif (Z_LVAL_P(dim) < 0 || Z_STRLEN_P(container) <= Z_LVAL_P(dim)) {\n\t\t\t\t\tzend_error(E_NOTICE, \"Uninitialized string offset: %ld\", Z_LVAL_P(dim));\n\t\t\t\t\tZ_STRVAL_P(ptr) = STR_EMPTY_ALLOC();\n\t\t\t\t\tZ_STRLEN_P(ptr) = 0;\n\t\t\t\t} else {\n\t\t\t\t\tZ_STRVAL_P(ptr) = (char*)emalloc(2);\n\t\t\t\t\tZ_STRVAL_P(ptr)[0] = Z_STRVAL_P(container)[Z_LVAL_P(dim)];\n\t\t\t\t\tZ_STRVAL_P(ptr)[1] = 0;\n\t\t\t\t\tZ_STRLEN_P(ptr) = 1;\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tAI_SET_PTR(result, ptr);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase IS_OBJECT:\n\t\t\tif (!Z_OBJ_HT_P(container)->read_dimension) {\n\t\t\t\tzend_error_noreturn(E_ERROR, \"Cannot use object as array\");\n\t\t\t} else {\n\t\t\t\tzval *overloaded_result;\n\n\t\t\t\tif (dim_type == IS_TMP_VAR) {\n\t\t\t\t\tzval *orig = dim;\n\t\t\t\t\tMAKE_REAL_ZVAL_PTR(dim);\n\t\t\t\t\tZVAL_NULL(orig);\n\t\t\t\t}\n\t\t\t\toverloaded_result = Z_OBJ_HT_P(container)->read_dimension(container, dim, type TSRMLS_CC);\n\n\t\t\t\tif (overloaded_result) {\n\t\t\t\t\tAI_SET_PTR(result, overloaded_result);\n\t\t\t\t\tPZVAL_LOCK(overloaded_result);\n\t\t\t\t} else if (result) {\n\t\t\t\t\tAI_SET_PTR(result, &EG(uninitialized_zval));\n\t\t\t\t\tPZVAL_LOCK(&EG(uninitialized_zval));\n\t\t\t\t}\n\t\t\t\tif (dim_type == IS_TMP_VAR) {\n\t\t\t\t\tzval_ptr_dtor(&dim);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\n\t\tdefault:\n\t\t\tAI_SET_PTR(result, &EG(uninitialized_zval));\n\t\t\tPZVAL_LOCK(&EG(uninitialized_zval));\n\t\t\treturn;\n\t}\n}",
    "start": 1214,
    "end": 1306,
    "fix": "static void zend_fetch_dimension_address_read(temp_variable *result, zval **container_ptr, zval *dim, int dim_type, int type TSRMLS_DC)\n{\n\tzval *container = *container_ptr;\n\tzval **retval;\n\n\tswitch (Z_TYPE_P(container)) {\n\n\t\tcase IS_ARRAY:\n\t\t\tretval = zend_fetch_dimension_address_inner(Z_ARRVAL_P(container), dim, dim_type, type TSRMLS_CC);\n\t\t\tAI_SET_PTR(result, *retval);\n\t\t\tPZVAL_LOCK(*retval);\n\t\t\treturn;\n\n\t\tcase IS_NULL:\n\t\t\tAI_SET_PTR(result, &EG(uninitialized_zval));\n\t\t\tPZVAL_LOCK(&EG(uninitialized_zval));\n\t\t\treturn;\n\n\t\tcase IS_STRING: {\n\t\t\t\tzval tmp;\n\t\t\t\tzval *ptr;\n\n\t\t\t\tif (Z_TYPE_P(dim) != IS_LONG) {\n\t\t\t\t\tswitch(Z_TYPE_P(dim)) {\n\t\t\t\t\t\t/* case IS_LONG: */\n\t\t\t\t\t\tcase IS_STRING:\n\t\t\t\t\t\tcase IS_DOUBLE:\n\t\t\t\t\t\tcase IS_NULL:\n\t\t\t\t\t\tcase IS_BOOL:\n\t\t\t\t\t\t\t/* do nothing */\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tzend_error(E_WARNING, \"Illegal offset type\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tZVAL_COPY_VALUE(&tmp, dim);\n\t\t\t\t\tzval_copy_ctor(&tmp);\n\t\t\t\t\tconvert_to_long(&tmp);\n\t\t\t\t\tdim = &tmp;\n\t\t\t\t}\n\n\t\t\t\tALLOC_ZVAL(ptr);\n\t\t\t\tINIT_PZVAL(ptr);\n\t\t\t\tZ_TYPE_P(ptr) = IS_STRING;\n\n\t\t\t\tif (Z_LVAL_P(dim) < 0 || Z_STRLEN_P(container) <= Z_LVAL_P(dim)) {\n\t\t\t\t\tif (type != BP_VAR_IS) {\n\t\t\t\t\t\tzend_error(E_NOTICE, \"Uninitialized string offset: %ld\", Z_LVAL_P(dim));\n\t\t\t\t\t}\n\t\t\t\t\tZ_STRVAL_P(ptr) = STR_EMPTY_ALLOC();\n\t\t\t\t\tZ_STRLEN_P(ptr) = 0;\n\t\t\t\t} else {\n\t\t\t\t\tZ_STRVAL_P(ptr) = (char*)emalloc(2);\n\t\t\t\t\tZ_STRVAL_P(ptr)[0] = Z_STRVAL_P(container)[Z_LVAL_P(dim)];\n\t\t\t\t\tZ_STRVAL_P(ptr)[1] = 0;\n\t\t\t\t\tZ_STRLEN_P(ptr) = 1;\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tAI_SET_PTR(result, ptr);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase IS_OBJECT:\n\t\t\tif (!Z_OBJ_HT_P(container)->read_dimension) {\n\t\t\t\tzend_error_noreturn(E_ERROR, \"Cannot use object as array\");\n\t\t\t} else {\n\t\t\t\tzval *overloaded_result;\n\n\t\t\t\tif (dim_type == IS_TMP_VAR) {\n\t\t\t\t\tzval *orig = dim;\n\t\t\t\t\tMAKE_REAL_ZVAL_PTR(dim);\n\t\t\t\t\tZVAL_NULL(orig);\n\t\t\t\t}\n\t\t\t\toverloaded_result = Z_OBJ_HT_P(container)->read_dimension(container, dim, type TSRMLS_CC);\n\n\t\t\t\tif (overloaded_result) {\n\t\t\t\t\tAI_SET_PTR(result, overloaded_result);\n\t\t\t\t\tPZVAL_LOCK(overloaded_result);\n\t\t\t\t} else if (result) {\n\t\t\t\t\tAI_SET_PTR(result, &EG(uninitialized_zval));\n\t\t\t\t\tPZVAL_LOCK(&EG(uninitialized_zval));\n\t\t\t\t}\n\t\t\t\tif (dim_type == IS_TMP_VAR) {\n\t\t\t\t\tzval_ptr_dtor(&dim);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\n\t\tdefault:\n\t\t\tAI_SET_PTR(result, &EG(uninitialized_zval));\n\t\t\tPZVAL_LOCK(&EG(uninitialized_zval));\n\t\t\treturn;\n\t}\n}",
    "filename": "Zend/zend_execute.c"
  },
  "php_2011-02-14-86efc8e55e-d1d61ce612": {
    "buggy": "static void _php_finfo_get_type(INTERNAL_FUNCTION_PARAMETERS, int mode, int mimetype_emu) /* {{{ */\n{\n\tlong options = 0;\n\tchar *ret_val = NULL, *buffer = NULL;\n\tint buffer_len;\n\tstruct php_fileinfo *finfo;\n\tzval *zfinfo, *zcontext = NULL;\n\tzval *what;\n\tchar mime_directory[] = \"directory\";\n\n\tstruct magic_set *magic = NULL;\n\tFILEINFO_DECLARE_INIT_OBJECT(object)\n\n\tif (mimetype_emu) {\n\n\t\t/* mime_content_type(..) emulation */\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"z\", &what) == FAILURE) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (Z_TYPE_P(what)) {\n\t\t\tcase IS_STRING:\n\t\t\t\tbuffer = Z_STRVAL_P(what);\n\t\t\t\tbuffer_len = Z_STRLEN_P(what);\n\t\t\t\tmode = FILEINFO_MODE_FILE;\n\t\t\t\tbreak;\n\n\t\t\tcase IS_RESOURCE:\n\t\t\t\tmode = FILEINFO_MODE_STREAM;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Can only process string or stream arguments\");\n\t\t\t\tRETURN_FALSE;\n\t\t}\n\n\t\tmagic = magic_open(MAGIC_MIME_TYPE);\n\t\tif (magic_load(magic, NULL) == -1) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Failed to load magic database.\");\n\t\t\tgoto common;\n\t\t}\n\t} else if (object) {\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|lr\", &buffer, &buffer_len, &options, &zcontext) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tFILEINFO_FROM_OBJECT(finfo, object);\n\t\tmagic = finfo->magic;\n\t} else {\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs|lr\", &zfinfo, &buffer, &buffer_len, &options, &zcontext) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tZEND_FETCH_RESOURCE(finfo, struct php_fileinfo *, &zfinfo, -1, \"file_info\", le_fileinfo);\n\t\tmagic = finfo->magic;\n\t}\t\n\n\t/* Set options for the current file/buffer. */\n\tif (options) {\n\t\tFINFO_SET_OPTION(magic, options)\n\t}\n\n\tswitch (mode) {\n\t\tcase FILEINFO_MODE_BUFFER:\n\t\t{\n\t\t\tret_val = (char *) magic_buffer(magic, buffer, buffer_len);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase FILEINFO_MODE_STREAM:\n\t\t{\n\t\t\t\tphp_stream *stream;\n\t\t\t\toff_t streampos;\n\n\t\t\t\tphp_stream_from_zval_no_verify(stream, &what);\n\t\t\t\tif (!stream) {\n\t\t\t\t\tgoto common;\n\t\t\t\t}\n\n\t\t\t\tstreampos = php_stream_tell(stream); /* remember stream position for restoration */\n\t\t\t\tphp_stream_seek(stream, 0, SEEK_SET);\n\n\t\t\t\tret_val = (char *) magic_stream(magic, stream);\n\n\t\t\t\tphp_stream_seek(stream, streampos, SEEK_SET);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcase FILEINFO_MODE_FILE:\n\t\t{\n\t\t\t/* determine if the file is a local file or remote URL */\n\t\t\tchar *tmp2;\n\t\t\tphp_stream_wrapper *wrap;\n\t\t\tstruct stat sb;\n\n\t\t\tif (buffer == NULL || !*buffer) {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Empty filename or path\");\n\t\t\t\tRETVAL_FALSE;\n\t\t\t\tgoto clean;\n\t\t\t}\n\n\t\t\tif (php_sys_stat(buffer, &sb) == 0) {\n\t\t\t\t\t  if (sb.st_mode & _S_IFDIR) {\n\t\t\t\t\t\t\t\t ret_val = mime_directory;\n\t\t\t\t\t\t\t\t goto common;\n\t\t\t\t\t  }\n\t\t\t} else {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"File or path not found '%s'\", buffer);\n\t\t\t\tRETVAL_FALSE;\n\t\t\t\tgoto clean;\n\t\t\t}\n\n\t\t\twrap = php_stream_locate_url_wrapper(buffer, &tmp2, 0 TSRMLS_CC);\n\n\t\t\tif (wrap) {\n\t\t\t\tphp_stream_context *context = php_stream_context_from_zval(zcontext, 0);\n#if PHP_API_VERSION < 20100412\n\t\t\t\tphp_stream *stream = php_stream_open_wrapper_ex(buffer, \"rb\", ENFORCE_SAFE_MODE | REPORT_ERRORS, NULL, context);\n#else\n\t\t\t\tphp_stream *stream = php_stream_open_wrapper_ex(buffer, \"rb\", REPORT_ERRORS, NULL, context);\n#endif\n\n\t\t\t\tif (!stream) {\n\t\t\t\t\tRETVAL_FALSE;\n\t\t\t\t\tgoto clean;\n\t\t\t\t}\n\n\t\t\t\tret_val = (char *)magic_stream(magic, stream);\n\t\t\t\tphp_stream_close(stream);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Can only process string or stream arguments\");\n\t}\n\ncommon:\n\tif (ret_val) {\n\t\tRETVAL_STRING(ret_val, 1);\n\t} else {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Failed identify data %d:%s\", magic_errno(magic), magic_error(magic));\n\t\tRETVAL_FALSE;\n\t}\n\nclean:\n\tif (mimetype_emu) {\n\t\tmagic_close(magic);\n\t}\n\n\t/* Restore options */\n\tif (options) {\n\t\tFINFO_SET_OPTION(magic, finfo->options)\n\t}\n\treturn;\n}",
    "start": 386,
    "end": 539,
    "fix": "static void _php_finfo_get_type(INTERNAL_FUNCTION_PARAMETERS, int mode, int mimetype_emu) /* {{{ */\n{\n\tlong options = 0;\n\tchar *ret_val = NULL, *buffer = NULL;\n\tint buffer_len;\n\tstruct php_fileinfo *finfo;\n\tzval *zfinfo, *zcontext = NULL;\n\tzval *what;\n\tchar mime_directory[] = \"directory\";\n\n\tstruct magic_set *magic = NULL;\n\tFILEINFO_DECLARE_INIT_OBJECT(object)\n\n\tif (mimetype_emu) {\n\n\t\t/* mime_content_type(..) emulation */\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"z\", &what) == FAILURE) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (Z_TYPE_P(what)) {\n\t\t\tcase IS_STRING:\n\t\t\t\tbuffer = Z_STRVAL_P(what);\n\t\t\t\tbuffer_len = Z_STRLEN_P(what);\n\t\t\t\tmode = FILEINFO_MODE_FILE;\n\t\t\t\tbreak;\n\n\t\t\tcase IS_RESOURCE:\n\t\t\t\tmode = FILEINFO_MODE_STREAM;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Can only process string or stream arguments\");\n\t\t\t\tRETURN_FALSE;\n\t\t}\n\n\t\tmagic = magic_open(MAGIC_MIME_TYPE);\n\t\tif (magic_load(magic, NULL) == -1) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Failed to load magic database.\");\n\t\t\tgoto common;\n\t\t}\n\t} else if (object) {\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|lr\", &buffer, &buffer_len, &options, &zcontext) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tFILEINFO_FROM_OBJECT(finfo, object);\n\t\tmagic = finfo->magic;\n\t} else {\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs|lr\", &zfinfo, &buffer, &buffer_len, &options, &zcontext) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tZEND_FETCH_RESOURCE(finfo, struct php_fileinfo *, &zfinfo, -1, \"file_info\", le_fileinfo);\n\t\tmagic = finfo->magic;\n\t}\t\n\n\t/* Set options for the current file/buffer. */\n\tif (options) {\n\t\tFINFO_SET_OPTION(magic, options)\n\t}\n\n\tswitch (mode) {\n\t\tcase FILEINFO_MODE_BUFFER:\n\t\t{\n\t\t\tret_val = (char *) magic_buffer(magic, buffer, buffer_len);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase FILEINFO_MODE_STREAM:\n\t\t{\n\t\t\t\tphp_stream *stream;\n\t\t\t\toff_t streampos;\n\n\t\t\t\tphp_stream_from_zval_no_verify(stream, &what);\n\t\t\t\tif (!stream) {\n\t\t\t\t\tgoto common;\n\t\t\t\t}\n\n\t\t\t\tstreampos = php_stream_tell(stream); /* remember stream position for restoration */\n\t\t\t\tphp_stream_seek(stream, 0, SEEK_SET);\n\n\t\t\t\tret_val = (char *) magic_stream(magic, stream);\n\n\t\t\t\tphp_stream_seek(stream, streampos, SEEK_SET);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcase FILEINFO_MODE_FILE:\n\t\t{\n\t\t\t/* determine if the file is a local file or remote URL */\n\t\t\tchar *tmp2;\n\t\t\tphp_stream_wrapper *wrap;\n\t\t\tphp_stream_statbuf ssb;\n\n\t\t\tif (buffer == NULL || !*buffer) {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Empty filename or path\");\n\t\t\t\tRETVAL_FALSE;\n\t\t\t\tgoto clean;\n\t\t\t}\n\n\t\t\twrap = php_stream_locate_url_wrapper(buffer, &tmp2, 0 TSRMLS_CC);\n\n\t\t\tif (wrap) {\n\t\t\t\tphp_stream_context *context = php_stream_context_from_zval(zcontext, 0);\n#if PHP_API_VERSION < 20100412\n\t\t\t\tphp_stream *stream = php_stream_open_wrapper_ex(buffer, \"rb\", ENFORCE_SAFE_MODE | REPORT_ERRORS, NULL, context);\n#else\n\t\t\t\tphp_stream *stream = php_stream_open_wrapper_ex(buffer, \"rb\", REPORT_ERRORS, NULL, context);\n#endif\n\n\t\t\t\tif (!stream) {\n\t\t\t\t\tRETVAL_FALSE;\n\t\t\t\t\tgoto clean;\n\t\t\t\t}\n\n\t\t\t\tif (php_stream_stat(stream, &ssb) == SUCCESS) {\n\t\t\t\t\tif (ssb.sb.st_mode & S_IFDIR) {\n\t\t\t\t\t\tret_val = mime_directory;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret_val = (char *)magic_stream(magic, stream);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tphp_stream_close(stream);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Can only process string or stream arguments\");\n\t}\n\ncommon:\n\tif (ret_val) {\n\t\tRETVAL_STRING(ret_val, 1);\n\t} else {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Failed identify data %d:%s\", magic_errno(magic), magic_error(magic));\n\t\tRETVAL_FALSE;\n\t}\n\nclean:\n\tif (mimetype_emu) {\n\t\tmagic_close(magic);\n\t}\n\n\t/* Restore options */\n\tif (options) {\n\t\tFINFO_SET_OPTION(magic, finfo->options)\n\t}\n\treturn;\n}",
    "filename": "ext/fileinfo/fileinfo.c"
  },
  "php_2011-02-27-e65d361fde-1d984a7ffd": {
    "buggy": "static void tokenize(zval *return_value TSRMLS_DC)\n{\n\tzval token;\n\tzval *keyword;\n\tint token_type;\n\tzend_bool destroy;\n\tint token_line = 1;\n\n\tarray_init(return_value);\n\n\tZVAL_NULL(&token);\n\twhile ((token_type = lex_scan(&token TSRMLS_CC))) {\n\t\tdestroy = 1;\n\t\tswitch (token_type) {\n\t\t\tcase T_CLOSE_TAG:\n\t\t\t\tif (zendtext[zendleng - 1] != '>') {\n\t\t\t\t\tCG(zend_lineno)++;\n\t\t\t\t}\n\t\t\tcase T_OPEN_TAG:\n\t\t\tcase T_OPEN_TAG_WITH_ECHO:\n\t\t\tcase T_WHITESPACE:\n\t\t\tcase T_COMMENT:\n\t\t\tcase T_DOC_COMMENT:\n\t\t\t\tdestroy = 0;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (token_type >= 256) {\n\t\t\tMAKE_STD_ZVAL(keyword);\n\t\t\tarray_init(keyword);\n\t\t\tadd_next_index_long(keyword, token_type);\n\t\t\tif (token_type == T_END_HEREDOC) {\n\t\t\t\tif (CG(increment_lineno)) {\n\t\t\t\t\ttoken_line = ++CG(zend_lineno);\n\t\t\t\t\tCG(increment_lineno) = 0;\n\t\t\t\t}\n\t\t\t\tadd_next_index_stringl(keyword, Z_STRVAL(token), Z_STRLEN(token), 1);\n\t\t\t\tefree(Z_STRVAL(token));\n\t\t\t} else {\n\t\t\t\tadd_next_index_stringl(keyword, (char *)zendtext, zendleng, 1);\n\t\t\t}\n\t\t\tadd_next_index_long(keyword, token_line);\n\t\t\tadd_next_index_zval(return_value, keyword);\n\t\t} else {\n\t\t\tadd_next_index_stringl(return_value, (char *)zendtext, zendleng, 1);\n\t\t}\n\t\tif (destroy && Z_TYPE(token) != IS_NULL) {\n\t\t\tzval_dtor(&token);\n\t\t}\n\t\tZVAL_NULL(&token);\n\n\t\ttoken_line = CG(zend_lineno);\n\t}\n}",
    "start": 102,
    "end": 155,
    "fix": "static void tokenize(zval *return_value TSRMLS_DC)\n{\n\tzval token;\n\tzval *keyword;\n\tint token_type;\n\tzend_bool destroy;\n\tint token_line = 1;\n\n\tarray_init(return_value);\n\n\tZVAL_NULL(&token);\n\twhile ((token_type = lex_scan(&token TSRMLS_CC))) {\n\t\tdestroy = 1;\n\t\tswitch (token_type) {\n\t\t\tcase T_CLOSE_TAG:\n\t\t\t\tif (zendtext[zendleng - 1] != '>') {\n\t\t\t\t\tCG(zend_lineno)++;\n\t\t\t\t}\n\t\t\tcase T_OPEN_TAG:\n\t\t\tcase T_OPEN_TAG_WITH_ECHO:\n\t\t\tcase T_WHITESPACE:\n\t\t\tcase T_COMMENT:\n\t\t\tcase T_DOC_COMMENT:\n\t\t\t\tdestroy = 0;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (token_type >= 256) {\n\t\t\tMAKE_STD_ZVAL(keyword);\n\t\t\tarray_init(keyword);\n\t\t\tadd_next_index_long(keyword, token_type);\n\t\t\tif (token_type == T_END_HEREDOC) {\n\t\t\t\tif (CG(increment_lineno)) {\n\t\t\t\t\ttoken_line = ++CG(zend_lineno);\n\t\t\t\t\tCG(increment_lineno) = 0;\n\t\t\t\t}\n\t\t\t\tadd_next_index_stringl(keyword, Z_STRVAL(token), Z_STRLEN(token), 1);\n\t\t\t\tefree(Z_STRVAL(token));\n\t\t\t} else {\n\t\t\t\tadd_next_index_stringl(keyword, (char *)zendtext, zendleng, 1);\n\t\t\t}\n\t\t\tadd_next_index_long(keyword, token_line);\n\t\t\tadd_next_index_zval(return_value, keyword);\n\t\t} else {\n\t\t\tadd_next_index_stringl(return_value, (char *)zendtext, zendleng, 1);\n\t\t}\n\t\tif (destroy && Z_TYPE(token) != IS_NULL) {\n\t\t\tzval_dtor(&token);\n\t\t}\n\t\tZVAL_NULL(&token);\n\n\t\ttoken_line = CG(zend_lineno);\n\n\t\tif (token_type == T_HALT_COMPILER) {\n\t\t\tbreak;\n\t\t}\n\t}\n}",
    "filename": "ext/tokenizer/tokenizer.c"
  },
  "php_2011-03-11-d890ece3fc-6e74d95f34": {
    "buggy": "PHPAPI php_url *php_url_parse_ex(char const *str, int length)\n{\n\tchar port_buf[6];\n\tphp_url *ret = ecalloc(1, sizeof(php_url));\n\tchar const *s, *e, *p, *pp, *ue;\n\t\t\n\ts = str;\n\tue = s + length;\n\n\t/* parse scheme */\n\tif ((e = memchr(s, ':', length)) && (e - s)) {\n\t\t/* validate scheme */\n\t\tp = s;\n\t\twhile (p < e) {\n\t\t\t/* scheme = 1*[ lowalpha | digit | \"+\" | \"-\" | \".\" ] */\n\t\t\tif (!isalpha(*p) && !isdigit(*p) && *p != '+' && *p != '.' && *p != '-') {\n\t\t\t\tif (e + 1 < ue) {\n\t\t\t\t\tgoto parse_port;\n\t\t\t\t} else {\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\n\t\tif (*(e + 1) == '\\0') { /* only scheme is available */\n\t\t\tret->scheme = estrndup(s, (e - s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\tgoto end;\n\t\t}\n\n\t\t/* \n\t\t * certain schemas like mailto: and zlib: may not have any / after them\n\t\t * this check ensures we support those.\n\t\t */\n\t\tif (*(e+1) != '/') {\n\t\t\t/* check if the data we get is a port this allows us to \n\t\t\t * correctly parse things like a.com:80\n\t\t\t */\n\t\t\tp = e + 1;\n\t\t\twhile (isdigit(*p)) {\n\t\t\t\tp++;\n\t\t\t}\n\t\t\t\n\t\t\tif ((*p == '\\0' || *p == '/') && (p - e) < 7) {\n\t\t\t\tgoto parse_port;\n\t\t\t}\n\t\t\t\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\t\n\t\t\tlength -= ++e - s;\n\t\t\ts = e;\n\t\t\tgoto just_path;\n\t\t} else {\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\n\t\t\tif (*(e+2) == '/') {\n\t\t\t\ts = e + 3;\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\tif (*(e + 3) == '/') {\n\t\t\t\t\t\t/* support windows drive letters as in:\n\t\t\t\t\t\t   file:///c:/somedir/file.txt\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (*(e + 5) == ':') {\n\t\t\t\t\t\t\ts = e + 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgoto nohost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\ts = e + 1;\n\t\t\t\t\tgoto nohost;\n\t\t\t\t} else {\n\t\t\t\t\tlength -= ++e - s;\n\t\t\t\t\ts = e;\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\t\n\t} else if (e) { /* no scheme; starts with colon: look for port */\n\t\tparse_port:\n\t\tp = e + 1;\n\t\tpp = p;\n\n\t\twhile (pp-p < 6 && isdigit(*pp)) {\n\t\t\tpp++;\n\t\t}\n\n\t\tif (pp - p > 0 && pp - p < 6 && (*pp == '/' || *pp == '\\0')) {\n\t\t\tlong port;\n\t\t\tmemcpy(port_buf, p, (pp - p));\n\t\t\tport_buf[pp - p] = '\\0';\n\t\t\tport = strtol(port_buf, NULL, 10);\n\t\t\tif (port > 0 && port <= 65535) {\n\t\t\t\tret->port = (unsigned short) port;\n\t\t\t} else {\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t} else {\n\t\t\tgoto just_path;\n\t\t}\n\t} else {\n\t\tjust_path:\n\t\tue = s + length;\n\t\tgoto nohost;\n\t}\n\t\n\te = ue;\n\t\n\tif (!(p = memchr(s, '/', (ue - s)))) {\n\t\tchar *query, *fragment;\n\n\t\tquery = memchr(s, '?', (ue - s));\n\t\tfragment = memchr(s, '#', (ue - s));\n\n\t\tif (query && fragment) {\n\t\t\tif (query > fragment) {\n\t\t\t\tp = e = fragment;\n\t\t\t} else {\n\t\t\t\tp = e = query;\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tp = e = query;\n\t\t} else if (fragment) {\n\t\t\tp = e = fragment;\n\t\t}\n\t} else {\n\t\te = p;\n\t}\t\n\t\t\n\t/* check for login and password */\n\tif ((p = zend_memrchr(s, '@', (e-s)))) {\n\t\tif ((pp = memchr(s, ':', (p-s)))) {\n\t\t\tif ((pp-s) > 0) {\n\t\t\t\tret->user = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->user, (pp - s));\n\t\t\t}\t\n\t\t\n\t\t\tpp++;\n\t\t\tif (p-pp > 0) {\n\t\t\t\tret->pass = estrndup(pp, (p-pp));\n\t\t\t\tphp_replace_controlchars_ex(ret->pass, (p-pp));\n\t\t\t}\t\n\t\t} else {\n\t\t\tret->user = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->user, (p-s));\n\t\t}\n\t\t\n\t\ts = p + 1;\n\t}\n\n\t/* check for port */\n\tif (*s == '[' && *(e-1) == ']') {\n\t\t/* Short circuit portscan, \n\t\t   we're dealing with an \n\t\t   IPv6 embedded address */\n\t\tp = s;\n\t} else {\n\t\t/* memrchr is a GNU specific extension\n\t\t   Emulate for wide compatability */\n\t\tfor(p = e; *p != ':' && p >= s; p--);\n\t}\n\n\tif (p >= s && *p == ':') {\n\t\tif (!ret->port) {\n\t\t\tp++;\n\t\t\tif (e-p > 5) { /* port cannot be longer then 5 characters */\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t} else if (e - p > 0) {\n\t\t\t\tlong port;\n\t\t\t\tmemcpy(port_buf, p, (e - p));\n\t\t\t\tport_buf[e - p] = '\\0';\n\t\t\t\tport = strtol(port_buf, NULL, 10);\n\t\t\t\tif (port > 0 && port <= 65535) {\n\t\t\t\t\tret->port = (unsigned short)port;\n\t\t\t\t} else {\n\t\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\t\tefree(ret);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp--;\n\t\t}\t\n\t} else {\n\t\tp = e;\n\t}\n\t\n\t/* check if we have a valid host, if we don't reject the string as url */\n\tif ((p-s) < 1) {\n\t\tSTR_FREE(ret->scheme);\n\t\tSTR_FREE(ret->user);\n\t\tSTR_FREE(ret->pass);\n\t\tefree(ret);\n\t\treturn NULL;\n\t}\n\n\tret->host = estrndup(s, (p-s));\n\tphp_replace_controlchars_ex(ret->host, (p - s));\n\t\n\tif (e == ue) {\n\t\treturn ret;\n\t}\n\t\n\ts = e;\n\t\n\tnohost:\n\t\n\tif ((p = memchr(s, '?', (ue - s)))) {\n\t\tpp = strchr(s, '#');\n\n\t\tif (pp && pp < p) {\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t}\n\t\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\n\t\tif (pp) {\n\t\t\tif (pp - ++p) { \n\t\t\t\tret->query = estrndup(p, (pp-p));\n\t\t\t\tphp_replace_controlchars_ex(ret->query, (pp - p));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t} else if (++p - ue) {\n\t\t\tret->query = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->query, (ue - p));\n\t\t}\n\t} else if ((p = memchr(s, '#', (ue - s)))) {\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\t\n\t\tlabel_parse:\n\t\tp++;\n\t\t\n\t\tif (ue - p) {\n\t\t\tret->fragment = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->fragment, (ue - p));\n\t\t}\t\n\t} else {\n\t\tret->path = estrndup(s, (ue-s));\n\t\tphp_replace_controlchars_ex(ret->path, (ue - s));\n\t}\nend:\n\treturn ret;\n}",
    "start": 97,
    "end": 358,
    "fix": "PHPAPI php_url *php_url_parse_ex(char const *str, int length)\n{\n\tchar port_buf[6];\n\tphp_url *ret = ecalloc(1, sizeof(php_url));\n\tchar const *s, *e, *p, *pp, *ue;\n\t\t\n\ts = str;\n\tue = s + length;\n\n\t/* parse scheme */\n\tif ((e = memchr(s, ':', length)) && (e - s)) {\n\t\t/* validate scheme */\n\t\tp = s;\n\t\twhile (p < e) {\n\t\t\t/* scheme = 1*[ lowalpha | digit | \"+\" | \"-\" | \".\" ] */\n\t\t\tif (!isalpha(*p) && !isdigit(*p) && *p != '+' && *p != '.' && *p != '-') {\n\t\t\t\tif (e + 1 < ue) {\n\t\t\t\t\tgoto parse_port;\n\t\t\t\t} else {\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\n\t\tif (*(e + 1) == '\\0') { /* only scheme is available */\n\t\t\tret->scheme = estrndup(s, (e - s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\tgoto end;\n\t\t}\n\n\t\t/* \n\t\t * certain schemas like mailto: and zlib: may not have any / after them\n\t\t * this check ensures we support those.\n\t\t */\n\t\tif (*(e+1) != '/') {\n\t\t\t/* check if the data we get is a port this allows us to \n\t\t\t * correctly parse things like a.com:80\n\t\t\t */\n\t\t\tp = e + 1;\n\t\t\twhile (isdigit(*p)) {\n\t\t\t\tp++;\n\t\t\t}\n\t\t\t\n\t\t\tif ((*p == '\\0' || *p == '/') && (p - e) < 7) {\n\t\t\t\tgoto parse_port;\n\t\t\t}\n\t\t\t\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\t\n\t\t\tlength -= ++e - s;\n\t\t\ts = e;\n\t\t\tgoto just_path;\n\t\t} else {\n\t\t\tret->scheme = estrndup(s, (e-s));\n\t\t\tphp_replace_controlchars_ex(ret->scheme, (e - s));\n\t\t\n\t\t\tif (*(e+2) == '/') {\n\t\t\t\ts = e + 3;\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\tif (*(e + 3) == '/') {\n\t\t\t\t\t\t/* support windows drive letters as in:\n\t\t\t\t\t\t   file:///c:/somedir/file.txt\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (*(e + 5) == ':') {\n\t\t\t\t\t\t\ts = e + 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgoto nohost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!strncasecmp(\"file\", ret->scheme, sizeof(\"file\"))) {\n\t\t\t\t\ts = e + 1;\n\t\t\t\t\tgoto nohost;\n\t\t\t\t} else {\n\t\t\t\t\tlength -= ++e - s;\n\t\t\t\t\ts = e;\n\t\t\t\t\tgoto just_path;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\t\n\t} else if (e) { /* no scheme; starts with colon: look for port */\n\t\tparse_port:\n\t\tp = e + 1;\n\t\tpp = p;\n\n\t\twhile (pp-p < 6 && isdigit(*pp)) {\n\t\t\tpp++;\n\t\t}\n\n\t\tif (pp - p > 0 && pp - p < 6 && (*pp == '/' || *pp == '\\0')) {\n\t\t\tlong port;\n\t\t\tmemcpy(port_buf, p, (pp - p));\n\t\t\tport_buf[pp - p] = '\\0';\n\t\t\tport = strtol(port_buf, NULL, 10);\n\t\t\tif (port > 0 && port <= 65535) {\n\t\t\t\tret->port = (unsigned short) port;\n\t\t\t} else {\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t} else {\n\t\t\tgoto just_path;\n\t\t}\n\t} else {\n\t\tjust_path:\n\t\tue = s + length;\n\t\tgoto nohost;\n\t}\n\t\n\te = ue;\n\t\n\tif (!(p = memchr(s, '/', (ue - s)))) {\n\t\tchar *query, *fragment;\n\n\t\tquery = memchr(s, '?', (ue - s));\n\t\tfragment = memchr(s, '#', (ue - s));\n\n\t\tif (query && fragment) {\n\t\t\tif (query > fragment) {\n\t\t\t\tp = e = fragment;\n\t\t\t} else {\n\t\t\t\tp = e = query;\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tp = e = query;\n\t\t} else if (fragment) {\n\t\t\tp = e = fragment;\n\t\t}\n\t} else {\n\t\te = p;\n\t}\t\n\t\t\n\t/* check for login and password */\n\tif ((p = zend_memrchr(s, '@', (e-s)))) {\n\t\tif ((pp = memchr(s, ':', (p-s)))) {\n\t\t\tif ((pp-s) > 0) {\n\t\t\t\tret->user = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->user, (pp - s));\n\t\t\t}\t\n\t\t\n\t\t\tpp++;\n\t\t\tif (p-pp > 0) {\n\t\t\t\tret->pass = estrndup(pp, (p-pp));\n\t\t\t\tphp_replace_controlchars_ex(ret->pass, (p-pp));\n\t\t\t}\t\n\t\t} else {\n\t\t\tret->user = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->user, (p-s));\n\t\t}\n\t\t\n\t\ts = p + 1;\n\t}\n\n\t/* check for port */\n\tif (*s == '[' && *(e-1) == ']') {\n\t\t/* Short circuit portscan, \n\t\t   we're dealing with an \n\t\t   IPv6 embedded address */\n\t\tp = s;\n\t} else {\n\t\t/* memrchr is a GNU specific extension\n\t\t   Emulate for wide compatability */\n\t\tfor(p = e; *p != ':' && p >= s; p--);\n\t}\n\n\tif (p >= s && *p == ':') {\n\t\tif (!ret->port) {\n\t\t\tp++;\n\t\t\tif (e-p > 5) { /* port cannot be longer then 5 characters */\n\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\tefree(ret);\n\t\t\t\treturn NULL;\n\t\t\t} else if (e - p > 0) {\n\t\t\t\tlong port;\n\t\t\t\tmemcpy(port_buf, p, (e - p));\n\t\t\t\tport_buf[e - p] = '\\0';\n\t\t\t\tport = strtol(port_buf, NULL, 10);\n\t\t\t\tif (port > 0 && port <= 65535) {\n\t\t\t\t\tret->port = (unsigned short)port;\n\t\t\t\t} else {\n\t\t\t\t\tSTR_FREE(ret->scheme);\n\t\t\t\t\tSTR_FREE(ret->user);\n\t\t\t\t\tSTR_FREE(ret->pass);\n\t\t\t\t\tefree(ret);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp--;\n\t\t}\t\n\t} else {\n\t\tp = e;\n\t}\n\t\n\t/* check if we have a valid host, if we don't reject the string as url */\n\tif ((p-s) < 1) {\n\t\tSTR_FREE(ret->scheme);\n\t\tSTR_FREE(ret->user);\n\t\tSTR_FREE(ret->pass);\n\t\tefree(ret);\n\t\treturn NULL;\n\t}\n\n\tret->host = estrndup(s, (p-s));\n\tphp_replace_controlchars_ex(ret->host, (p - s));\n\t\n\tif (e == ue) {\n\t\treturn ret;\n\t}\n\t\n\ts = e;\n\t\n\tnohost:\n\t\n\tif ((p = memchr(s, '?', (ue - s)))) {\n\t\tpp = strchr(s, '#');\n\n\t\tif (pp && pp < p) {\n\t\t\tif (pp - s) {\n\t\t\t\tret->path = estrndup(s, (pp-s));\n\t\t\t\tphp_replace_controlchars_ex(ret->path, (pp - s));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t}\n\t\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\n\t\tif (pp) {\n\t\t\tif (pp - ++p) { \n\t\t\t\tret->query = estrndup(p, (pp-p));\n\t\t\t\tphp_replace_controlchars_ex(ret->query, (pp - p));\n\t\t\t}\n\t\t\tp = pp;\n\t\t\tgoto label_parse;\n\t\t} else if (++p - ue) {\n\t\t\tret->query = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->query, (ue - p));\n\t\t}\n\t} else if ((p = memchr(s, '#', (ue - s)))) {\n\t\tif (p - s) {\n\t\t\tret->path = estrndup(s, (p-s));\n\t\t\tphp_replace_controlchars_ex(ret->path, (p - s));\n\t\t}\t\n\t\t\n\t\tlabel_parse:\n\t\tp++;\n\t\t\n\t\tif (ue - p) {\n\t\t\tret->fragment = estrndup(p, (ue-p));\n\t\t\tphp_replace_controlchars_ex(ret->fragment, (ue - p));\n\t\t}\t\n\t} else {\n\t\tret->path = estrndup(s, (ue-s));\n\t\tphp_replace_controlchars_ex(ret->path, (ue - s));\n\t}\nend:\n\treturn ret;\n}",
    "filename": "ext/standard/url.c"
  },
  "php_2011-03-19-5d0c948296-8deb11c0c3": {
    "buggy": "static void spl_filesystem_dir_open(spl_filesystem_object* intern, char *path TSRMLS_DC)\n{\n\tint skip_dots = SPL_HAS_FLAG(intern->flags, SPL_FILE_DIR_SKIPDOTS);\n\n\tintern->type = SPL_FS_DIR;\n\tintern->_path_len = strlen(path);\n\tintern->u.dir.dirp = php_stream_opendir(path, REPORT_ERRORS, NULL);\n\n\tif (intern->_path_len > 1 && IS_SLASH_AT(path, intern->_path_len-1)) {\n\t\tintern->_path = estrndup(path, --intern->_path_len);\n\t} else {\n\t\tintern->_path = estrndup(path, intern->_path_len);\n\t}\n\tintern->u.dir.index = 0;\n\n\tif (EG(exception) || intern->u.dir.dirp == NULL) {\n\t\t/* throw exception: should've been already happened */\n\t\tintern->u.dir.entry.d_name[0] = '\\0';\n\t} else {\n\t\tdo {\n\t\t\tspl_filesystem_dir_read(intern TSRMLS_CC);\n\t\t} while (skip_dots && spl_filesystem_is_dot(intern->u.dir.entry.d_name));\n\t}\n}",
    "start": 219,
    "end": 242,
    "fix": "static void spl_filesystem_dir_open(spl_filesystem_object* intern, char *path TSRMLS_DC)\n{\n\tint skip_dots = SPL_HAS_FLAG(intern->flags, SPL_FILE_DIR_SKIPDOTS);\n\n\tintern->type = SPL_FS_DIR;\n\tintern->_path_len = strlen(path);\n\tintern->u.dir.dirp = php_stream_opendir(path, REPORT_ERRORS, NULL);\n\n\tif (intern->_path_len > 1 && IS_SLASH_AT(path, intern->_path_len-1)) {\n\t\tintern->_path = estrndup(path, --intern->_path_len);\n\t} else {\n\t\tintern->_path = estrndup(path, intern->_path_len);\n\t}\n\tintern->u.dir.index = 0;\n\n\tif (EG(exception) || intern->u.dir.dirp == NULL) {\n\t\tintern->u.dir.entry.d_name[0] = '\\0';\n\t\tif (!EG(exception)) {\n\t\t\t/* open failed w/out notice (turned to exception due to EH_THROW) */\n\t\t\tzend_throw_exception_ex(spl_ce_UnexpectedValueException, 0\n\t\t\t\tTSRMLS_CC, \"Failed to open directory \\\"%s\\\"\", path);\n\t\t}\n\t} else {\n\t\tdo {\n\t\t\tspl_filesystem_dir_read(intern TSRMLS_CC);\n\t\t} while (skip_dots && spl_filesystem_is_dot(intern->u.dir.entry.d_name));\n\t}\n}",
    "filename": "ext/spl/spl_directory.c"
  },
  "php_2011-03-23-63673a533f-2adf58cfcf": {
    "buggy": "PHP_METHOD(DatePeriod, __construct)\n{\n\tphp_period_obj   *dpobj;\n\tphp_date_obj     *dateobj;\n\tphp_interval_obj *intobj;\n\tzval *start, *end = NULL, *interval;\n\tlong  recurrences = 0, options = 0;\n\tchar *isostr = NULL;\n\tint   isostr_len = 0;\n\ttimelib_time *clone;\n\tzend_error_handling error_handling;\n\t\n\tzend_replace_error_handling(EH_THROW, NULL, &error_handling TSRMLS_CC);\n\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS() TSRMLS_CC, \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == FAILURE) {\n\t\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS() TSRMLS_CC, \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == FAILURE) {\n\t\t\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &isostr, &isostr_len, &options) == FAILURE) {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n\t\t\t\tzend_restore_error_handling(&error_handling TSRMLS_CC);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tdpobj = zend_object_store_get_object(getThis() TSRMLS_CC);\n\tdpobj->current = NULL;\n\n\tif (isostr_len) {\n\t\tdate_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len TSRMLS_CC);\n\t\tif (dpobj->start == NULL) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The ISO interval '%s' did not contain a start date.\", isostr);\n\t\t}\n\t\tif (dpobj->interval == NULL) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The ISO interval '%s' did not contain an interval.\", isostr);\n\t\t}\n\t\tif (dpobj->end == NULL && recurrences == 0) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n\t\t}\n\n\t\tif (dpobj->start) {\n\t\t\ttimelib_update_ts(dpobj->start, NULL);\n\t\t}\n\t\tif (dpobj->end) {\n\t\t\ttimelib_update_ts(dpobj->end, NULL);\n\t\t}\n\t} else {\n\t\t/* init */\n\t\tintobj  = (php_interval_obj *) zend_object_store_get_object(interval TSRMLS_CC);\n\n\t\t/* start date */\n\t\tdateobj = (php_date_obj *) zend_object_store_get_object(start TSRMLS_CC);\n\t\tclone = timelib_time_ctor();\n\t\tmemcpy(clone, dateobj->time, sizeof(timelib_time));\n\t\tif (dateobj->time->tz_abbr) {\n\t\t\tclone->tz_abbr = strdup(dateobj->time->tz_abbr);\n\t\t}\n\t\tif (dateobj->time->tz_info) {\n\t\t\tclone->tz_info = dateobj->time->tz_info;\n\t\t}\n\t\tdpobj->start = clone;\n\n\t\t/* interval */\n\t\tdpobj->interval = timelib_rel_time_clone(intobj->diff);\n\n\t\t/* end date */\n\t\tif (end) {\n\t\t\tdateobj = (php_date_obj *) zend_object_store_get_object(end TSRMLS_CC);\n\t\t\tclone = timelib_time_clone(dateobj->time);\n\t\t\tdpobj->end = clone;\n\t\t}\n\t}\n\n\t/* options */\n\tdpobj->include_start_date = !(options & PHP_DATE_PERIOD_EXCLUDE_START_DATE);\n\n\t/* recurrrences */\n\tdpobj->recurrences = recurrences + dpobj->include_start_date;\n\n\tdpobj->initialized = 1;\n\n\tzend_restore_error_handling(&error_handling TSRMLS_CC);\n}",
    "start": 3739,
    "end": 3819,
    "fix": "PHP_METHOD(DatePeriod, __construct)\n{\n\tphp_period_obj   *dpobj;\n\tphp_date_obj     *dateobj;\n\tphp_interval_obj *intobj;\n\tzval *start, *end = NULL, *interval;\n\tlong  recurrences = 0, options = 0;\n\tchar *isostr = NULL;\n\tint   isostr_len = 0;\n\ttimelib_time *clone;\n\tzend_error_handling error_handling;\n\t\n\tzend_replace_error_handling(EH_THROW, NULL, &error_handling TSRMLS_CC);\n\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS() TSRMLS_CC, \"OOl|l\", &start, date_ce_date, &interval, date_ce_interval, &recurrences, &options) == FAILURE) {\n\t\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS() TSRMLS_CC, \"OOO|l\", &start, date_ce_date, &interval, date_ce_interval, &end, date_ce_date, &options) == FAILURE) {\n\t\t\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &isostr, &isostr_len, &options) == FAILURE) {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"This constructor accepts either (DateTime, DateInterval, int) OR (DateTime, DateInterval, DateTime) OR (string) as arguments.\");\n\t\t\t\tzend_restore_error_handling(&error_handling TSRMLS_CC);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tdpobj = zend_object_store_get_object(getThis() TSRMLS_CC);\n\tdpobj->current = NULL;\n\n\tif (isostr) {\n\t\tdate_period_initialize(&(dpobj->start), &(dpobj->end), &(dpobj->interval), &recurrences, isostr, isostr_len TSRMLS_CC);\n\t\tif (dpobj->start == NULL) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The ISO interval '%s' did not contain a start date.\", isostr);\n\t\t}\n\t\tif (dpobj->interval == NULL) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The ISO interval '%s' did not contain an interval.\", isostr);\n\t\t}\n\t\tif (dpobj->end == NULL && recurrences == 0) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The ISO interval '%s' did not contain an end date or a recurrence count.\", isostr);\n\t\t}\n\n\t\tif (dpobj->start) {\n\t\t\ttimelib_update_ts(dpobj->start, NULL);\n\t\t}\n\t\tif (dpobj->end) {\n\t\t\ttimelib_update_ts(dpobj->end, NULL);\n\t\t}\n\t} else {\n\t\t/* init */\n\t\tintobj  = (php_interval_obj *) zend_object_store_get_object(interval TSRMLS_CC);\n\n\t\t/* start date */\n\t\tdateobj = (php_date_obj *) zend_object_store_get_object(start TSRMLS_CC);\n\t\tclone = timelib_time_ctor();\n\t\tmemcpy(clone, dateobj->time, sizeof(timelib_time));\n\t\tif (dateobj->time->tz_abbr) {\n\t\t\tclone->tz_abbr = strdup(dateobj->time->tz_abbr);\n\t\t}\n\t\tif (dateobj->time->tz_info) {\n\t\t\tclone->tz_info = dateobj->time->tz_info;\n\t\t}\n\t\tdpobj->start = clone;\n\n\t\t/* interval */\n\t\tdpobj->interval = timelib_rel_time_clone(intobj->diff);\n\n\t\t/* end date */\n\t\tif (end) {\n\t\t\tdateobj = (php_date_obj *) zend_object_store_get_object(end TSRMLS_CC);\n\t\t\tclone = timelib_time_clone(dateobj->time);\n\t\t\tdpobj->end = clone;\n\t\t}\n\t}\n\n\t/* options */\n\tdpobj->include_start_date = !(options & PHP_DATE_PERIOD_EXCLUDE_START_DATE);\n\n\t/* recurrrences */\n\tdpobj->recurrences = recurrences + dpobj->include_start_date;\n\n\tdpobj->initialized = 1;\n\n\tzend_restore_error_handling(&error_handling TSRMLS_CC);\n}",
    "filename": "ext/date/php_date.c"
  },
  "php_2011-03-25-8138f7de40-3acdca4703": {
    "buggy": "PHP_METHOD(Phar, mount)\n{\n\tchar *fname, *arch = NULL, *entry = NULL, *path, *actual;\n\tint fname_len, arch_len, entry_len, path_len, actual_len;\n\tphar_archive_data **pphar;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ss\", &path, &path_len, &actual, &actual_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tfname = zend_get_executed_filename(TSRMLS_C);\n\tfname_len = strlen(fname);\n\n#ifdef PHP_WIN32\n\tphar_unixify_path_separators(fname, fname_len);\n#endif\n\n\tif (fname_len > 7 && !memcmp(fname, \"phar://\", 7) && SUCCESS == phar_split_fname(fname, fname_len, &arch, &arch_len, &entry, &entry_len, 2, 0 TSRMLS_CC)) {\n\t\tefree(entry);\n\t\tentry = NULL;\n\n\t\tif (path_len > 7 && !memcmp(path, \"phar://\", 7)) {\n\t\t\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"Can only mount internal paths within a phar archive, use a relative path instead of \\\"%s\\\"\", path);\n\t\t\tefree(arch);\n\t\t\treturn;\n\t\t}\ncarry_on2:\n\t\tif (SUCCESS != zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), arch, arch_len, (void **)&pphar)) {\n\t\t\tif (PHAR_G(manifest_cached) && SUCCESS == zend_hash_find(&cached_phars, arch, arch_len, (void **)&pphar)) {\n\t\t\t\tif (SUCCESS == phar_copy_on_write(pphar TSRMLS_CC)) {\n\t\t\t\t\tgoto carry_on;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"%s is not a phar archive, cannot mount\", arch);\n\n\t\t\tif (arch) {\n\t\t\t\tefree(arch);\n\t\t\t}\n\t\t\treturn;\n\t\t}\ncarry_on:\n\t\tif (SUCCESS != phar_mount_entry(*pphar, actual, actual_len, path, path_len TSRMLS_CC)) {\n\t\t\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"Mounting of %s to %s within phar %s failed\", path, actual, arch);\n\t\t\tif (path && path == entry) {\n\t\t\t\tefree(entry);\n\t\t\t}\n\n\t\t\tif (arch) {\n\t\t\t\tefree(arch);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (entry && path && path == entry) {\n\t\t\tefree(entry);\n\t\t}\n\n\t\tif (arch) {\n\t\t\tefree(arch);\n\t\t}\n\n\t\treturn;\n\t} else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)) {\n\t\tgoto carry_on;\n\t} else if (PHAR_G(manifest_cached) && SUCCESS == zend_hash_find(&cached_phars, fname, fname_len, (void **)&pphar)) {\n\t\tif (SUCCESS == phar_copy_on_write(pphar TSRMLS_CC)) {\n\t\t\tgoto carry_on;\n\t\t}\n\n\t\tgoto carry_on;\n\t} else if (SUCCESS == phar_split_fname(path, path_len, &arch, &arch_len, &entry, &entry_len, 2, 0 TSRMLS_CC)) {\n\t\tpath = entry;\n\t\tpath_len = entry_len;\n\t\tgoto carry_on2;\n\t}\n\n\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"Mounting of %s to %s failed\", path, actual);\n}",
    "start": 568,
    "end": 647,
    "fix": "PHP_METHOD(Phar, mount)\n{\n\tchar *fname, *arch = NULL, *entry = NULL, *path, *actual;\n\tint fname_len, arch_len, entry_len, path_len, actual_len;\n\tphar_archive_data **pphar;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ss\", &path, &path_len, &actual, &actual_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tfname = zend_get_executed_filename(TSRMLS_C);\n\tfname_len = strlen(fname);\n\n#ifdef PHP_WIN32\n\tphar_unixify_path_separators(fname, fname_len);\n#endif\n\n\tif (fname_len > 7 && !memcmp(fname, \"phar://\", 7) && SUCCESS == phar_split_fname(fname, fname_len, &arch, &arch_len, &entry, &entry_len, 2, 0 TSRMLS_CC)) {\n\t\tefree(entry);\n\t\tentry = NULL;\n\n\t\tif (path_len > 7 && !memcmp(path, \"phar://\", 7)) {\n\t\t\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"Can only mount internal paths within a phar archive, use a relative path instead of \\\"%s\\\"\", path);\n\t\t\tefree(arch);\n\t\t\treturn;\n\t\t}\ncarry_on2:\n\t\tif (SUCCESS != zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), arch, arch_len, (void **)&pphar)) {\n\t\t\tif (PHAR_G(manifest_cached) && SUCCESS == zend_hash_find(&cached_phars, arch, arch_len, (void **)&pphar)) {\n\t\t\t\tif (SUCCESS == phar_copy_on_write(pphar TSRMLS_CC)) {\n\t\t\t\t\tgoto carry_on;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"%s is not a phar archive, cannot mount\", arch);\n\n\t\t\tif (arch) {\n\t\t\t\tefree(arch);\n\t\t\t}\n\t\t\treturn;\n\t\t}\ncarry_on:\n\t\tif (SUCCESS != phar_mount_entry(*pphar, actual, actual_len, path, path_len TSRMLS_CC)) {\n\t\t\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"Mounting of %s to %s within phar %s failed\", path, actual, arch);\n\t\t\tif (path && path == entry) {\n\t\t\t\tefree(entry);\n\t\t\t}\n\n\t\t\tif (arch) {\n\t\t\t\tefree(arch);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (entry && path && path == entry) {\n\t\t\tefree(entry);\n\t\t}\n\n\t\tif (arch) {\n\t\t\tefree(arch);\n\t\t}\n\n\t\treturn;\n\t} else if (PHAR_GLOBALS->phar_fname_map.arBuckets && SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)) {\n\t\tgoto carry_on;\n\t} else if (PHAR_G(manifest_cached) && SUCCESS == zend_hash_find(&cached_phars, fname, fname_len, (void **)&pphar)) {\n\t\tif (SUCCESS == phar_copy_on_write(pphar TSRMLS_CC)) {\n\t\t\tgoto carry_on;\n\t\t}\n\n\t\tgoto carry_on;\n\t} else if (SUCCESS == phar_split_fname(path, path_len, &arch, &arch_len, &entry, &entry_len, 2, 0 TSRMLS_CC)) {\n\t\tpath = entry;\n\t\tpath_len = entry_len;\n\t\tgoto carry_on2;\n\t}\n\n\tzend_throw_exception_ex(phar_ce_PharException, 0 TSRMLS_CC, \"Mounting of %s to %s failed\", path, actual);\n}",
    "filename": "ext/phar/phar_object.c"
  },
  "php_2011-04-06-187eb235fe-2e25ec9eb7": {
    "buggy": "zval *zend_std_read_property(zval *object, zval *member, int type, const zend_literal *key TSRMLS_DC) /* {{{ */\n{\n\tzend_object *zobj;\n\tzval *tmp_member = NULL;\n\tzval **retval;\n\tzval *rv = NULL;\n\tzend_property_info *property_info;\n\tint silent;\n\n\tsilent = (type == BP_VAR_IS);\n\tzobj = Z_OBJ_P(object);\n\n\tif (UNEXPECTED(Z_TYPE_P(member) != IS_STRING)) {\n\t\tALLOC_ZVAL(tmp_member);\n\t\t*tmp_member = *member;\n\t\tINIT_PZVAL(tmp_member);\n\t\tzval_copy_ctor(tmp_member);\n\t\tconvert_to_string(tmp_member);\n\t\tmember = tmp_member;\n\t\tkey = NULL;\n\t}\n\n#if DEBUG_OBJECT_HANDLERS\n\tfprintf(stderr, \"Read object #%d property: %s\\n\", Z_OBJ_HANDLE_P(object), Z_STRVAL_P(member));\n#endif\n\n\t/* make zend_get_property_info silent if we have getter - we may want to use it */\n\tproperty_info = zend_get_property_info_quick(zobj->ce, member, (zobj->ce->__get != NULL), key TSRMLS_CC);\n\n\tif (UNEXPECTED(!property_info) ||\n\t    ((EXPECTED((property_info->flags & ZEND_ACC_STATIC) == 0) &&\n\t     property_info->offset >= 0) ?\n\t        (zobj->properties ?\n\t            ((retval = (zval**)zobj->properties_table[property_info->offset]) == NULL) :\n\t            (*(retval = &zobj->properties_table[property_info->offset]) == NULL)) :\n\t        (UNEXPECTED(!zobj->properties) ||\n\t          UNEXPECTED(zend_hash_quick_find(zobj->properties, property_info->name, property_info->name_length+1, property_info->h, (void **) &retval) == FAILURE)))) {\n\t\tzend_guard *guard = NULL;\n\n\t\tif (zobj->ce->__get &&\n\t\t    zend_get_property_guard(zobj, property_info, member, &guard) == SUCCESS &&\n\t\t    !guard->in_get) {\n\t\t\t/* have getter - try with it! */\n\t\t\tZ_ADDREF_P(object);\n\t\t\tif (PZVAL_IS_REF(object)) {\n\t\t\t\tSEPARATE_ZVAL(&object);\n\t\t\t}\n\t\t\tguard->in_get = 1; /* prevent circular getting */\n\t\t\trv = zend_std_call_getter(object, member TSRMLS_CC);\n\t\t\tguard->in_get = 0;\n\n\t\t\tif (rv) {\n\t\t\t\tretval = &rv;\n\t\t\t\tif (!Z_ISREF_P(rv) &&\n\t\t\t\t    (type == BP_VAR_W || type == BP_VAR_RW  || type == BP_VAR_UNSET)) {\n\t\t\t\t\tif (Z_REFCOUNT_P(rv) > 0) {\n\t\t\t\t\t\tzval *tmp = rv;\n\n\t\t\t\t\t\tALLOC_ZVAL(rv);\n\t\t\t\t\t\t*rv = *tmp;\n\t\t\t\t\t\tzval_copy_ctor(rv);\n\t\t\t\t\t\tZ_UNSET_ISREF_P(rv);\n\t\t\t\t\t\tZ_SET_REFCOUNT_P(rv, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (UNEXPECTED(Z_TYPE_P(rv) != IS_OBJECT)) {\n\t\t\t\t\t\tzend_error(E_NOTICE, \"Indirect modification of overloaded property %s::$%s has no effect\", zobj->ce->name, Z_STRVAL_P(member));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tretval = &EG(uninitialized_zval_ptr);\n\t\t\t}\n\t\t\tzval_ptr_dtor(&object);\n\t\t} else {\n\t\t\tif (zobj->ce->__get && guard && guard->in_get == 1) {\n\t\t\t\tif (Z_STRVAL_P(member)[0] == '\\0') {\n\t\t\t\t\tif (Z_STRLEN_P(member) == 0) {\n\t\t\t\t\t\tzend_error(E_ERROR, \"Cannot access empty property\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzend_error(E_ERROR, \"Cannot access property started with '\\\\0'\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!silent) {\n\t\t\t\tzend_error(E_NOTICE,\"Undefined property: %s::$%s\", zobj->ce->name, Z_STRVAL_P(member));\n\t\t\t}\n\t\t\tretval = &EG(uninitialized_zval_ptr);\n\t\t}\n\t}\n\tif (UNEXPECTED(tmp_member != NULL)) {\n\t\tZ_ADDREF_PP(retval);\n\t\tzval_ptr_dtor(&tmp_member);\n\t\tZ_DELREF_PP(retval);\n\t}\n\treturn *retval;\n}",
    "start": 378,
    "end": 472,
    "fix": "zval *zend_std_read_property(zval *object, zval *member, int type, const zend_literal *key TSRMLS_DC) /* {{{ */\n{\n\tzend_object *zobj;\n\tzval *tmp_member = NULL;\n\tzval **retval;\n\tzval *rv = NULL;\n\tzend_property_info *property_info;\n\tint silent;\n\n\tsilent = (type == BP_VAR_IS);\n\tzobj = Z_OBJ_P(object);\n\n\tif (UNEXPECTED(Z_TYPE_P(member) != IS_STRING)) {\n\t\tALLOC_ZVAL(tmp_member);\n\t\t*tmp_member = *member;\n\t\tINIT_PZVAL(tmp_member);\n\t\tzval_copy_ctor(tmp_member);\n\t\tconvert_to_string(tmp_member);\n\t\tmember = tmp_member;\n\t\tkey = NULL;\n\t}\n\n#if DEBUG_OBJECT_HANDLERS\n\tfprintf(stderr, \"Read object #%d property: %s\\n\", Z_OBJ_HANDLE_P(object), Z_STRVAL_P(member));\n#endif\n\n\t/* make zend_get_property_info silent if we have getter - we may want to use it */\n\tproperty_info = zend_get_property_info_quick(zobj->ce, member, (zobj->ce->__get != NULL), key TSRMLS_CC);\n\n\tif (UNEXPECTED(!property_info) ||\n\t    ((EXPECTED((property_info->flags & ZEND_ACC_STATIC) == 0) &&\n\t     property_info->offset >= 0) ?\n\t        (zobj->properties ?\n\t            ((retval = (zval**)zobj->properties_table[property_info->offset]) == NULL) :\n\t            (*(retval = &zobj->properties_table[property_info->offset]) == NULL)) :\n\t        (UNEXPECTED(!zobj->properties) ||\n\t          UNEXPECTED(zend_hash_quick_find(zobj->properties, property_info->name, property_info->name_length+1, property_info->h, (void **) &retval) == FAILURE)))) {\n\t\tzend_guard *guard = NULL;\n\n\t\tif (zobj->ce->__get &&\n\t\t    zend_get_property_guard(zobj, property_info, member, &guard) == SUCCESS &&\n\t\t    !guard->in_get) {\n\t\t\t/* have getter - try with it! */\n\t\t\tZ_ADDREF_P(object);\n\t\t\tif (PZVAL_IS_REF(object)) {\n\t\t\t\tSEPARATE_ZVAL(&object);\n\t\t\t}\n\t\t\tguard->in_get = 1; /* prevent circular getting */\n\t\t\trv = zend_std_call_getter(object, member TSRMLS_CC);\n\t\t\tguard->in_get = 0;\n\n\t\t\tif (rv) {\n\t\t\t\tretval = &rv;\n\t\t\t\tif (!Z_ISREF_P(rv) &&\n\t\t\t\t    (type == BP_VAR_W || type == BP_VAR_RW  || type == BP_VAR_UNSET)) {\n\t\t\t\t\tif (Z_REFCOUNT_P(rv) > 0) {\n\t\t\t\t\t\tzval *tmp = rv;\n\n\t\t\t\t\t\tALLOC_ZVAL(rv);\n\t\t\t\t\t\t*rv = *tmp;\n\t\t\t\t\t\tzval_copy_ctor(rv);\n\t\t\t\t\t\tZ_UNSET_ISREF_P(rv);\n\t\t\t\t\t\tZ_SET_REFCOUNT_P(rv, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (UNEXPECTED(Z_TYPE_P(rv) != IS_OBJECT)) {\n\t\t\t\t\t\tzend_error(E_NOTICE, \"Indirect modification of overloaded property %s::$%s has no effect\", zobj->ce->name, Z_STRVAL_P(member));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tretval = &EG(uninitialized_zval_ptr);\n\t\t\t}\n\t\t\tif (EXPECTED(*retval != object)) {\n\t\t\t\tzval_ptr_dtor(&object);\n\t\t\t} else {\n\t\t\t\tZ_DELREF_P(object);\n\t\t\t}\n\t\t} else {\n\t\t\tif (zobj->ce->__get && guard && guard->in_get == 1) {\n\t\t\t\tif (Z_STRVAL_P(member)[0] == '\\0') {\n\t\t\t\t\tif (Z_STRLEN_P(member) == 0) {\n\t\t\t\t\t\tzend_error(E_ERROR, \"Cannot access empty property\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzend_error(E_ERROR, \"Cannot access property started with '\\\\0'\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!silent) {\n\t\t\t\tzend_error(E_NOTICE,\"Undefined property: %s::$%s\", zobj->ce->name, Z_STRVAL_P(member));\n\t\t\t}\n\t\t\tretval = &EG(uninitialized_zval_ptr);\n\t\t}\n\t}\n\tif (UNEXPECTED(tmp_member != NULL)) {\n\t\tZ_ADDREF_PP(retval);\n\t\tzval_ptr_dtor(&tmp_member);\n\t\tZ_DELREF_PP(retval);\n\t}\n\treturn *retval;\n}",
    "filename": "Zend/zend_object_handlers.c"
  },
  "php_2011-04-06-18d71a6f59-187eb235fe": {
    "buggy": "PHP_FUNCTION(array_fill_keys)\n{\n\tzval *keys, *val, **entry;\n\tHashPosition pos;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"az\", &keys, &val) == FAILURE) {\n\t\treturn;\n\t}\n\n\t/* Initialize return array */\n\tarray_init_size(return_value, zend_hash_num_elements(Z_ARRVAL_P(keys)));\n\n\tzend_hash_internal_pointer_reset_ex(Z_ARRVAL_P(keys), &pos);\n\twhile (zend_hash_get_current_data_ex(Z_ARRVAL_P(keys), (void **)&entry, &pos) == SUCCESS) {\n\n\t\tif (Z_TYPE_PP(entry) == IS_LONG) {\n\t\t\tzval_add_ref(&val);\n\t\t\tzend_hash_index_update(Z_ARRVAL_P(return_value), Z_LVAL_PP(entry), &val, sizeof(zval *), NULL);\n\t\t} else {\n\t\t\tzval key, *key_ptr = *entry;\n\n\t\t\tif (Z_TYPE_PP(entry) != IS_STRING) {\n\t\t\t\tkey = **entry;\n\t\t\t\tzval_copy_ctor(&key);\n\t\t\t\tconvert_to_string(&key);\n\t\t\t\tkey_ptr = &key;\n\t\t\t}\n\n\t\t\tzval_add_ref(&val);\n\t\t\tzend_symtable_update(Z_ARRVAL_P(return_value), Z_STRVAL_P(key_ptr), Z_STRLEN_P(key_ptr) + 1, &val, sizeof(zval *), NULL);\n\n\t\t\tif (key_ptr != *entry) {\n\t\t\t\tzval_dtor(&key);\n\t\t\t}\n\t\t}\n\n\t\tzend_hash_move_forward_ex(Z_ARRVAL_P(keys), &pos);\n\t}\n}",
    "start": 1572,
    "end": 1610,
    "fix": "PHP_FUNCTION(array_fill_keys)\n{\n\tzval *keys, *val, **entry;\n\tHashPosition pos;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"az\", &keys, &val) == FAILURE) {\n\t\treturn;\n\t}\n\n\t/* Initialize return array */\n\tarray_init_size(return_value, zend_hash_num_elements(Z_ARRVAL_P(keys)));\n\n\tzend_hash_internal_pointer_reset_ex(Z_ARRVAL_P(keys), &pos);\n\twhile (zend_hash_get_current_data_ex(Z_ARRVAL_P(keys), (void **)&entry, &pos) == SUCCESS) {\n\n\t\tif (Z_TYPE_PP(entry) == IS_LONG) {\n\t\t\tzval_add_ref(&val);\n\t\t\tzend_hash_index_update(Z_ARRVAL_P(return_value), Z_LVAL_PP(entry), &val, sizeof(zval *), NULL);\n\t\t} else {\n\t\t\tzval key, *key_ptr = *entry;\n\n\t\t\tif (Z_TYPE_PP(entry) != IS_STRING) {\n\t\t\t\tkey = **entry;\n\t\t\t\tzval_copy_ctor(&key);\n\t\t\t\tconvert_to_string(&key);\n\t\t\t\tkey_ptr = &key;\n\t\t\t}\n\n\t\t\tzval_add_ref(&val);\n\t\t\tzend_symtable_update(Z_ARRVAL_P(return_value), Z_STRVAL_P(key_ptr), Z_STRLEN_P(key_ptr) + 1, &val, sizeof(zval *), NULL);\n\n\t\t\tif (key_ptr != *entry) {\n\t\t\t\tzval_dtor(&key);\n\t\t\t}\n\t\t}\n\n\t\tzend_hash_move_forward_ex(Z_ARRVAL_P(keys), &pos);\n\t}\n}",
    "filename": "ext/standard/array.c"
  },
  "php_2011-04-07-77ed819430-efcb9a71cd": {
    "buggy": "ZEND_API int zval_copy_static_var(zval **p TSRMLS_DC, int num_args, va_list args, zend_hash_key *key) /* {{{ */\n{\n\tHashTable *target = va_arg(args, HashTable*);\n\tzend_bool is_ref;\n\tzval *tmp;\n  \n\tif (Z_TYPE_PP(p) & (IS_LEXICAL_VAR|IS_LEXICAL_REF)) {\n\t\tis_ref = Z_TYPE_PP(p) & IS_LEXICAL_REF;\n    \n\t\tif (!EG(active_symbol_table)) {\n\t\t\tzend_rebuild_symbol_table(TSRMLS_C);\n\t\t}\n\t\tif (zend_hash_quick_find(EG(active_symbol_table), key->arKey, key->nKeyLength, key->h, (void **) &p) == FAILURE) {\n\t\t\tif (is_ref) {        \n\t\t\t\tALLOC_INIT_ZVAL(tmp);\n\t\t\t\tZ_SET_ISREF_P(tmp);\n\t\t\t\tzend_hash_quick_add(EG(active_symbol_table), key->arKey, key->nKeyLength, key->h, &tmp, sizeof(zval*), (void**)&p);\n\t\t\t} else {\n\t\t\t\ttmp = EG(uninitialized_zval_ptr);\n\t\t\t\tzend_error(E_NOTICE,\"Undefined variable: %s\", key->arKey);\n\t\t\t}\n\t\t} else {\n\t\t\tif (is_ref) {\n\t\t\t\tSEPARATE_ZVAL_TO_MAKE_IS_REF(p);\n\t\t\t\ttmp = *p;\n\t\t\t} else if (Z_ISREF_PP(p)) {\n\t\t\t\tALLOC_INIT_ZVAL(tmp);\n\t\t\t\tZVAL_COPY_VALUE(tmp, *p);\n\t\t\t\tZ_SET_REFCOUNT_P(tmp, 0);\n\t\t\t\tZ_UNSET_ISREF_P(tmp);\n\t\t\t} else {\n\t\t\t\ttmp = *p;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttmp = *p;\n\t}\n\tif (zend_hash_quick_add(target, key->arKey, key->nKeyLength, key->h, &tmp, sizeof(zval*), NULL) == SUCCESS) {\n\t\tZ_ADDREF_P(tmp);\n\t}\n\treturn ZEND_HASH_APPLY_KEEP;\n}",
    "start": 191,
    "end": 232,
    "fix": "ZEND_API int zval_copy_static_var(zval **p TSRMLS_DC, int num_args, va_list args, zend_hash_key *key) /* {{{ */\n{\n\tHashTable *target = va_arg(args, HashTable*);\n\tzend_bool is_ref;\n\tzval *tmp;\n  \n\tif (Z_TYPE_PP(p) & (IS_LEXICAL_VAR|IS_LEXICAL_REF)) {\n\t\tis_ref = Z_TYPE_PP(p) & IS_LEXICAL_REF;\n    \n\t\tif (!EG(active_symbol_table)) {\n\t\t\tzend_rebuild_symbol_table(TSRMLS_C);\n\t\t}\n\t\tif (zend_hash_quick_find(EG(active_symbol_table), key->arKey, key->nKeyLength, key->h, (void **) &p) == FAILURE) {\n\t\t\tif (is_ref) {        \n\t\t\t\tALLOC_INIT_ZVAL(tmp);\n\t\t\t\tZ_SET_ISREF_P(tmp);\n\t\t\t\tzend_hash_quick_add(EG(active_symbol_table), key->arKey, key->nKeyLength, key->h, &tmp, sizeof(zval*), (void**)&p);\n\t\t\t} else {\n\t\t\t\ttmp = EG(uninitialized_zval_ptr);\n\t\t\t\tzend_error(E_NOTICE,\"Undefined variable: %s\", key->arKey);\n\t\t\t}\n\t\t} else {\n\t\t\tif (is_ref) {\n\t\t\t\tSEPARATE_ZVAL_TO_MAKE_IS_REF(p);\n\t\t\t\ttmp = *p;\n\t\t\t} else if (Z_ISREF_PP(p)) {\n\t\t\t\tALLOC_INIT_ZVAL(tmp);\n\t\t\t\tZVAL_COPY_VALUE(tmp, *p);\n\t\t\t\tzval_copy_ctor(tmp);\n\t\t\t\tZ_SET_REFCOUNT_P(tmp, 0);\n\t\t\t\tZ_UNSET_ISREF_P(tmp);\n\t\t\t} else {\n\t\t\t\ttmp = *p;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttmp = *p;\n\t}\n\tif (zend_hash_quick_add(target, key->arKey, key->nKeyLength, key->h, &tmp, sizeof(zval*), NULL) == SUCCESS) {\n\t\tZ_ADDREF_P(tmp);\n\t}\n\treturn ZEND_HASH_APPLY_KEEP;\n}",
    "filename": "Zend/zend_variables.c"
  },
  "php_2011-04-07-d3274b7f20-77ed819430": {
    "buggy": "static void spl_array_unset_dimension_ex(int check_inherited, zval *object, zval *offset TSRMLS_DC) /* {{{ */\n{\n\tspl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);\n\tlong index;\n\tHashTable *ht;\n\n\tif (check_inherited && intern->fptr_offset_del) {\n\t\tSEPARATE_ARG_IF_REF(offset);\n\t\tzend_call_method_with_1_params(&object, Z_OBJCE_P(object), &intern->fptr_offset_del, \"offsetUnset\", NULL, offset);\n\t\tzval_ptr_dtor(&offset);\n\t\treturn;\n\t}\n\n\tswitch(Z_TYPE_P(offset)) {\n\tcase IS_STRING:\n\t\tht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\tif (ht->nApplyCount > 0) {\n\t\t\tzend_error(E_WARNING, \"Modification of ArrayObject during sorting is prohibited\");\n\t\t\treturn;\n\t\t}\n\t\tif (ht == &EG(symbol_table)) {\n\t\t\tif (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset) TSRMLS_CC)) {\n\t\t\t\tzend_error(E_NOTICE,\"Undefined index:  %s\", Z_STRVAL_P(offset));\n\t\t\t}\n\t\t} else {\n\t\t\tif (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) {\n\t\t\t\tzend_error(E_NOTICE,\"Undefined index:  %s\", Z_STRVAL_P(offset));\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase IS_DOUBLE:\n\tcase IS_RESOURCE:\n\tcase IS_BOOL: \n\tcase IS_LONG: \n\t\tif (offset->type == IS_DOUBLE) {\n\t\t\tindex = (long)Z_DVAL_P(offset);\n\t\t} else {\n\t\t\tindex = Z_LVAL_P(offset);\n\t\t}\n\t\tht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\tif (ht->nApplyCount > 0) {\n\t\t\tzend_error(E_WARNING, \"Modification of ArrayObject during sorting is prohibited\");\n\t\t\treturn;\n\t\t}\n\t\tif (zend_hash_index_del(ht, index) == FAILURE) {\n\t\t\tzend_error(E_NOTICE,\"Undefined offset:  %ld\", Z_LVAL_P(offset));\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tzend_error(E_WARNING, \"Illegal offset type\");\n\t\treturn;\n\t}\n\tspl_hash_verify_pos(intern TSRMLS_CC); /* call rewind on FAILURE */\n} /* }}} */",
    "start": 489,
    "end": 542,
    "fix": "static void spl_array_unset_dimension_ex(int check_inherited, zval *object, zval *offset TSRMLS_DC) /* {{{ */\n{\n\tspl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);\n\tlong index;\n\tHashTable *ht;\n\n\tif (check_inherited && intern->fptr_offset_del) {\n\t\tSEPARATE_ARG_IF_REF(offset);\n\t\tzend_call_method_with_1_params(&object, Z_OBJCE_P(object), &intern->fptr_offset_del, \"offsetUnset\", NULL, offset);\n\t\tzval_ptr_dtor(&offset);\n\t\treturn;\n\t}\n\n\tswitch(Z_TYPE_P(offset)) {\n\tcase IS_STRING:\n\t\tht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\tif (ht->nApplyCount > 0) {\n\t\t\tzend_error(E_WARNING, \"Modification of ArrayObject during sorting is prohibited\");\n\t\t\treturn;\n\t\t}\n\t\tif (ht == &EG(symbol_table)) {\n\t\t\tif (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset) TSRMLS_CC)) {\n\t\t\t\tzend_error(E_NOTICE,\"Undefined index:  %s\", Z_STRVAL_P(offset));\n\t\t\t}\n\t\t} else {\n\t\t\tif (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) {\n\t\t\t\tzend_error(E_NOTICE,\"Undefined index:  %s\", Z_STRVAL_P(offset));\n\t\t\t} else {\n\t\t\t\tspl_array_object *obj = intern;\n\n\t\t\t\twhile (1) {\n\t\t\t\t\tif ((obj->ar_flags & SPL_ARRAY_IS_SELF) != 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (Z_TYPE_P(obj->array) == IS_OBJECT) {\n\t\t\t\t\t    if ((obj->ar_flags & SPL_ARRAY_USE_OTHER) == 0) {\n\t\t\t\t\t\t\tobj = (spl_array_object*)zend_object_store_get_object(obj->array TSRMLS_CC);\n\t\t\t\t\t    \tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobj = (spl_array_object*)zend_object_store_get_object(obj->array TSRMLS_CC);\n\t\t\t\t\t    }\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj = NULL;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (obj) {\n\t\t\t\t\tzend_property_info *property_info = zend_get_property_info(obj->std.ce, offset, 1 TSRMLS_CC);\n\n\t\t\t\t\tif (property_info &&\n\t\t\t\t\t    (property_info->flags & ZEND_ACC_STATIC) == 0 &&\n\t\t\t\t\t    property_info->offset >= 0) {\n\t\t\t\t\t    obj->std.properties_table[property_info->offset] = NULL;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tbreak;\n\tcase IS_DOUBLE:\n\tcase IS_RESOURCE:\n\tcase IS_BOOL: \n\tcase IS_LONG: \n\t\tif (offset->type == IS_DOUBLE) {\n\t\t\tindex = (long)Z_DVAL_P(offset);\n\t\t} else {\n\t\t\tindex = Z_LVAL_P(offset);\n\t\t}\n\t\tht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\tif (ht->nApplyCount > 0) {\n\t\t\tzend_error(E_WARNING, \"Modification of ArrayObject during sorting is prohibited\");\n\t\t\treturn;\n\t\t}\n\t\tif (zend_hash_index_del(ht, index) == FAILURE) {\n\t\t\tzend_error(E_NOTICE,\"Undefined offset:  %ld\", Z_LVAL_P(offset));\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tzend_error(E_WARNING, \"Illegal offset type\");\n\t\treturn;\n\t}\n\tspl_hash_verify_pos(intern TSRMLS_CC); /* call rewind on FAILURE */\n} /* }}} */",
    "filename": "ext/spl/spl_array.c"
  },
  "php_2011-04-09-db01e840c2-09b990f499": {
    "buggy": "static void *php_libxml_streams_IO_open_wrapper(const char *filename, const char *mode, const int read_only)\n{\n\tphp_stream_statbuf ssbuf;\n\tphp_stream_context *context = NULL;\n\tphp_stream_wrapper *wrapper = NULL;\n\tchar *resolved_path, *path_to_open = NULL;\n\tvoid *ret_val = NULL;\n\tint isescaped=0;\n\txmlURI *uri;\n\n\tTSRMLS_FETCH();\n\n\turi = xmlParseURI((xmlChar *)filename);\n\tif (uri && (uri->scheme == NULL || (xmlStrncmp(uri->scheme, \"file\", 4) == 0))) {\n\t\tresolved_path = xmlURIUnescapeString(filename, 0, NULL);\n\t\tisescaped = 1;\n\t} else {\n\t\tresolved_path = (char *)filename;\n\t}\n\n\tif (uri) {\n\t\txmlFreeURI(uri);\n\t}\n\n\tif (resolved_path == NULL) {\n\t\treturn NULL;\n\t}\n\n\t/* logic copied from _php_stream_stat, but we only want to fail\n\t   if the wrapper supports stat, otherwise, figure it out from\n\t   the open.  This logic is only to support hiding warnings\n\t   that the streams layer puts out at times, but for libxml we\n\t   may try to open files that don't exist, but it is not a failure\n\t   in xml processing (eg. DTD files)  */\n\twrapper = php_stream_locate_url_wrapper(resolved_path, &path_to_open, 0 TSRMLS_CC);\n\tif (wrapper && read_only && wrapper->wops->url_stat) {\n\t\tif (wrapper->wops->url_stat(wrapper, path_to_open, PHP_STREAM_URL_STAT_QUIET, &ssbuf, NULL TSRMLS_CC) == -1) {\n\t\t\tif (isescaped) {\n\t\t\t\txmlFree(resolved_path);\n\t\t\t}\n\t\t\treturn NULL;\n\t\t}\n\t}\n\n\tif (LIBXML(stream_context)) {\n\t\tcontext = zend_fetch_resource(&LIBXML(stream_context) TSRMLS_CC, -1, \"Stream-Context\", NULL, 1, php_le_stream_context(TSRMLS_C));\n\t}\n\n\tret_val = php_stream_open_wrapper_ex(path_to_open, (char *)mode, REPORT_ERRORS, NULL, context);\n\tif (isescaped) {\n\t\txmlFree(resolved_path);\n\t}\n\treturn ret_val;\n}",
    "start": 271,
    "end": 324,
    "fix": "static void *php_libxml_streams_IO_open_wrapper(const char *filename, const char *mode, const int read_only)\n{\n\tphp_stream_statbuf ssbuf;\n\tphp_stream_context *context = NULL;\n\tphp_stream_wrapper *wrapper = NULL;\n\tchar *resolved_path, *path_to_open = NULL;\n\tvoid *ret_val = NULL;\n\tint isescaped=0;\n\txmlURI *uri;\n\n\tTSRMLS_FETCH();\n\n\turi = xmlParseURI((xmlChar *)filename);\n\tif (uri && (uri->scheme == NULL || (xmlStrncmp(uri->scheme, \"file\", 4) == 0))) {\n\t\tresolved_path = xmlURIUnescapeString(filename, 0, NULL);\n\t\tisescaped = 1;\n\t} else {\n\t\tresolved_path = (char *)filename;\n\t}\n\n\tif (uri) {\n\t\txmlFreeURI(uri);\n\t}\n\n\tif (resolved_path == NULL) {\n\t\treturn NULL;\n\t}\n\n\t/* logic copied from _php_stream_stat, but we only want to fail\n\t   if the wrapper supports stat, otherwise, figure it out from\n\t   the open.  This logic is only to support hiding warnings\n\t   that the streams layer puts out at times, but for libxml we\n\t   may try to open files that don't exist, but it is not a failure\n\t   in xml processing (eg. DTD files)  */\n\twrapper = php_stream_locate_url_wrapper(resolved_path, &path_to_open, 0 TSRMLS_CC);\n\tif (wrapper && read_only && wrapper->wops->url_stat) {\n\t\tif (wrapper->wops->url_stat(wrapper, path_to_open, PHP_STREAM_URL_STAT_QUIET, &ssbuf, NULL TSRMLS_CC) == -1) {\n\t\t\tif (isescaped) {\n\t\t\t\txmlFree(resolved_path);\n\t\t\t}\n\t\t\treturn NULL;\n\t\t}\n\t}\n\n\tcontext = php_stream_context_from_zval(LIBXML(stream_context), 0);\n\t\n\tret_val = php_stream_open_wrapper_ex(path_to_open, (char *)mode, REPORT_ERRORS, NULL, context);\n\tif (isescaped) {\n\t\txmlFree(resolved_path);\n\t}\n\treturn ret_val;\n}",
    "filename": "ext/libxml/libxml.c"
  },
  "php_2011-04-19-11941b3fd2-821d7169d9": {
    "buggy": "ZEND_API void zend_create_closure(zval *res, zend_function *func, zend_class_entry *scope, zval *this_ptr TSRMLS_DC) /* {{{ */\n{\n\tzend_closure *closure;\n\n\tobject_init_ex(res, zend_ce_closure);\n\n\tclosure = (zend_closure *)zend_object_store_get_object(res TSRMLS_CC);\n\n\tclosure->func = *func;\n\n\tif (closure->func.type == ZEND_USER_FUNCTION) {\n\t\tif (closure->func.op_array.static_variables) {\n\t\t\tHashTable *static_variables = closure->func.op_array.static_variables;\n\n\t\t\tALLOC_HASHTABLE(closure->func.op_array.static_variables);\n\t\t\tzend_hash_init(closure->func.op_array.static_variables, zend_hash_num_elements(static_variables), NULL, ZVAL_PTR_DTOR, 0);\n\t\t\tzend_hash_apply_with_arguments(static_variables TSRMLS_CC, (apply_func_args_t)zval_copy_static_var, 1, closure->func.op_array.static_variables);\n\t\t}\n\t\tclosure->func.op_array.run_time_cache = NULL;\n\t\t(*closure->func.op_array.refcount)++;\n\t} else {\n\t\t/* verify that we aren't binding internal function to a wrong scope */\n\t\tif(func->common.scope != NULL) {\n\t\t\tif(scope && !instanceof_function(scope, func->common.scope TSRMLS_CC)) {\n\t\t\t\tzend_error(E_WARNING, \"Cannot bind function %s::%s to scope class %s\", func->common.scope->name, func->common.function_name, scope->name);\n\t\t\t\tscope = NULL;\n\t\t\t}\n\t\t\tif(scope && this_ptr && (func->common.fn_flags & ZEND_ACC_STATIC) == 0 && \n\t\t\t\t\t!instanceof_function(Z_OBJCE_P(this_ptr), closure->func.common.scope TSRMLS_CC)) {\n\t\t\t\tzend_error(E_WARNING, \"Cannot bind function %s::%s to object of class %s\", func->common.scope->name, func->common.function_name, Z_OBJCE_P(this_ptr)->name);\n\t\t\t\tscope = NULL;\n\t\t\t\tthis_ptr = NULL;\n\t\t\t}\n\t\t} else {\n\t\t\t/* if it's a free function, we won't set scope & this since they're meaningless */\n\t\t\tthis_ptr = NULL;\n\t\t\tscope = NULL;\n\t\t}\n\t}\n\n\tclosure->func.common.scope = scope;\n\tif (scope) {\n\t\tclosure->func.common.fn_flags |= ZEND_ACC_PUBLIC;\n\t\tif (this_ptr && (closure->func.common.fn_flags & ZEND_ACC_STATIC) == 0) {\n\t\t\tclosure->this_ptr = this_ptr;\n\t\t\tZ_ADDREF_P(this_ptr);\n\t\t} else {\n\t\t\tclosure->func.common.fn_flags |= ZEND_ACC_STATIC;\n\t\t\tclosure->this_ptr = NULL;\n\t\t}\n\t} else {\n\t\tclosure->this_ptr = NULL;\n\t}\n}",
    "start": 401,
    "end": 454,
    "fix": "ZEND_API void zend_create_closure(zval *res, zend_function *func, zend_class_entry *scope, zval *this_ptr TSRMLS_DC) /* {{{ */\n{\n\tzend_closure *closure;\n\n\tobject_init_ex(res, zend_ce_closure);\n\n\tclosure = (zend_closure *)zend_object_store_get_object(res TSRMLS_CC);\n\n\tclosure->func = *func;\n\tclosure->func.common.prototype = NULL;\n\n\tif (closure->func.type == ZEND_USER_FUNCTION) {\n\t\tif (closure->func.op_array.static_variables) {\n\t\t\tHashTable *static_variables = closure->func.op_array.static_variables;\n\n\t\t\tALLOC_HASHTABLE(closure->func.op_array.static_variables);\n\t\t\tzend_hash_init(closure->func.op_array.static_variables, zend_hash_num_elements(static_variables), NULL, ZVAL_PTR_DTOR, 0);\n\t\t\tzend_hash_apply_with_arguments(static_variables TSRMLS_CC, (apply_func_args_t)zval_copy_static_var, 1, closure->func.op_array.static_variables);\n\t\t}\n\t\tclosure->func.op_array.run_time_cache = NULL;\n\t\t(*closure->func.op_array.refcount)++;\n\t} else {\n\t\t/* verify that we aren't binding internal function to a wrong scope */\n\t\tif(func->common.scope != NULL) {\n\t\t\tif(scope && !instanceof_function(scope, func->common.scope TSRMLS_CC)) {\n\t\t\t\tzend_error(E_WARNING, \"Cannot bind function %s::%s to scope class %s\", func->common.scope->name, func->common.function_name, scope->name);\n\t\t\t\tscope = NULL;\n\t\t\t}\n\t\t\tif(scope && this_ptr && (func->common.fn_flags & ZEND_ACC_STATIC) == 0 && \n\t\t\t\t\t!instanceof_function(Z_OBJCE_P(this_ptr), closure->func.common.scope TSRMLS_CC)) {\n\t\t\t\tzend_error(E_WARNING, \"Cannot bind function %s::%s to object of class %s\", func->common.scope->name, func->common.function_name, Z_OBJCE_P(this_ptr)->name);\n\t\t\t\tscope = NULL;\n\t\t\t\tthis_ptr = NULL;\n\t\t\t}\n\t\t} else {\n\t\t\t/* if it's a free function, we won't set scope & this since they're meaningless */\n\t\t\tthis_ptr = NULL;\n\t\t\tscope = NULL;\n\t\t}\n\t}\n\n\tclosure->func.common.scope = scope;\n\tif (scope) {\n\t\tclosure->func.common.fn_flags |= ZEND_ACC_PUBLIC;\n\t\tif (this_ptr && (closure->func.common.fn_flags & ZEND_ACC_STATIC) == 0) {\n\t\t\tclosure->this_ptr = this_ptr;\n\t\t\tZ_ADDREF_P(this_ptr);\n\t\t} else {\n\t\t\tclosure->func.common.fn_flags |= ZEND_ACC_STATIC;\n\t\t\tclosure->this_ptr = NULL;\n\t\t}\n\t} else {\n\t\tclosure->this_ptr = NULL;\n\t}\n}",
    "filename": "Zend/zend_closures.c"
  },
  "php_2011-05-13-db0c957f02-8ba00176f1": {
    "buggy": "static int zend_traits_copy_functions(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key)\n{\n\tHashTable* target;\n\tzend_trait_alias** aliases;\n\tHashTable* exclude_table;\n\tchar* lcname;\n\tunsigned int lcname_len;\n\tunsigned int fnname_len;\n\tzend_function fn_copy;\n\tvoid* dummy;\n\n\tsize_t i = 0;\n\ttarget = va_arg(args, HashTable*);\n\taliases = va_arg(args, zend_trait_alias**);\n\texclude_table = va_arg(args, HashTable*);\n  \n\tfnname_len = strlen(fn->common.function_name);\n\n\t/* apply aliases which are qualified with a class name, there should not be any ambiguity */\n\tif (aliases) {\n\t\twhile (aliases[i]) {\n\t\t\tif (!aliases[i]->trait_method->ce || (fn->common.scope == aliases[i]->trait_method->ce &&\n\t\t\t\t(zend_binary_strcasecmp(aliases[i]->trait_method->method_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t aliases[i]->trait_method->mname_len,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fn->common.function_name, fnname_len) == 0))) {\n\t\t\t\tif (aliases[i]->alias) {\n\t\t\t\t\tfn_copy = *fn;\n\t\t\t\t\tzend_traits_duplicate_function(&fn_copy, estrndup(aliases[i]->alias, aliases[i]->alias_len) TSRMLS_CC);\n\n\t\t\t\t\tif (aliases[i]->modifiers) { /* if it is 0, no modifieres has been changed */\n\t\t\t\t\t\tfn_copy.common.fn_flags = aliases[i]->modifiers;\n\t\t\t\t\t\tif (!(aliases[i]->modifiers & ZEND_ACC_PPP_MASK)) {\n\t\t\t\t\t\t\tfn_copy.common.fn_flags |= ZEND_ACC_PUBLIC;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlcname_len = aliases[i]->alias_len;\n\t\t\t\t\tlcname = zend_str_tolower_dup(aliases[i]->alias, lcname_len);\n\n\t\t\t\t\tif (zend_hash_add(target, lcname, lcname_len+1, &fn_copy, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\t\t\t\tzend_error(E_COMPILE_ERROR, \"Failed to add aliased trait method (%s) to the trait table. There is probably already a trait method with the same name\", fn_copy.common.function_name);\n\t\t\t\t\t}\n\t\t\t\t\t/* aliases[i]->function = fn_copy; */\n\t\t\t\t\tefree(lcname);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\n\tlcname = zend_str_tolower_dup(fn->common.function_name, fnname_len);\n\n\tif (zend_hash_find(exclude_table, lcname, fnname_len, &dummy) == FAILURE) {\n\t\t/* is not in hashtable, thus, function is not to be excluded */\n\t\tfn_copy = *fn;\n\t\tzend_traits_duplicate_function(&fn_copy, estrndup(fn->common.function_name, fnname_len) TSRMLS_CC);\n\n\t\t/* apply aliases which are not qualified by a class name, or which have not\n     alias name, just setting visibility */\n\t\tif (aliases) {\n\t\t\ti = 0;\n\t\t\twhile (aliases[i]) {\n\t\t\t\tif ((!aliases[i]->trait_method->ce || fn->common.scope == aliases[i]->trait_method->ce) &&\n\t\t\t\t\t(zend_binary_strcasecmp(aliases[i]->trait_method->method_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t aliases[i]->trait_method->mname_len,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fn->common.function_name, fnname_len) == 0)) {\n\t\t\t\t\tif (!aliases[i]->alias && aliases[i]->modifiers) { /* if it is 0, no modifieres has been changed */\n\t\t\t\t\t\tfn_copy.common.fn_flags = aliases[i]->modifiers;\n\t\t\t\t\t\tif (!(aliases[i]->modifiers & ZEND_ACC_PPP_MASK)) {\n\t\t\t\t\t\t\tfn_copy.common.fn_flags |= ZEND_ACC_PUBLIC;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif (zend_hash_add(target, lcname, fnname_len+1, &fn_copy, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Failed to add trait method (%s) to the trait table. There is probably already a trait method with the same name\", fn_copy.common.function_name);\n\t\t}\n\t}\n\n\tefree(lcname);\n\n\treturn ZEND_HASH_APPLY_KEEP;\n}",
    "start": 3644,
    "end": 3729,
    "fix": "static int zend_traits_copy_functions(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key)\n{\n\tHashTable* target;\n\tzend_trait_alias** aliases;\n\tHashTable* exclude_table;\n\tchar* lcname;\n\tunsigned int lcname_len;\n\tunsigned int fnname_len;\n\tzend_function fn_copy;\n\tvoid* dummy;\n\n\tsize_t i = 0;\n\ttarget = va_arg(args, HashTable*);\n\taliases = va_arg(args, zend_trait_alias**);\n\texclude_table = va_arg(args, HashTable*);\n  \n\tfnname_len = strlen(fn->common.function_name);\n\n\t/* apply aliases which are qualified with a class name, there should not be any ambiguity */\n\tif (aliases) {\n\t\twhile (aliases[i]) {\n      \n\t\t\tif (/* Scope unset or equal to the function we compare to */\n          (!aliases[i]->trait_method->ce || fn->common.scope == aliases[i]->trait_method->ce)\n          && /* and, the alias applies to fn */\n          (zend_binary_strcasecmp(aliases[i]->trait_method->method_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t aliases[i]->trait_method->mname_len,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t fn->common.function_name, fnname_len) == 0)) {\n\t\t\t\tif (aliases[i]->alias) {\n\t\t\t\t\tfn_copy = *fn;\n\t\t\t\t\tzend_traits_duplicate_function(&fn_copy, estrndup(aliases[i]->alias, aliases[i]->alias_len) TSRMLS_CC);\n\n\t\t\t\t\tif (aliases[i]->modifiers) { /* if it is 0, no modifieres has been changed */\n\t\t\t\t\t\tfn_copy.common.fn_flags = aliases[i]->modifiers;\n\t\t\t\t\t\tif (!(aliases[i]->modifiers & ZEND_ACC_PPP_MASK)) {\n\t\t\t\t\t\t\tfn_copy.common.fn_flags |= ZEND_ACC_PUBLIC;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlcname_len = aliases[i]->alias_len;\n\t\t\t\t\tlcname = zend_str_tolower_dup(aliases[i]->alias, lcname_len);\n\n\t\t\t\t\tif (zend_hash_add(target, lcname, lcname_len+1, &fn_copy, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\t\t\t\tzend_error(E_COMPILE_ERROR, \"Failed to add aliased trait method (%s) to the trait table. There is probably already a trait method with the same name\", fn_copy.common.function_name);\n\t\t\t\t\t}\n\t\t\t\t\t/* aliases[i]->function = fn_copy; */\n\t\t\t\t\tefree(lcname);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\n\tlcname = zend_str_tolower_dup(fn->common.function_name, fnname_len);\n\n\tif (zend_hash_find(exclude_table, lcname, fnname_len, &dummy) == FAILURE) {\n\t\t/* is not in hashtable, thus, function is not to be excluded */\n\t\tfn_copy = *fn;\n\t\tzend_traits_duplicate_function(&fn_copy, estrndup(fn->common.function_name, fnname_len) TSRMLS_CC);\n\n\t\t/* apply aliases which are not qualified by a class name, or which have not\n     alias name, just setting visibility */\n\t\tif (aliases) {\n\t\t\ti = 0;\n\t\t\twhile (aliases[i]) {\n\t\t\t\tif (/* Scope unset or equal to the function we compare to */\n            (!aliases[i]->trait_method->ce || fn->common.scope == aliases[i]->trait_method->ce)\n            && /* and, the alias applies to fn */\n\t\t\t\t\t  (zend_binary_strcasecmp(aliases[i]->trait_method->method_name,\n                                    aliases[i]->trait_method->mname_len,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  fn->common.function_name, fnname_len) == 0)) {\n\t\t\t\t\tif (!aliases[i]->alias && aliases[i]->modifiers) { /* if it is 0, no modifieres has been changed */\n\t\t\t\t\t\tfn_copy.common.fn_flags = aliases[i]->modifiers;\n\t\t\t\t\t\tif (!(aliases[i]->modifiers & ZEND_ACC_PPP_MASK)) {\n\t\t\t\t\t\t\tfn_copy.common.fn_flags |= ZEND_ACC_PUBLIC;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif (zend_hash_add(target, lcname, fnname_len+1, &fn_copy, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Failed to add trait method (%s) to the trait table. There is probably already a trait method with the same name\", fn_copy.common.function_name);\n\t\t}\n\t}\n\n\tefree(lcname);\n\n\treturn ZEND_HASH_APPLY_KEEP;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-05-17-453c954f8a-daecb2c0f4": {
    "buggy": "void zend_register_standard_constants(TSRMLS_D)\n{\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_ERROR\", E_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_RECOVERABLE_ERROR\", E_RECOVERABLE_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_WARNING\", E_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_PARSE\", E_PARSE, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_NOTICE\", E_NOTICE, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_STRICT\", E_STRICT, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_DEPRECATED\", E_DEPRECATED, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_CORE_ERROR\", E_CORE_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_CORE_WARNING\", E_CORE_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_COMPILE_ERROR\", E_COMPILE_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_COMPILE_WARNING\", E_COMPILE_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_ERROR\", E_USER_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_WARNING\", E_USER_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_NOTICE\", E_USER_NOTICE, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_DEPRECATED\", E_USER_DEPRECATED, CONST_PERSISTENT | CONST_CS);\n\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_ALL\", E_ALL, CONST_PERSISTENT | CONST_CS);\n\n\tREGISTER_MAIN_LONG_CONSTANT(\"DEBUG_BACKTRACE_PROVIDE_OBJECT\", DEBUG_BACKTRACE_PROVIDE_OBJECT, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"DEBUG_BACKTRACE_IGNORE_ARGS\", DEBUG_BACKTRACE_IGNORE_ARGS, CONST_PERSISTENT | CONST_CS);\n\t/* true/false constants */\n\t{\n\t\tzend_constant c;\n\t\n\t\tc.flags = CONST_PERSISTENT | CONST_CT_SUBST;\n\t\tc.module_number = 0;\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"TRUE\"));\n\t\tc.name_len = sizeof(\"TRUE\");\n\t\tc.value.value.lval = 1;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\t\t\n\t\tc.name = zend_strndup(ZEND_STRL(\"FALSE\"));\n\t\tc.name_len = sizeof(\"FALSE\");\n\t\tc.value.value.lval = 0;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"NULL\"));\n\t\tc.name_len = sizeof(\"NULL\");\n\t\tc.value.type = IS_NULL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\n\t\tc.flags = CONST_PERSISTENT | CONST_CS;\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"ZEND_THREAD_SAFE\"));\n\t\tc.name_len = sizeof(\"ZEND_THREAD_SAFE\");\n\t\tc.value.value.lval = ZTS_V;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"ZEND_DEBUG_BUILD\"));\n\t\tc.name_len = sizeof(\"ZEND_DEBUG_BUILD\");\n\t\tc.value.value.lval = ZEND_DEBUG;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\t}\n}",
    "start": 98,
    "end": 158,
    "fix": "void zend_register_standard_constants(TSRMLS_D)\n{\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_ERROR\", E_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_RECOVERABLE_ERROR\", E_RECOVERABLE_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_WARNING\", E_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_PARSE\", E_PARSE, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_NOTICE\", E_NOTICE, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_STRICT\", E_STRICT, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_DEPRECATED\", E_DEPRECATED, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_CORE_ERROR\", E_CORE_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_CORE_WARNING\", E_CORE_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_COMPILE_ERROR\", E_COMPILE_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_COMPILE_WARNING\", E_COMPILE_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_ERROR\", E_USER_ERROR, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_WARNING\", E_USER_WARNING, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_NOTICE\", E_USER_NOTICE, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_USER_DEPRECATED\", E_USER_DEPRECATED, CONST_PERSISTENT | CONST_CS);\n\n\tREGISTER_MAIN_LONG_CONSTANT(\"E_ALL\", E_ALL, CONST_PERSISTENT | CONST_CS);\n\n\tREGISTER_MAIN_LONG_CONSTANT(\"DEBUG_BACKTRACE_PROVIDE_OBJECT\", DEBUG_BACKTRACE_PROVIDE_OBJECT, CONST_PERSISTENT | CONST_CS);\n\tREGISTER_MAIN_LONG_CONSTANT(\"DEBUG_BACKTRACE_IGNORE_ARGS\", DEBUG_BACKTRACE_IGNORE_ARGS, CONST_PERSISTENT | CONST_CS);\n\t/* true/false constants */\n\t{\n\t\tzend_constant c;\n\t\n\t\tc.flags = CONST_PERSISTENT | CONST_CT_SUBST;\n\t\tc.module_number = 0;\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"TRUE\"));\n\t\tc.name_len = sizeof(\"TRUE\");\n\t\tc.value.value.lval = 1;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\t\t\n\t\tc.name = zend_strndup(ZEND_STRL(\"FALSE\"));\n\t\tc.name_len = sizeof(\"FALSE\");\n\t\tc.value.value.lval = 0;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"NULL\"));\n\t\tc.name_len = sizeof(\"NULL\");\n\t\tc.value.type = IS_NULL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\n\t\tc.flags = CONST_PERSISTENT;\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"ZEND_THREAD_SAFE\"));\n\t\tc.name_len = sizeof(\"ZEND_THREAD_SAFE\");\n\t\tc.value.value.lval = ZTS_V;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\n\t\tc.name = zend_strndup(ZEND_STRL(\"ZEND_DEBUG_BUILD\"));\n\t\tc.name_len = sizeof(\"ZEND_DEBUG_BUILD\");\n\t\tc.value.value.lval = ZEND_DEBUG;\n\t\tc.value.type = IS_BOOL;\n\t\tzend_register_constant(&c TSRMLS_CC);\n\t}\n}",
    "filename": "Zend/zend_constants.c"
  },
  "php_2011-05-24-b60f6774dc-1056c57fa9": {
    "buggy": "static void php_url_scanner_output_handler(char *output, uint output_len, char **handled_output, uint *handled_output_len, int mode TSRMLS_DC)\n{\n\tsize_t len;\n\n\tif (BG(url_adapt_state_ex).url_app.len != 0) {\n\t\t*handled_output = url_adapt_ext(output, output_len, &len, (zend_bool) (mode & (PHP_OUTPUT_HANDLER_END | PHP_OUTPUT_HANDLER_CONT | PHP_OUTPUT_HANDLER_FLUSH | PHP_OUTPUT_HANDLER_FINAL) ? 1 : 0) TSRMLS_CC);\n\t\tif (sizeof(uint) < sizeof(size_t)) {\n\t\t\tif (len > UINT_MAX)\n\t\t\t\tlen = UINT_MAX;\n\t\t}\n\t\t*handled_output_len = len;\n\t} else if (BG(url_adapt_state_ex).url_app.len == 0) {\n\t\turl_adapt_state_ex_t *ctx = &BG(url_adapt_state_ex);\n\t\tif (ctx->buf.len) {\n\t\t\tsmart_str_appendl(&ctx->result, ctx->buf.c, ctx->buf.len);\n\t\t\tsmart_str_appendl(&ctx->result, output, output_len);\n\n\t\t\t*handled_output = ctx->result.c;\n\t\t\t*handled_output_len = ctx->buf.len + output_len;\n\n\t\t\tctx->result.c = NULL;\n\t\t\tctx->result.len = 0;\n\t\t\tsmart_str_free(&ctx->buf);\n\t\t} else {\n\t\t\t*handled_output = NULL;\n\t\t}\n\t} else {\n\t\t*handled_output = NULL;\n\t}\n}",
    "start": 991,
    "end": 1020,
    "fix": "static void php_url_scanner_output_handler(char *output, uint output_len, char **handled_output, uint *handled_output_len, int mode TSRMLS_DC)\n{\n\tsize_t len;\n\n\tif (BG(url_adapt_state_ex).url_app.len != 0) {\n\t\t*handled_output = url_adapt_ext(output, output_len, &len, (zend_bool) (mode & (PHP_OUTPUT_HANDLER_END | PHP_OUTPUT_HANDLER_CONT | PHP_OUTPUT_HANDLER_FLUSH | PHP_OUTPUT_HANDLER_FINAL) ? 1 : 0) TSRMLS_CC);\n\t\tif (sizeof(uint) < sizeof(size_t)) {\n\t\t\tif (len > UINT_MAX)\n\t\t\t\tlen = UINT_MAX;\n\t\t}\n\t\t*handled_output_len = len;\n\t} else if (BG(url_adapt_state_ex).url_app.len == 0) {\n\t\turl_adapt_state_ex_t *ctx = &BG(url_adapt_state_ex);\n\t\tif (ctx->buf.len) {\n\t\t\tsmart_str_appendl(&ctx->result, ctx->buf.c, ctx->buf.len);\n\t\t\tsmart_str_appendl(&ctx->result, output, output_len);\n\n\t\t\t*handled_output = ctx->result.c;\n\t\t\t*handled_output_len = ctx->buf.len + output_len;\n\n\t\t\tctx->result.c = NULL;\n\t\t\tctx->result.len = 0;\n\t\t\tsmart_str_free(&ctx->buf);\n\t\t} else {\n\t\t\t*handled_output = estrndup(output, *handled_output_len = output_len);\n\t\t}\n\t} else {\n\t\t*handled_output = NULL;\n\t}\n}",
    "filename": "ext/standard/url_scanner_ex.c"
  },
  "php_2011-10-15-0a1cc5f01c-05c5c8958e": {
    "buggy": "void zend_do_pass_param(znode *param, zend_uchar op, int offset TSRMLS_DC) /* {{{ */\n{\n\tzend_op *opline;\n\tint original_op=op;\n\tzend_function **function_ptr_ptr, *function_ptr;\n\tint send_by_reference;\n\tint send_function = 0;\n\n\tzend_stack_top(&CG(function_call_stack), (void **) &function_ptr_ptr);\n\tfunction_ptr = *function_ptr_ptr;\n\n\tif (original_op == ZEND_SEND_REF) {\n\t\tif (function_ptr &&\n\t\t    function_ptr->common.function_name &&\n\t\t    function_ptr->common.type == ZEND_USER_FUNCTION &&\n\t\t    !ARG_SHOULD_BE_SENT_BY_REF(function_ptr, (zend_uint) offset)) {\n\t\t\tzend_error(E_COMPILE_ERROR,\n\t\t\t\t\t\t\"Call-time pass-by-reference has been removed; \"\n\t\t\t\t\t\t\"If you would like to pass argument by reference, modify the declaration of %s().\",\n\t\t\t\t\t\tfunction_ptr->common.function_name);\n\t\t} else {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Call-time pass-by-reference has been removed\");\n\t\t}\n\t\treturn;\n\t} \n\t\n\tif (function_ptr) {\n\t\tif (ARG_MAY_BE_SENT_BY_REF(function_ptr, (zend_uint) offset)) {\n\t\t\tif (param->op_type & (IS_VAR|IS_CV)) {\n\t\t\t\tsend_by_reference = 1;\n\t\t\t\tif (op == ZEND_SEND_VAR && zend_is_function_or_method_call(param)) {\n\t\t\t\t\t/* Method call */\n\t\t\t\t\top = ZEND_SEND_VAR_NO_REF;\n\t\t\t\t\tsend_function = ZEND_ARG_SEND_FUNCTION | ZEND_ARG_SEND_SILENT;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\top = ZEND_SEND_VAL;\n\t\t\t\tsend_by_reference = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tsend_by_reference = ARG_SHOULD_BE_SENT_BY_REF(function_ptr, (zend_uint) offset) ? ZEND_ARG_SEND_BY_REF : 0;\n\t\t}\n\t} else {\n\t\tsend_by_reference = 0;\n\t}\n\n\tif (op == ZEND_SEND_VAR && zend_is_function_or_method_call(param)) {\n\t\t/* Method call */\n\t\top = ZEND_SEND_VAR_NO_REF;\n\t\tsend_function = ZEND_ARG_SEND_FUNCTION;\n\t} else if (op == ZEND_SEND_VAL && (param->op_type & (IS_VAR|IS_CV))) {\n\t\top = ZEND_SEND_VAR_NO_REF;\n\t}\n\n\tif (op!=ZEND_SEND_VAR_NO_REF && send_by_reference==ZEND_ARG_SEND_BY_REF) {\n\t\t/* change to passing by reference */\n\t\tswitch (param->op_type) {\n\t\t\tcase IS_VAR:\n\t\t\tcase IS_CV:\n\t\t\t\top = ZEND_SEND_REF;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Only variables can be passed by reference\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (original_op == ZEND_SEND_VAR) {\n\t\tswitch (op) {\n\t\t\tcase ZEND_SEND_VAR_NO_REF:\n\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_R, 0 TSRMLS_CC);\n\t\t\t\tbreak;\n\t\t\tcase ZEND_SEND_VAR:\n\t\t\t\tif (function_ptr) {\n\t\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_R, 0 TSRMLS_CC);\n\t\t\t\t} else {\n\t\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_FUNC_ARG, offset TSRMLS_CC);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ZEND_SEND_REF:\n\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_W, 0 TSRMLS_CC);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\topline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\n\tif (op == ZEND_SEND_VAR_NO_REF) {\n\t\tif (function_ptr) {\n\t\t\topline->extended_value = ZEND_ARG_COMPILE_TIME_BOUND | send_by_reference | send_function;\n\t\t} else {\n\t\t\topline->extended_value = send_function;\n\t\t}\n\t} else {\n\t\tif (function_ptr) {\n\t\t\topline->extended_value = ZEND_DO_FCALL;\n\t\t} else {\n\t\t\topline->extended_value = ZEND_DO_FCALL_BY_NAME;\n\t\t}\n\t}\n\topline->opcode = op;\n\tSET_NODE(opline->op1, param);\n\topline->op2.opline_num = offset;\n\tSET_UNUSED(opline->op2);\n}",
    "start": 2462,
    "end": 2566,
    "fix": "void zend_do_pass_param(znode *param, zend_uchar op, int offset TSRMLS_DC) /* {{{ */\n{\n\tzend_op *opline;\n\tint original_op=op;\n\tzend_function **function_ptr_ptr, *function_ptr;\n\tint send_by_reference;\n\tint send_function = 0;\n\n\tzend_stack_top(&CG(function_call_stack), (void **) &function_ptr_ptr);\n\tfunction_ptr = *function_ptr_ptr;\n\n\tif (original_op == ZEND_SEND_REF) {\n\t\tif (function_ptr &&\n\t\t    function_ptr->common.function_name &&\n\t\t    function_ptr->common.type == ZEND_USER_FUNCTION &&\n\t\t    !ARG_SHOULD_BE_SENT_BY_REF(function_ptr, (zend_uint) offset)) {\n\t\t\tzend_error(E_COMPILE_ERROR,\n\t\t\t\t\t\t\"Call-time pass-by-reference has been removed; \"\n\t\t\t\t\t\t\"If you would like to pass argument by reference, modify the declaration of %s().\",\n\t\t\t\t\t\tfunction_ptr->common.function_name);\n\t\t} else {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Call-time pass-by-reference has been removed\");\n\t\t}\n\t\treturn;\n\t} \n\t\n\tif (function_ptr) {\n\t\tif (ARG_MAY_BE_SENT_BY_REF(function_ptr, (zend_uint) offset)) {\n\t\t\tif (param->op_type & (IS_VAR|IS_CV) && original_op != ZEND_SEND_VAL) {\n\t\t\t\tsend_by_reference = 1;\n\t\t\t\tif (op == ZEND_SEND_VAR && zend_is_function_or_method_call(param)) {\n\t\t\t\t\t/* Method call */\n\t\t\t\t\top = ZEND_SEND_VAR_NO_REF;\n\t\t\t\t\tsend_function = ZEND_ARG_SEND_FUNCTION | ZEND_ARG_SEND_SILENT;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\top = ZEND_SEND_VAL;\n\t\t\t\tsend_by_reference = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tsend_by_reference = ARG_SHOULD_BE_SENT_BY_REF(function_ptr, (zend_uint) offset) ? ZEND_ARG_SEND_BY_REF : 0;\n\t\t}\n\t} else {\n\t\tsend_by_reference = 0;\n\t}\n\n\tif (op == ZEND_SEND_VAR && zend_is_function_or_method_call(param)) {\n\t\t/* Method call */\n\t\top = ZEND_SEND_VAR_NO_REF;\n\t\tsend_function = ZEND_ARG_SEND_FUNCTION;\n\t} else if (op == ZEND_SEND_VAL && (param->op_type & (IS_VAR|IS_CV))) {\n\t\top = ZEND_SEND_VAR_NO_REF;\n\t}\n\n\tif (op!=ZEND_SEND_VAR_NO_REF && send_by_reference==ZEND_ARG_SEND_BY_REF) {\n\t\t/* change to passing by reference */\n\t\tswitch (param->op_type) {\n\t\t\tcase IS_VAR:\n\t\t\tcase IS_CV:\n\t\t\t\top = ZEND_SEND_REF;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Only variables can be passed by reference\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (original_op == ZEND_SEND_VAR) {\n\t\tswitch (op) {\n\t\t\tcase ZEND_SEND_VAR_NO_REF:\n\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_R, 0 TSRMLS_CC);\n\t\t\t\tbreak;\n\t\t\tcase ZEND_SEND_VAR:\n\t\t\t\tif (function_ptr) {\n\t\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_R, 0 TSRMLS_CC);\n\t\t\t\t} else {\n\t\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_FUNC_ARG, offset TSRMLS_CC);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ZEND_SEND_REF:\n\t\t\t\tzend_do_end_variable_parse(param, BP_VAR_W, 0 TSRMLS_CC);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\topline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\n\tif (op == ZEND_SEND_VAR_NO_REF) {\n\t\tif (function_ptr) {\n\t\t\topline->extended_value = ZEND_ARG_COMPILE_TIME_BOUND | send_by_reference | send_function;\n\t\t} else {\n\t\t\topline->extended_value = send_function;\n\t\t}\n\t} else {\n\t\tif (function_ptr) {\n\t\t\topline->extended_value = ZEND_DO_FCALL;\n\t\t} else {\n\t\t\topline->extended_value = ZEND_DO_FCALL_BY_NAME;\n\t\t}\n\t}\n\topline->opcode = op;\n\tSET_NODE(opline->op1, param);\n\topline->op2.opline_num = offset;\n\tSET_UNUSED(opline->op2);\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-10-16-1f78177e2b-d4ae4e79db": {
    "buggy": "static void json_encode_array(smart_str *buf, zval **val, int options TSRMLS_DC) /* {{{ */\n{\n\tint i, r;\n\tHashTable *myht;\n\n\tif (Z_TYPE_PP(val) == IS_ARRAY) {\n\t\tmyht = HASH_OF(*val);\n\t\tr = (options & PHP_JSON_FORCE_OBJECT) ? PHP_JSON_OUTPUT_OBJECT : json_determine_array_type(val TSRMLS_CC);\n\t} else {\n\t\tmyht = Z_OBJPROP_PP(val);\n\t\tr = PHP_JSON_OUTPUT_OBJECT;\n\t}\n\n\tif (myht && myht->nApplyCount > 1) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"recursion detected\");\n\t\tsmart_str_appendl(buf, \"null\", 4);\n\t\treturn;\n\t}\n\n\tif (r == PHP_JSON_OUTPUT_ARRAY) {\n\t\tsmart_str_appendc(buf, '[');\n\t} else {\n\t\tsmart_str_appendc(buf, '{');\n\t}\n\n\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t++JSON_G(encoder_depth);\n\n\ti = myht ? zend_hash_num_elements(myht) : 0;\n\n\tif (i > 0)\n\t{\n\t\tchar *key;\n\t\tzval **data;\n\t\tulong index;\n\t\tuint key_len;\n\t\tHashPosition pos;\n\t\tHashTable *tmp_ht;\n\t\tint need_comma = 0;\n\n\t\tzend_hash_internal_pointer_reset_ex(myht, &pos);\n\t\tfor (;; zend_hash_move_forward_ex(myht, &pos)) {\n\t\t\ti = zend_hash_get_current_key_ex(myht, &key, &key_len, &index, 0, &pos);\n\t\t\tif (i == HASH_KEY_NON_EXISTANT)\n\t\t\t\tbreak;\n\n\t\t\tif (zend_hash_get_current_data_ex(myht, (void **) &data, &pos) == SUCCESS) {\n\t\t\t\ttmp_ht = HASH_OF(*data);\n\t\t\t\tif (tmp_ht) {\n\t\t\t\t\ttmp_ht->nApplyCount++;\n\t\t\t\t}\n\n\t\t\t\tif (r == PHP_JSON_OUTPUT_ARRAY) {\n\t\t\t\t\tif (need_comma) {\n\t\t\t\t\t\tsmart_str_appendc(buf, ',');\n\t\t\t\t\t\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tneed_comma = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\t\t\t\t\tphp_json_encode(buf, *data, options TSRMLS_CC);\n\t\t\t\t} else if (r == PHP_JSON_OUTPUT_OBJECT) {\n\t\t\t\t\tif (i == HASH_KEY_IS_STRING) {\n\t\t\t\t\t\tif (key[0] == '\\0' && Z_TYPE_PP(val) == IS_OBJECT) {\n\t\t\t\t\t\t\t/* Skip protected and private members. */\n\t\t\t\t\t\t\tif (tmp_ht) {\n\t\t\t\t\t\t\t\ttmp_ht->nApplyCount--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (need_comma) {\n\t\t\t\t\t\t\tsmart_str_appendc(buf, ',');\n\t\t\t\t\t\t\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tneed_comma = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\n\t\t\t\t\t\tjson_escape_string(buf, key, key_len - 1, options TSRMLS_CC);\n\t\t\t\t\t\tsmart_str_appendc(buf, ':');\n\n\t\t\t\t\t\tjson_pretty_print_char(buf, options, ' ' TSRMLS_CC);\n \n\t\t\t\t\t\tphp_json_encode(buf, *data, options TSRMLS_CC);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (need_comma) {\n\t\t\t\t\t\t\tsmart_str_appendc(buf, ',');\n\t\t\t\t\t\t\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tneed_comma = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\n\t\t\t\t\t\tsmart_str_appendc(buf, '\"');\n\t\t\t\t\t\tsmart_str_append_long(buf, (long) index);\n\t\t\t\t\t\tsmart_str_appendc(buf, '\"');\n\t\t\t\t\t\tsmart_str_appendc(buf, ':');\n\n\t\t\t\t\t\tjson_pretty_print_char(buf, options, ' ' TSRMLS_CC);\n \n\t\t\t\t\t\tphp_json_encode(buf, *data, options TSRMLS_CC);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (tmp_ht) {\n\t\t\t\t\ttmp_ht->nApplyCount--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t--JSON_G(encoder_depth);\n\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\n\tif (r == PHP_JSON_OUTPUT_ARRAY) {\n\t\tsmart_str_appendc(buf, ']');\n\t} else {\n\t\tsmart_str_appendc(buf, '}');\n\t}\n}",
    "start": 219,
    "end": 343,
    "fix": "static void json_encode_array(smart_str *buf, zval **val, int options TSRMLS_DC) /* {{{ */\n{\n\tint i, r;\n\tHashTable *myht;\n\n\tif (Z_TYPE_PP(val) == IS_ARRAY) {\n\t\tmyht = HASH_OF(*val);\n\t\tr = (options & PHP_JSON_FORCE_OBJECT) ? PHP_JSON_OUTPUT_OBJECT : json_determine_array_type(val TSRMLS_CC);\n\t} else {\n\t\tmyht = Z_OBJPROP_PP(val);\n\t\tr = PHP_JSON_OUTPUT_OBJECT;\n\t}\n\n\tif (myht && myht->nApplyCount > 1) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"recursion detected\");\n\t\tsmart_str_appendl(buf, \"null\", 4);\n\t\treturn;\n\t}\n\n\tif (r == PHP_JSON_OUTPUT_ARRAY) {\n\t\tsmart_str_appendc(buf, '[');\n\t} else {\n\t\tsmart_str_appendc(buf, '{');\n\t}\n\n\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t++JSON_G(encoder_depth);\n\n\ti = myht ? zend_hash_num_elements(myht) : 0;\n\n\tif (i > 0)\n\t{\n\t\tchar *key;\n\t\tzval **data;\n\t\tulong index;\n\t\tuint key_len;\n\t\tHashPosition pos;\n\t\tHashTable *tmp_ht;\n\t\tint need_comma = 0;\n\n\t\tzend_hash_internal_pointer_reset_ex(myht, &pos);\n\t\tfor (;; zend_hash_move_forward_ex(myht, &pos)) {\n\t\t\ti = zend_hash_get_current_key_ex(myht, &key, &key_len, &index, 0, &pos);\n\t\t\tif (i == HASH_KEY_NON_EXISTANT)\n\t\t\t\tbreak;\n\n\t\t\tif (zend_hash_get_current_data_ex(myht, (void **) &data, &pos) == SUCCESS) {\n\t\t\t\ttmp_ht = HASH_OF(*data);\n\t\t\t\tif (tmp_ht) {\n\t\t\t\t\ttmp_ht->nApplyCount++;\n\t\t\t\t}\n\n\t\t\t\tif (r == PHP_JSON_OUTPUT_ARRAY) {\n\t\t\t\t\tif (need_comma) {\n\t\t\t\t\t\tsmart_str_appendc(buf, ',');\n\t\t\t\t\t\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tneed_comma = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\t\t\t\t\tphp_json_encode(buf, *data, options TSRMLS_CC);\n\t\t\t\t} else if (r == PHP_JSON_OUTPUT_OBJECT) {\n\t\t\t\t\tif (i == HASH_KEY_IS_STRING) {\n\t\t\t\t\t\tif (key[0] == '\\0' && Z_TYPE_PP(val) == IS_OBJECT) {\n\t\t\t\t\t\t\t/* Skip protected and private members. */\n\t\t\t\t\t\t\tif (tmp_ht) {\n\t\t\t\t\t\t\t\ttmp_ht->nApplyCount--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (need_comma) {\n\t\t\t\t\t\t\tsmart_str_appendc(buf, ',');\n\t\t\t\t\t\t\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tneed_comma = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\n\t\t\t\t\t\tjson_escape_string(buf, key, key_len - 1, options & ~PHP_JSON_NUMERIC_CHECK TSRMLS_CC);\n\t\t\t\t\t\tsmart_str_appendc(buf, ':');\n\n\t\t\t\t\t\tjson_pretty_print_char(buf, options, ' ' TSRMLS_CC);\n \n\t\t\t\t\t\tphp_json_encode(buf, *data, options TSRMLS_CC);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (need_comma) {\n\t\t\t\t\t\t\tsmart_str_appendc(buf, ',');\n\t\t\t\t\t\t\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tneed_comma = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\n\t\t\t\t\t\tsmart_str_appendc(buf, '\"');\n\t\t\t\t\t\tsmart_str_append_long(buf, (long) index);\n\t\t\t\t\t\tsmart_str_appendc(buf, '\"');\n\t\t\t\t\t\tsmart_str_appendc(buf, ':');\n\n\t\t\t\t\t\tjson_pretty_print_char(buf, options, ' ' TSRMLS_CC);\n \n\t\t\t\t\t\tphp_json_encode(buf, *data, options TSRMLS_CC);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (tmp_ht) {\n\t\t\t\t\ttmp_ht->nApplyCount--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t--JSON_G(encoder_depth);\n\tjson_pretty_print_char(buf, options, '\\n' TSRMLS_CC);\n\tjson_pretty_print_indent(buf, options TSRMLS_CC);\n\n\tif (r == PHP_JSON_OUTPUT_ARRAY) {\n\t\tsmart_str_appendc(buf, ']');\n\t} else {\n\t\tsmart_str_appendc(buf, '}');\n\t}\n}",
    "filename": "ext/json/json.c"
  },
  "php_2011-10-30-c1a4a36c14-5921e73a37": {
    "buggy": "static char * zend_get_function_declaration(zend_function *fptr TSRMLS_DC) /* {{{ */ \n{\n\tchar *offset, *buf;\n\tzend_uint length = 1024;\n\n\toffset = buf = (char *)emalloc(length * sizeof(char));\n\tif (fptr->op_array.fn_flags & ZEND_ACC_RETURN_REFERENCE) {\n\t\t*(offset++) = '&';\n\t\t*(offset++) = ' ';\n\t}\n\n\tif (fptr->common.scope) {\n\t\tmemcpy(offset, fptr->common.scope->name, fptr->common.scope->name_length);\n\t\toffset += fptr->common.scope->name_length;\n\t\t*(offset++) = ':';\n\t\t*(offset++) = ':';\n\t}\n\t\n\t{\n\t\tsize_t name_len = strlen(fptr->common.function_name);\n\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, name_len);\n\t\tmemcpy(offset, fptr->common.function_name, name_len);\n\t\toffset += name_len;\n\t}\n\n\t*(offset++) = '(';\n\tif (fptr->common.arg_info) {\n\t\tzend_uint i, required;\n\t\tzend_arg_info *arg_info = fptr->common.arg_info;\n\n\t\trequired = fptr->common.required_num_args;\n\t\tfor (i = 0; i < fptr->common.num_args;) {\n\t\t\tif (arg_info->class_name) {\n\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, arg_info->class_name_len);\n\t\t\t\tmemcpy(offset, arg_info->class_name, arg_info->class_name_len);\n\t\t\t\toffset += arg_info->class_name_len;\n\t\t\t\t*(offset++) = ' ';\n\t\t\t} else if (arg_info->type_hint) {\n\t\t\t\tzend_uint type_name_len;\n\t\t\t\tchar *type_name = zend_get_type_by_const(arg_info->type_hint);\n\t\t\t\ttype_name_len = strlen(type_name);\n\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, type_name_len);\n\t\t\t\tmemcpy(offset, type_name, type_name_len);\n\t\t\t\toffset += type_name_len;\n\t\t\t\t*(offset++) = ' ';\n\t\t\t}\n\t\t\t\t\n\t\t\tif (arg_info->pass_by_reference) {\n\t\t\t\t*(offset++) = '&';\n\t\t\t}\n\t\t\t*(offset++) = '$';\n\n\t\t\tif (arg_info->name) {\n\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, arg_info->name_len);\n\t\t\t\tmemcpy(offset, arg_info->name, arg_info->name_len);\n\t\t\t\toffset += arg_info->name_len;\n\t\t\t} else {\n\t\t\t\tzend_uint idx = i;\n\t\t\t\tmemcpy(offset, \"param\", 5);\n\t\t\t\toffset += 5;\n\t\t\t\tdo {\n\t\t\t\t\t*(offset++) = (char) (idx % 10) + '0';\n\t\t\t\t\tidx /= 10;\n\t\t\t\t} while (idx > 0);\n\t\t\t}\n\t\t\tif (i >= required) {\n\t\t\t\t*(offset++) = ' ';\n\t\t\t\t*(offset++) = '=';\n\t\t\t\t*(offset++) = ' ';\n\t\t\t\tif (fptr->type == ZEND_USER_FUNCTION) {\n\t\t\t\t\tzend_op *precv = NULL;\n\t\t\t\t\t{\n\t\t\t\t\t\tzend_uint idx  = i;\n\t\t\t\t\t\tzend_op *op = ((zend_op_array *)fptr)->opcodes;\n\t\t\t\t\t\tzend_op *end = op + ((zend_op_array *)fptr)->last;\n\n\t\t\t\t\t\t++idx;\n\t\t\t\t\t\twhile (op < end) {\n\t\t\t\t\t\t\tif ((op->opcode == ZEND_RECV || op->opcode == ZEND_RECV_INIT)\n\t\t\t\t\t\t\t\t\t&& op->op1.num == (long)idx)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprecv = op;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t++op;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (precv && precv->opcode == ZEND_RECV_INIT && precv->op2_type != IS_UNUSED) {\n\t\t\t\t\t\tzval *zv, zv_copy;\n\t\t\t\t\t\tint use_copy;\n\t\t\t\t\t\tALLOC_ZVAL(zv);\n\t\t\t\t\t\t*zv = *precv->op2.zv;\n\t\t\t\t\t\tzval_copy_ctor(zv);\n\t\t\t\t\t\tINIT_PZVAL(zv);\n\t\t\t\t\t\tzval_update_constant_ex(&zv, (void*)1, fptr->common.scope TSRMLS_CC);\n\t\t\t\t\t\tif (Z_TYPE_P(zv) == IS_BOOL) {\n\t\t\t\t\t\t\tif (Z_LVAL_P(zv)) {\n\t\t\t\t\t\t\t\tmemcpy(offset, \"true\", 4);\n\t\t\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmemcpy(offset, \"false\", 5);\n\t\t\t\t\t\t\t\toffset += 5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Z_TYPE_P(zv) == IS_NULL) {\n\t\t\t\t\t\t\tmemcpy(offset, \"NULL\", 4);\n\t\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\t} else if (Z_TYPE_P(zv) == IS_STRING) {\n\t\t\t\t\t\t\t*(offset++) = '\\'';\n\t\t\t\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, MIN(Z_STRLEN_P(zv), 10));\n\t\t\t\t\t\t\tmemcpy(offset, Z_STRVAL_P(zv), MIN(Z_STRLEN_P(zv), 10));\n\t\t\t\t\t\t\toffset += MIN(Z_STRLEN_P(zv), 10);\n\t\t\t\t\t\t\tif (Z_STRLEN_P(zv) > 10) {\n\t\t\t\t\t\t\t\t*(offset++) = '.';\n\t\t\t\t\t\t\t\t*(offset++) = '.';\n\t\t\t\t\t\t\t\t*(offset++) = '.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t*(offset++) = '\\'';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tzend_make_printable_zval(zv, &zv_copy, &use_copy);\n\t\t\t\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, Z_STRLEN(zv_copy));\n\t\t\t\t\t\t\tmemcpy(offset, Z_STRVAL(zv_copy), Z_STRLEN(zv_copy));\n\t\t\t\t\t\t\toffset += Z_STRLEN(zv_copy);\n\t\t\t\t\t\t\tif (use_copy) {\n\t\t\t\t\t\t\t\tzval_dtor(&zv_copy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tzval_ptr_dtor(&zv);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmemcpy(offset, \"NULL\", 4);\n\t\t\t\t\toffset += 4;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (++i < fptr->common.num_args) {\n\t\t\t\t*(offset++) = ',';\n\t\t\t\t*(offset++) = ' ';\n\t\t\t}\n\t\t\targ_info++;\n\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, 23);\n\t\t}\n\t}\n\t*(offset++) = ')';\n\t*offset = '\\0';\n\n\treturn buf;\n} ",
    "start": 3020,
    "end": 3165,
    "fix": "static char * zend_get_function_declaration(zend_function *fptr TSRMLS_DC) /* {{{ */ \n{\n\tchar *offset, *buf;\n\tzend_uint length = 1024;\n\n\toffset = buf = (char *)emalloc(length * sizeof(char));\n\tif (fptr->op_array.fn_flags & ZEND_ACC_RETURN_REFERENCE) {\n\t\t*(offset++) = '&';\n\t\t*(offset++) = ' ';\n\t}\n\n\tif (fptr->common.scope) {\n\t\tmemcpy(offset, fptr->common.scope->name, fptr->common.scope->name_length);\n\t\toffset += fptr->common.scope->name_length;\n\t\t*(offset++) = ':';\n\t\t*(offset++) = ':';\n\t}\n\t\n\t{\n\t\tsize_t name_len = strlen(fptr->common.function_name);\n\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, name_len);\n\t\tmemcpy(offset, fptr->common.function_name, name_len);\n\t\toffset += name_len;\n\t}\n\n\t*(offset++) = '(';\n\tif (fptr->common.arg_info) {\n\t\tzend_uint i, required;\n\t\tzend_arg_info *arg_info = fptr->common.arg_info;\n\n\t\trequired = fptr->common.required_num_args;\n\t\tfor (i = 0; i < fptr->common.num_args;) {\n\t\t\tif (arg_info->class_name) {\n\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, arg_info->class_name_len);\n\t\t\t\tmemcpy(offset, arg_info->class_name, arg_info->class_name_len);\n\t\t\t\toffset += arg_info->class_name_len;\n\t\t\t\t*(offset++) = ' ';\n\t\t\t} else if (arg_info->type_hint) {\n\t\t\t\tzend_uint type_name_len;\n\t\t\t\tchar *type_name = zend_get_type_by_const(arg_info->type_hint);\n\t\t\t\ttype_name_len = strlen(type_name);\n\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, type_name_len);\n\t\t\t\tmemcpy(offset, type_name, type_name_len);\n\t\t\t\toffset += type_name_len;\n\t\t\t\t*(offset++) = ' ';\n\t\t\t}\n\t\t\t\t\n\t\t\tif (arg_info->pass_by_reference) {\n\t\t\t\t*(offset++) = '&';\n\t\t\t}\n\t\t\t*(offset++) = '$';\n\n\t\t\tif (arg_info->name) {\n\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, arg_info->name_len);\n\t\t\t\tmemcpy(offset, arg_info->name, arg_info->name_len);\n\t\t\t\toffset += arg_info->name_len;\n\t\t\t} else {\n\t\t\t\tzend_uint idx = i;\n\t\t\t\tmemcpy(offset, \"param\", 5);\n\t\t\t\toffset += 5;\n\t\t\t\tdo {\n\t\t\t\t\t*(offset++) = (char) (idx % 10) + '0';\n\t\t\t\t\tidx /= 10;\n\t\t\t\t} while (idx > 0);\n\t\t\t}\n\t\t\tif (i >= required) {\n\t\t\t\t*(offset++) = ' ';\n\t\t\t\t*(offset++) = '=';\n\t\t\t\t*(offset++) = ' ';\n\t\t\t\tif (fptr->type == ZEND_USER_FUNCTION) {\n\t\t\t\t\tzend_op *precv = NULL;\n\t\t\t\t\t{\n\t\t\t\t\t\tzend_uint idx  = i;\n\t\t\t\t\t\tzend_op *op = ((zend_op_array *)fptr)->opcodes;\n\t\t\t\t\t\tzend_op *end = op + ((zend_op_array *)fptr)->last;\n\n\t\t\t\t\t\t++idx;\n\t\t\t\t\t\twhile (op < end) {\n\t\t\t\t\t\t\tif ((op->opcode == ZEND_RECV || op->opcode == ZEND_RECV_INIT)\n\t\t\t\t\t\t\t\t\t&& op->op1.num == (long)idx)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprecv = op;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t++op;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (precv && precv->opcode == ZEND_RECV_INIT && precv->op2_type != IS_UNUSED) {\n\t\t\t\t\t\tzval *zv, zv_copy;\n\t\t\t\t\t\tint use_copy;\n\t\t\t\t\t\tALLOC_ZVAL(zv);\n\t\t\t\t\t\t*zv = *precv->op2.zv;\n\t\t\t\t\t\tzval_copy_ctor(zv);\n\t\t\t\t\t\tINIT_PZVAL(zv);\n\t\t\t\t\t\tzval_update_constant_ex(&zv, (void*)1, fptr->common.scope TSRMLS_CC);\n\t\t\t\t\t\tif (Z_TYPE_P(zv) == IS_BOOL) {\n\t\t\t\t\t\t\tif (Z_LVAL_P(zv)) {\n\t\t\t\t\t\t\t\tmemcpy(offset, \"true\", 4);\n\t\t\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmemcpy(offset, \"false\", 5);\n\t\t\t\t\t\t\t\toffset += 5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Z_TYPE_P(zv) == IS_NULL) {\n\t\t\t\t\t\t\tmemcpy(offset, \"NULL\", 4);\n\t\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\t} else if (Z_TYPE_P(zv) == IS_STRING) {\n\t\t\t\t\t\t\t*(offset++) = '\\'';\n\t\t\t\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, MIN(Z_STRLEN_P(zv), 10));\n\t\t\t\t\t\t\tmemcpy(offset, Z_STRVAL_P(zv), MIN(Z_STRLEN_P(zv), 10));\n\t\t\t\t\t\t\toffset += MIN(Z_STRLEN_P(zv), 10);\n\t\t\t\t\t\t\tif (Z_STRLEN_P(zv) > 10) {\n\t\t\t\t\t\t\t\t*(offset++) = '.';\n\t\t\t\t\t\t\t\t*(offset++) = '.';\n\t\t\t\t\t\t\t\t*(offset++) = '.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t*(offset++) = '\\'';\n\t\t\t\t\t\t} else if (Z_TYPE_P(zv) == IS_ARRAY) {\n\t\t\t\t\t\t\tmemcpy(offset, \"Array\", 5);\n\t\t\t\t\t\t\toffset += 5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tzend_make_printable_zval(zv, &zv_copy, &use_copy);\n\t\t\t\t\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, Z_STRLEN(zv_copy));\n\t\t\t\t\t\t\tmemcpy(offset, Z_STRVAL(zv_copy), Z_STRLEN(zv_copy));\n\t\t\t\t\t\t\toffset += Z_STRLEN(zv_copy);\n\t\t\t\t\t\t\tif (use_copy) {\n\t\t\t\t\t\t\t\tzval_dtor(&zv_copy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tzval_ptr_dtor(&zv);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmemcpy(offset, \"NULL\", 4);\n\t\t\t\t\toffset += 4;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (++i < fptr->common.num_args) {\n\t\t\t\t*(offset++) = ',';\n\t\t\t\t*(offset++) = ' ';\n\t\t\t}\n\t\t\targ_info++;\n\t\t\tREALLOC_BUF_IF_EXCEED(buf, offset, length, 32);\n\t\t}\n\t}\n\t*(offset++) = ')';\n\t*offset = '\\0';\n\n\treturn buf;\n} ",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-10-31-2e5d5e5ac6-b5f15ef561": {
    "buggy": "void zend_do_implements_trait(znode *trait_name TSRMLS_DC) /* {{{ */\n{\n\tzend_op *opline;\n\n\tswitch (zend_get_class_fetch_type(Z_STRVAL(trait_name->u.constant), Z_STRLEN(trait_name->u.constant))) {\n\t\tcase ZEND_FETCH_CLASS_SELF:\n\t\tcase ZEND_FETCH_CLASS_PARENT:\n\t\tcase ZEND_FETCH_CLASS_STATIC:\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use '%s' as trait name as it is reserved\", Z_STRVAL(trait_name->u.constant));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\topline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\topline->opcode = ZEND_ADD_TRAIT;\n\tSET_NODE(opline->op1, &CG(implementing_class));\n\tzend_resolve_class_name(trait_name, opline->extended_value, 0 TSRMLS_CC);\n\topline->extended_value = ZEND_FETCH_CLASS_TRAIT;\n\topline->op2_type = IS_CONST;\n\topline->op2.constant = zend_add_class_name_literal(CG(active_op_array), &trait_name->u.constant TSRMLS_CC);\n\tCG(active_class_entry)->num_traits++;\n}",
    "start": 5023,
    "end": 5045,
    "fix": "void zend_do_implements_trait(znode *trait_name TSRMLS_DC) /* {{{ */\n{\n\tzend_op *opline;\n  if ((CG(active_class_entry)->ce_flags & ZEND_ACC_INTERFACE)) {\n    zend_error(E_COMPILE_ERROR,\n               \"Cannot use traits inside of interfaces. %s is used in %s\",\n               Z_STRVAL(trait_name->u.constant), CG(active_class_entry)->name);\n  }\n\n\n\tswitch (zend_get_class_fetch_type(Z_STRVAL(trait_name->u.constant), Z_STRLEN(trait_name->u.constant))) {\n\t\tcase ZEND_FETCH_CLASS_SELF:\n\t\tcase ZEND_FETCH_CLASS_PARENT:\n\t\tcase ZEND_FETCH_CLASS_STATIC:\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use '%s' as trait name as it is reserved\", Z_STRVAL(trait_name->u.constant));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\topline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\topline->opcode = ZEND_ADD_TRAIT;\n\tSET_NODE(opline->op1, &CG(implementing_class));\n\tzend_resolve_class_name(trait_name, opline->extended_value, 0 TSRMLS_CC);\n\topline->extended_value = ZEND_FETCH_CLASS_TRAIT;\n\topline->op2_type = IS_CONST;\n\topline->op2.constant = zend_add_class_name_literal(CG(active_op_array), &trait_name->u.constant TSRMLS_CC);\n\tCG(active_class_entry)->num_traits++;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-10-31-c4eb5f2387-2e5d5e5ac6": {
    "buggy": "ZEND_API int _object_and_properties_init(zval *arg, zend_class_entry *class_type, HashTable *properties ZEND_FILE_LINE_DC TSRMLS_DC) /* {{{ */\n{\n\tzend_object *object;\n\n\tif (class_type->ce_flags & (ZEND_ACC_INTERFACE|ZEND_ACC_IMPLICIT_ABSTRACT_CLASS|ZEND_ACC_EXPLICIT_ABSTRACT_CLASS)) {\n\t\tchar *what = class_type->ce_flags & ZEND_ACC_INTERFACE ? \"interface\" : \"abstract class\";\n\t\tzend_error(E_ERROR, \"Cannot instantiate %s %s\", what, class_type->name);\n\t}\n\n\tzend_update_class_constants(class_type TSRMLS_CC);\n\n\tZ_TYPE_P(arg) = IS_OBJECT;\n\tif (class_type->create_object == NULL) {\n\t\tZ_OBJVAL_P(arg) = zend_objects_new(&object, class_type TSRMLS_CC);\n\t\tif (properties) {\n\t\t\tobject->properties = properties;\n\t\t\tobject->properties_table = NULL;\n\t\t} else {\n\t\t\tobject_properties_init(object, class_type);\n\t\t}\n\t} else {\n\t\tZ_OBJVAL_P(arg) = class_type->create_object(class_type TSRMLS_CC);\n\t}\n\treturn SUCCESS;\n}",
    "start": 1105,
    "end": 1129,
    "fix": "ZEND_API int _object_and_properties_init(zval *arg, zend_class_entry *class_type, HashTable *properties ZEND_FILE_LINE_DC TSRMLS_DC) /* {{{ */\n{\n\tzend_object *object;\n\n\tif (class_type->ce_flags & (ZEND_ACC_INTERFACE|ZEND_ACC_IMPLICIT_ABSTRACT_CLASS|ZEND_ACC_EXPLICIT_ABSTRACT_CLASS)) {\n\t\tchar *what =   (class_type->ce_flags & ZEND_ACC_INTERFACE)                ? \"interface\"\n\t\t\t\t\t :((class_type->ce_flags & ZEND_ACC_TRAIT) == ZEND_ACC_TRAIT) ? \"trait\"\n\t\t\t\t\t :                                                              \"abstract class\";\n\t\tzend_error(E_ERROR, \"Cannot instantiate %s %s\", what, class_type->name);\n\t}\n\n\tzend_update_class_constants(class_type TSRMLS_CC);\n\n\tZ_TYPE_P(arg) = IS_OBJECT;\n\tif (class_type->create_object == NULL) {\n\t\tZ_OBJVAL_P(arg) = zend_objects_new(&object, class_type TSRMLS_CC);\n\t\tif (properties) {\n\t\t\tobject->properties = properties;\n\t\t\tobject->properties_table = NULL;\n\t\t} else {\n\t\t\tobject_properties_init(object, class_type);\n\t\t}\n\t} else {\n\t\tZ_OBJVAL_P(arg) = class_type->create_object(class_type TSRMLS_CC);\n\t}\n\treturn SUCCESS;\n}",
    "filename": "Zend/zend_API.c"
  },
  "php_2011-11-01-ceac9dc490-9b0d73af1d": {
    "buggy": "static int zend_traits_merge_functions(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tsize_t current;\n\tsize_t i;\n\tsize_t count;\n\tHashTable* resulting_table;\n\tHashTable** function_tables;\n\tzend_class_entry *ce;\n\tsize_t collision = 0;\n\tsize_t abstract_solved = 0;\n\tzend_function* other_trait_fn;\n\n\tcurrent\t\t\t= va_arg(args, size_t);  /* index of current trait */\n\tcount\t\t\t= va_arg(args, size_t);\n\tresulting_table = va_arg(args, HashTable*);\n\tfunction_tables = va_arg(args, HashTable**);\n\tce\t\t\t\t= va_arg(args, zend_class_entry*);\n\n\tfor (i = 0; i < count; i++) {\n\t\tif (i == current) {\n\t\t\tcontinue; /* just skip this, cause its the table this function is applied on */\n\t\t}\n\n\t\tif (zend_hash_quick_find(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&other_trait_fn) == SUCCESS) {\n\t\t\t/* if it is an abstract method, there is no collision */\n\t\t\tif (other_trait_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* we can savely free and remove it from other table */\n\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t} else {\n\t\t\t\t/* if it is not an abstract method, there is still no collision */\n\t\t\t\t/* if fn is an abstract method */\n\t\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t\t/* just mark as solved, will be added if its own trait is processed */\n\t\t\t\t\tabstract_solved = 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* but else, we have a collision of non-abstract methods */\n\t\t\t\t\tcollision++;\n\t\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (collision) {\n\t\tzend_function* class_fn;\n\n\t\t/* make sure method is not already overridden in class */\n\t\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&class_fn) == FAILURE\n\t\t\t|| class_fn->common.scope != ce) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because there are collisions with other trait methods on %s\", fn->common.function_name, ce->name);\n\t\t}\n\n\t\tzend_function_dtor(fn);\n\t} else if (abstract_solved) {\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\t/* Add it to result function table */\n\t\tif (zend_hash_quick_add(resulting_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, fn, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating resulting trait method table\", fn->common.function_name);\n\t\t}\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "start": 3593,
    "end": 3658,
    "fix": "static int zend_traits_merge_functions(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tsize_t current;\n\tsize_t i;\n\tsize_t count;\n\tHashTable* resulting_table;\n\tHashTable** function_tables;\n\tzend_class_entry *ce;\n\tsize_t collision = 0;\n\tsize_t abstract_solved = 0;\n\tzend_function* other_trait_fn;\n\n\tcurrent\t\t\t= va_arg(args, size_t);  /* index of current trait */\n\tcount\t\t\t= va_arg(args, size_t);\n\tresulting_table = va_arg(args, HashTable*);\n\tfunction_tables = va_arg(args, HashTable**);\n\tce\t\t\t\t= va_arg(args, zend_class_entry*);\n\n\tfor (i = 0; i < count; i++) {\n\t\tif (i == current) {\n\t\t\tcontinue; /* just skip this, cause its the table this function is applied on */\n\t\t}\n\n\t\tif (zend_hash_quick_find(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&other_trait_fn) == SUCCESS) {\n\t\t\t/* if it is an abstract method, there is no collision */\n\t\t\tif (other_trait_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* Make sure they are compatible */\n\t\t\t\tdo_inheritance_check_on_method(fn, other_trait_fn TSRMLS_CC);\n\t\t\t\t\n\t\t\t\t/* we can savely free and remove it from other table */\n\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t} else {\n\t\t\t\t/* if it is not an abstract method, there is still no collision */\n\t\t\t\t/* if fn is an abstract method */\n\t\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t\t/* Make sure they are compatible */\n\t\t\t\t\tdo_inheritance_check_on_method(other_trait_fn, fn TSRMLS_CC);\n\t\t\t\t\t\n\t\t\t\t\t/* just mark as solved, will be added if its own trait is processed */\n\t\t\t\t\tabstract_solved = 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* but else, we have a collision of non-abstract methods */\n\t\t\t\t\tcollision++;\n\t\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (collision) {\n\t\tzend_function* class_fn;\n\n\t\t/* make sure method is not already overridden in class */\n\t\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&class_fn) == FAILURE\n\t\t\t|| class_fn->common.scope != ce) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because there are collisions with other trait methods on %s\", fn->common.function_name, ce->name);\n\t\t}\n\n\t\tzend_function_dtor(fn);\n\t} else if (abstract_solved) {\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\t/* Add it to result function table */\n\t\tif (zend_hash_quick_add(resulting_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, fn, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating resulting trait method table\", fn->common.function_name);\n\t\t}\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-01-d2881adcbc-4591498df7": {
    "buggy": "static int zend_traits_merge_functions_to_class(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\tint add = 0;\n\tzend_function* existing_fn;\n\tzend_function fn_copy, *fn_copy_p;\n\tzend_function* prototype = NULL;  /* is used to determine the prototype according to the inheritance chain */\n\n\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &existing_fn) == FAILURE) {\n\t\tadd = 1; /* not found */\n\t} else if (existing_fn->common.scope != ce) {\n\t\tadd = 1; /* or inherited from other class or interface */\n\t\t/* it is just a reference which was added to the subclass while doing the inheritance */\n\t\t/* so we can deleted now, and will add the overriding method afterwards */\n\n\t\t/* except, if we try to add an abstract function, then we should not delete the inherited one */\n\t\t/* delete inherited fn if the function to be added is not abstract */\n\t\tif ((fn->common.fn_flags & ZEND_ACC_ABSTRACT) == 0) {\n\t\t\tzend_hash_quick_del(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t}\n\t}\n\n\tif (add) {\n\t\tzend_function* parent_function;\n\t\tif (ce->parent && zend_hash_quick_find(&ce->parent->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &parent_function) != FAILURE) {\n\t\t\tprototype = parent_function; /* ->common.fn_flags |= ZEND_ACC_ABSTRACT; */\n\t\t\t\n\t\t\t/* we got that method in the parent class, and are going to override it,\n\t\t\t   except, if the trait is just asking to have an abstract method implemented. */\n\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* then we clean up an skip this method */\n\t\t\t\tzend_function_dtor(fn);\n\t\t\t\treturn ZEND_HASH_APPLY_REMOVE;\n\t\t\t}\n\t\t}\n\n\t\tfn->common.scope = ce;\n\t\tfn->common.prototype = prototype;\n\n\t\tif (prototype\n\t\t\t&& (prototype->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT\n\t\t\t\t|| prototype->common.fn_flags & ZEND_ACC_ABSTRACT)) {\n\t\t\tfn->common.fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t} else if (fn->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT) {\n\t\t\t/* remove ZEND_ACC_IMPLEMENTED_ABSTRACT flag, think it shouldn't be copied to class */\n\t\t\tfn->common.fn_flags = fn->common.fn_flags - ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t}\n\n\t\t/* check whether the trait method fullfills the inheritance requirements */\n\t\tif (prototype) {\n\t\t\tdo_inheritance_check_on_method(fn, prototype TSRMLS_CC);\n\t\t}\n\n\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tce->ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS;\n\t\t}\n\t\tif (fn->op_array.static_variables) {\n\t\t\tce->ce_flags |= ZEND_HAS_STATIC_IN_METHODS;\n\t\t}\n\t\tfn_copy = *fn;\n\t\tzend_traits_duplicate_function(&fn_copy, ce, estrdup(fn->common.function_name) TSRMLS_CC);\n\n\t\tif (zend_hash_quick_update(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, &fn_copy, sizeof(zend_function), (void**)&fn_copy_p)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating class method table\", hash_key->arKey);\n\t\t}\n\n\t\tzend_add_magic_methods(ce, hash_key->arKey, hash_key->nKeyLength, fn_copy_p TSRMLS_CC);\n\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\tzend_function_dtor(fn);\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "start": 3822,
    "end": 3896,
    "fix": "static int zend_traits_merge_functions_to_class(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\tint add = 0;\n\tzend_function* existing_fn;\n\tzend_function fn_copy, *fn_copy_p;\n\tzend_function* prototype = NULL;  /* is used to determine the prototype according to the inheritance chain */\n\n\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &existing_fn) == FAILURE) {\n\t\tadd = 1; /* not found */\n\t} else if (existing_fn->common.scope != ce) {\n\t\tadd = 1; /* or inherited from other class or interface */\n\t}\n\n\tif (add) {\n\t\tzend_function* parent_function;\n\t\tif (ce->parent && zend_hash_quick_find(&ce->parent->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &parent_function) != FAILURE) {\n\t\t\tprototype = parent_function; /* ->common.fn_flags |= ZEND_ACC_ABSTRACT; */\n\t\t\t\n\t\t\t/* we got that method in the parent class, and are going to override it,\n\t\t\t   except, if the trait is just asking to have an abstract method implemented. */\n\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* then we clean up an skip this method */\n\t\t\t\tzend_function_dtor(fn);\n\t\t\t\treturn ZEND_HASH_APPLY_REMOVE;\n\t\t\t}\n\t\t}\n\n\t\tfn->common.scope = ce;\n\t\tfn->common.prototype = prototype;\n\n\t\tif (prototype\n\t\t\t&& (prototype->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT\n\t\t\t\t|| prototype->common.fn_flags & ZEND_ACC_ABSTRACT)) {\n\t\t\tfn->common.fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t} else if (fn->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT) {\n\t\t\t/* remove ZEND_ACC_IMPLEMENTED_ABSTRACT flag, think it shouldn't be copied to class */\n\t\t\tfn->common.fn_flags = fn->common.fn_flags - ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t}\n\n\t\t/* check whether the trait method fullfills the inheritance requirements */\n\t\tif (prototype) {\n\t\t\tdo_inheritance_check_on_method(fn, prototype TSRMLS_CC);\n\t\t}\n\t\t/* one more thing: make sure we properly implement an abstract method */\n\t\tif (existing_fn && existing_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tdo_inheritance_check_on_method(fn, existing_fn TSRMLS_CC);\n\t\t}\n\n\t\t/* delete inherited fn if the function to be added is not abstract */\n\t\tif (existing_fn\n\t\t\t&& existing_fn->common.scope != ce\n\t\t\t&& (fn->common.fn_flags & ZEND_ACC_ABSTRACT) == 0) {\n\t\t\t/* it is just a reference which was added to the subclass while doing\n\t\t\t   the inheritance, so we can deleted now, and will add the overriding \n\t\t\t   method afterwards.\n\t\t\t   Except, if we try to add an abstract function, then we should not\n\t\t\t   delete the inherited one */\n\t\t\tzend_hash_quick_del(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t}\n\n\n\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tce->ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS;\n\t\t}\n\t\tif (fn->op_array.static_variables) {\n\t\t\tce->ce_flags |= ZEND_HAS_STATIC_IN_METHODS;\n\t\t}\n\t\tfn_copy = *fn;\n\t\tzend_traits_duplicate_function(&fn_copy, ce, estrdup(fn->common.function_name) TSRMLS_CC);\n\n\t\tif (zend_hash_quick_update(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, &fn_copy, sizeof(zend_function), (void**)&fn_copy_p)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating class method table\", hash_key->arKey);\n\t\t}\n\n\t\tzend_add_magic_methods(ce, hash_key->arKey, hash_key->nKeyLength, fn_copy_p TSRMLS_CC);\n\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\tzend_function_dtor(fn);\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-02-de50e98a07-8d520d6296": {
    "buggy": "static int zend_traits_merge_functions_to_class(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\tint add = 0;\n\tzend_function* existing_fn;\n\tzend_function fn_copy, *fn_copy_p;\n\tzend_function* prototype = NULL;  /* is used to determine the prototype according to the inheritance chain */\n\n\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &existing_fn) == FAILURE) {\n\t\tadd = 1; /* not found */\n\t} else if (existing_fn->common.scope != ce) {\n\t\tadd = 1; /* or inherited from other class or interface */\n\t}\n\n\tif (add) {\n\t\tzend_function* parent_function;\n\t\tif (ce->parent && zend_hash_quick_find(&ce->parent->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &parent_function) != FAILURE) {\n\t\t\tprototype = parent_function; /* ->common.fn_flags |= ZEND_ACC_ABSTRACT; */\n\t\t\t\n\t\t\t/* we got that method in the parent class, and are going to override it,\n\t\t\t   except, if the trait is just asking to have an abstract method implemented. */\n\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* then we clean up an skip this method */\n\t\t\t\tzend_function_dtor(fn);\n\t\t\t\treturn ZEND_HASH_APPLY_REMOVE;\n\t\t\t}\n\t\t}\n\n\t\tfn->common.scope = ce;\n\t\tfn->common.prototype = prototype;\n\n\t\tif (prototype\n\t\t\t&& (prototype->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT\n\t\t\t\t|| prototype->common.fn_flags & ZEND_ACC_ABSTRACT)) {\n\t\t\tfn->common.fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t} else if (fn->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT) {\n\t\t\t/* remove ZEND_ACC_IMPLEMENTED_ABSTRACT flag, think it shouldn't be copied to class */\n\t\t\tfn->common.fn_flags = fn->common.fn_flags - ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t}\n\n\t\t/* check whether the trait method fullfills the inheritance requirements */\n\t\tif (prototype) {\n\t\t\tdo_inheritance_check_on_method(fn, prototype TSRMLS_CC);\n\t\t}\n\t\t/* one more thing: make sure we properly implement an abstract method */\n\t\tif (existing_fn && existing_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tdo_inheritance_check_on_method(fn, existing_fn TSRMLS_CC);\n\t\t}\n\n\t\t/* delete inherited fn if the function to be added is not abstract */\n\t\tif (existing_fn\n\t\t\t&& existing_fn->common.scope != ce\n\t\t\t&& (fn->common.fn_flags & ZEND_ACC_ABSTRACT) == 0) {\n\t\t\t/* it is just a reference which was added to the subclass while doing\n\t\t\t   the inheritance, so we can deleted now, and will add the overriding \n\t\t\t   method afterwards.\n\t\t\t   Except, if we try to add an abstract function, then we should not\n\t\t\t   delete the inherited one */\n\t\t\tzend_hash_quick_del(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t}\n\n\n\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tce->ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS;\n\t\t}\n\t\tif (fn->op_array.static_variables) {\n\t\t\tce->ce_flags |= ZEND_HAS_STATIC_IN_METHODS;\n\t\t}\n\t\tfn_copy = *fn;\n\t\tzend_traits_duplicate_function(&fn_copy, ce, estrdup(fn->common.function_name) TSRMLS_CC);\n\n\t\tif (zend_hash_quick_update(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, &fn_copy, sizeof(zend_function), (void**)&fn_copy_p)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating class method table\", hash_key->arKey);\n\t\t}\n\n\t\tzend_add_magic_methods(ce, hash_key->arKey, hash_key->nKeyLength, fn_copy_p TSRMLS_CC);\n\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\tzend_function_dtor(fn);\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "start": 3822,
    "end": 3905,
    "fix": "static int zend_traits_merge_functions_to_class(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\tint add = 0;\n\tzend_function* existing_fn = NULL;\n\tzend_function fn_copy, *fn_copy_p;\n\tzend_function* prototype = NULL;  /* is used to determine the prototype according to the inheritance chain */\n\n\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &existing_fn) == FAILURE) {\n\t\tadd = 1; /* not found */\n\t} else if (existing_fn->common.scope != ce) {\n\t\tadd = 1; /* or inherited from other class or interface */\n\t}\n\n\tif (add) {\n\t\tzend_function* parent_function;\n\t\tif (ce->parent && zend_hash_quick_find(&ce->parent->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void**) &parent_function) != FAILURE) {\n\t\t\tprototype = parent_function; /* ->common.fn_flags |= ZEND_ACC_ABSTRACT; */\n\t\t\t\n\t\t\t/* we got that method in the parent class, and are going to override it,\n\t\t\t   except, if the trait is just asking to have an abstract method implemented. */\n\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* then we clean up an skip this method */\n\t\t\t\tzend_function_dtor(fn);\n\t\t\t\treturn ZEND_HASH_APPLY_REMOVE;\n\t\t\t}\n\t\t}\n\n\t\tfn->common.scope = ce;\n\t\tfn->common.prototype = prototype;\n\n\t\tif (prototype\n\t\t\t&& (prototype->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT\n\t\t\t\t|| prototype->common.fn_flags & ZEND_ACC_ABSTRACT)) {\n\t\t\tfn->common.fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t} else if (fn->common.fn_flags & ZEND_ACC_IMPLEMENTED_ABSTRACT) {\n\t\t\t/* remove ZEND_ACC_IMPLEMENTED_ABSTRACT flag, think it shouldn't be copied to class */\n\t\t\tfn->common.fn_flags = fn->common.fn_flags - ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\t}\n\n\t\t/* check whether the trait method fullfills the inheritance requirements */\n\t\tif (prototype) {\n\t\t\tdo_inheritance_check_on_method(fn, prototype TSRMLS_CC);\n\t\t}\n\t\t/* one more thing: make sure we properly implement an abstract method */\n\t\tif (existing_fn && existing_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tdo_inheritance_check_on_method(fn, existing_fn TSRMLS_CC);\n\t\t}\n\n\t\t/* delete inherited fn if the function to be added is not abstract */\n\t\tif (existing_fn\n\t\t\t&& existing_fn->common.scope != ce\n\t\t\t&& (fn->common.fn_flags & ZEND_ACC_ABSTRACT) == 0) {\n\t\t\t/* it is just a reference which was added to the subclass while doing\n\t\t\t   the inheritance, so we can deleted now, and will add the overriding \n\t\t\t   method afterwards.\n\t\t\t   Except, if we try to add an abstract function, then we should not\n\t\t\t   delete the inherited one */\n\t\t\tzend_hash_quick_del(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t}\n\n\n\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\tce->ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS;\n\t\t}\n\t\tif (fn->op_array.static_variables) {\n\t\t\tce->ce_flags |= ZEND_HAS_STATIC_IN_METHODS;\n\t\t}\n\t\tfn_copy = *fn;\n\t\tzend_traits_duplicate_function(&fn_copy, ce, estrdup(fn->common.function_name) TSRMLS_CC);\n\n\t\tif (zend_hash_quick_update(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, &fn_copy, sizeof(zend_function), (void**)&fn_copy_p)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating class method table\", hash_key->arKey);\n\t\t}\n\n\t\tzend_add_magic_methods(ce, hash_key->arKey, hash_key->nKeyLength, fn_copy_p TSRMLS_CC);\n\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\tzend_function_dtor(fn);\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-04-9da01ac6b6-7334dfd7eb": {
    "buggy": "static int zend_traits_merge_functions(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tsize_t current;\n\tsize_t i;\n\tsize_t count;\n\tHashTable* resulting_table;\n\tHashTable** function_tables;\n\tzend_class_entry *ce;\n\tsize_t collision = 0;\n\tsize_t abstract_solved = 0;\n\tzend_function* other_trait_fn;\n\n\tcurrent\t\t\t= va_arg(args, size_t);  /* index of current trait */\n\tcount\t\t\t= va_arg(args, size_t);\n\tresulting_table = va_arg(args, HashTable*);\n\tfunction_tables = va_arg(args, HashTable**);\n\tce\t\t\t\t= va_arg(args, zend_class_entry*);\n\n\tfor (i = 0; i < count; i++) {\n\t\tif (i == current) {\n\t\t\tcontinue; /* just skip this, cause its the table this function is applied on */\n\t\t}\n\n\t\tif (zend_hash_quick_find(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&other_trait_fn) == SUCCESS) {\n\t\t\t/* if it is an abstract method, there is no collision */\n\t\t\tif (other_trait_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* Make sure they are compatible */\n\t\t\t\tdo_inheritance_check_on_method(fn, other_trait_fn TSRMLS_CC);\n\t\t\t\t\n\t\t\t\t/* we can savely free and remove it from other table */\n\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t} else {\n\t\t\t\t/* if it is not an abstract method, there is still no collision */\n\t\t\t\t/* if fn is an abstract method */\n\t\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t\t/* Make sure they are compatible */\n\t\t\t\t\tdo_inheritance_check_on_method(other_trait_fn, fn TSRMLS_CC);\n\t\t\t\t\t\n\t\t\t\t\t/* just mark as solved, will be added if its own trait is processed */\n\t\t\t\t\tabstract_solved = 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* but else, we have a collision of non-abstract methods */\n\t\t\t\t\tcollision++;\n\t\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (collision) {\n\t\tzend_function* class_fn;\n\n\t\t/* make sure method is not already overridden in class */\n\t\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&class_fn) == FAILURE\n\t\t\t|| class_fn->common.scope != ce) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because there are collisions with other trait methods on %s\", fn->common.function_name, ce->name);\n\t\t}\n\n\t\tzend_function_dtor(fn);\n\t} else if (abstract_solved) {\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\t/* Add it to result function table */\n\t\tif (zend_hash_quick_add(resulting_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, fn, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating resulting trait method table\", fn->common.function_name);\n\t\t}\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "start": 3593,
    "end": 3664,
    "fix": "static int zend_traits_merge_functions(zend_function *fn TSRMLS_DC, int num_args, va_list args, zend_hash_key *hash_key) /* {{{ */\n{\n\tsize_t current;\n\tsize_t i;\n\tsize_t count;\n\tHashTable* resulting_table;\n\tHashTable** function_tables;\n\tzend_class_entry *ce;\n\tsize_t collision = 0;\n\tsize_t abstract_solved = 0;\n\tzend_function* other_trait_fn;\n\n\tcurrent\t\t\t= va_arg(args, size_t);  /* index of current trait */\n\tcount\t\t\t= va_arg(args, size_t);\n\tresulting_table = va_arg(args, HashTable*);\n\tfunction_tables = va_arg(args, HashTable**);\n\tce\t\t\t\t= va_arg(args, zend_class_entry*);\n\n\tfor (i = 0; i < count; i++) {\n\t\tif (i == current) {\n\t\t\tcontinue; /* just skip this, cause its the table this function is applied on */\n\t\t}\n\n\t\tif (zend_hash_quick_find(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&other_trait_fn) == SUCCESS) {\n\t\t\t/* if it is an abstract method, there is no collision */\n\t\t\tif (other_trait_fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t/* Make sure they are compatible */\n        if (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n          /* In case both are abstract, just check prototype, but need to do that in both directions */\n          if (   !zend_do_perform_implementation_check(fn, other_trait_fn TSRMLS_CC)\n              || !zend_do_perform_implementation_check(other_trait_fn, fn TSRMLS_CC)) {\n            zend_error(E_COMPILE_ERROR, \"Declaration of %s must be compatible with %s\", //ZEND_FN_SCOPE_NAME(fn), fn->common.function_name, //::%s()\n              zend_get_function_declaration(fn TSRMLS_CC),\n              zend_get_function_declaration(other_trait_fn TSRMLS_CC));\n          }\n        }\n        else {\n          /* otherwise, do the full check */\n          do_inheritance_check_on_method(fn, other_trait_fn TSRMLS_CC);\n        }\n\t\t\t\t\n\t\t\t\t/* we can savely free and remove it from other table */\n\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t} else {\n\t\t\t\t/* if it is not an abstract method, there is still no collision */\n\t\t\t\t/* if fn is an abstract method */\n\t\t\t\tif (fn->common.fn_flags & ZEND_ACC_ABSTRACT) {\n\t\t\t\t\t/* Make sure they are compatible.\n             Here, we already know other_trait_fn cannot be abstract, full check ok. */\n\t\t\t\t\tdo_inheritance_check_on_method(other_trait_fn, fn TSRMLS_CC);\n\t\t\t\t\t\n\t\t\t\t\t/* just mark as solved, will be added if its own trait is processed */\n\t\t\t\t\tabstract_solved = 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* but else, we have a collision of non-abstract methods */\n\t\t\t\t\tcollision++;\n\t\t\t\t\tzend_function_dtor(other_trait_fn);\n\t\t\t\t\tzend_hash_quick_del(function_tables[i], hash_key->arKey, hash_key->nKeyLength, hash_key->h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (collision) {\n\t\tzend_function* class_fn;\n\n\t\t/* make sure method is not already overridden in class */\n\t\tif (zend_hash_quick_find(&ce->function_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, (void **)&class_fn) == FAILURE\n\t\t\t|| class_fn->common.scope != ce) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because there are collisions with other trait methods on %s\", fn->common.function_name, ce->name);\n\t\t}\n\n\t\tzend_function_dtor(fn);\n\t} else if (abstract_solved) {\n\t\tzend_function_dtor(fn);\n\t} else {\n\t\t/* Add it to result function table */\n\t\tif (zend_hash_quick_add(resulting_table, hash_key->arKey, hash_key->nKeyLength, hash_key->h, fn, sizeof(zend_function), NULL)==FAILURE) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Trait method %s has not been applied, because failure occured during updating resulting trait method table\", fn->common.function_name);\n\t\t}\n\t}\n\n\treturn ZEND_HASH_APPLY_REMOVE;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-08-c3e56a152c-3598185a74": {
    "buggy": "static void is_a_impl(INTERNAL_FUNCTION_PARAMETERS, zend_bool only_subclass)\n{\n\tzval *obj;\n\tchar *class_name;\n\tint class_name_len;\n\tzend_class_entry *instance_ce;\n\tzend_class_entry **ce;\n\tzend_bool retval;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"zs\", &obj, &class_name, &class_name_len) == FAILURE) {\n\t\treturn;\n\t}\n\t\n\tif (Z_TYPE_P(obj) == IS_STRING) {\n\t\tzend_class_entry **the_ce;\n\t\tif (zend_lookup_class(Z_STRVAL_P(obj), Z_STRLEN_P(obj), &the_ce TSRMLS_CC) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tinstance_ce = *the_ce;\n\t} else if (Z_TYPE_P(obj) == IS_OBJECT && HAS_CLASS_ENTRY(*obj)) {\n\t\tinstance_ce = Z_OBJCE_P(obj);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (zend_lookup_class_ex(class_name, class_name_len, NULL, 0, &ce TSRMLS_CC) == FAILURE) {\n\t\tretval = 0;\n\t} else {\n\t\tif (only_subclass && instance_ce == *ce) {\n\t\t\tretval = 0;\n \t\t} else {\n\t\t\tretval = instanceof_function(instance_ce, *ce TSRMLS_CC);\n\t\t}\n\t}\n\n\tRETURN_BOOL(retval);\n}",
    "start": 835,
    "end": 871,
    "fix": "static void is_a_impl(INTERNAL_FUNCTION_PARAMETERS, zend_bool only_subclass)\n{\n\tzval *obj;\n\tchar *class_name;\n\tint class_name_len;\n\tzend_class_entry *instance_ce;\n\tzend_class_entry **ce;\n\tzend_bool allow_string = only_subclass;\n\tzend_bool retval;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"zs|b\", &obj, &class_name, &class_name_len, &allow_string) == FAILURE) {\n\t\treturn;\n\t}\n\t/*\n\t * allow_string - is_a default is no, is_subclass_of is yes. \n\t *   if it's allowed, then the autoloader will be called if the class does not exist.\n\t *   default behaviour is different, as 'is_a' used to be used to test mixed return values\n\t *   and there is no easy way to deprecate this.\n\t */\n\n\tif (allow_string && Z_TYPE_P(obj) == IS_STRING) {\n\t\tzend_class_entry **the_ce;\n\t\tif (zend_lookup_class(Z_STRVAL_P(obj), Z_STRLEN_P(obj), &the_ce TSRMLS_CC) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tinstance_ce = *the_ce;\n\t} else if (Z_TYPE_P(obj) == IS_OBJECT && HAS_CLASS_ENTRY(*obj)) {\n\t\tinstance_ce = Z_OBJCE_P(obj);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (zend_lookup_class_ex(class_name, class_name_len, NULL, 0, &ce TSRMLS_CC) == FAILURE) {\n\t\tretval = 0;\n\t} else {\n\t\tif (only_subclass && instance_ce == *ce) {\n\t\t\tretval = 0;\n \t\t} else {\n\t\t\tretval = instanceof_function(instance_ce, *ce TSRMLS_CC);\n\t\t}\n\t}\n\n\tRETURN_BOOL(retval);\n}",
    "filename": "Zend/zend_builtin_functions.c"
  },
  "php_2011-11-11-fcbfbea8d2-c1e510aea8": {
    "buggy": "FileInfoFunction(getPerms, FS_PERMS)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getInode()\n   Get file inode */\nFileInfoFunction(getInode, FS_INODE)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getSize()\n   Get file size */\nFileInfoFunction(getSize, FS_SIZE)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getOwner()\n   Get file owner */\nFileInfoFunction(getOwner, FS_OWNER)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getGroup()\n   Get file group */\nFileInfoFunction(getGroup, FS_GROUP)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getATime()\n   Get last access time of file */\nFileInfoFunction(getATime, FS_ATIME)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getMTime()\n   Get last modification time of file */\nFileInfoFunction(getMTime, FS_MTIME)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getCTime()\n   Get inode modification time of file */\nFileInfoFunction(getCTime, FS_CTIME)\n/* }}} */\n\n/* {{{ proto string SplFileInfo::getType()\n   Get file type */\nFileInfoFunction(getType, FS_TYPE)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isWritable()\n   Returns true if file can be written */\nFileInfoFunction(isWritable, FS_IS_W)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isReadable()\n   Returns true if file can be read */\nFileInfoFunction(isReadable, FS_IS_R)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isExecutable()\n   Returns true if file is executable */\nFileInfoFunction(isExecutable, FS_IS_X)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isFile()\n   Returns true if file is a regular file */\nFileInfoFunction(isFile, FS_IS_FILE)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isDir()\n   Returns true if file is directory */\nFileInfoFunction(isDir, FS_IS_DIR)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isLink()\n   Returns true if file is symbolic link */\nFileInfoFunction(isLink, FS_IS_LINK)\n/* }}} */\n\n/* {{{ proto string SplFileInfo::getLinkTarget() U\n   Return the target of a symbolic link */\nSPL_METHOD(SplFileInfo, getLinkTarget)\n{\n\tspl_filesystem_object *intern = (spl_filesystem_object*)zend_object_store_get_object(getThis() TSRMLS_CC);\n\tint ret;\n\tchar buff[MAXPATHLEN];\n\tzend_error_handling error_handling;\n\t\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tzend_replace_error_handling(EH_THROW, spl_ce_RuntimeException, &error_handling TSRMLS_CC);\n\n#if defined(PHP_WIN32) || HAVE_SYMLINK\n\tif (!IS_ABSOLUTE_PATH(intern->file_name, intern->file_name_len)) {\n\t\tchar expanded_path[MAXPATHLEN];\n\t\tif (!expand_filepath_with_mode(intern->file_name, expanded_path, NULL, 0, CWD_EXPAND  TSRMLS_CC)) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"No such file or directory\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tret = php_sys_readlink(expanded_path, buff, MAXPATHLEN - 1);\n\t} else {\n\t\tret = php_sys_readlink(intern->file_name, buff,  MAXPATHLEN-1);\n\t}\n#else\n\tret = -1; /* always fail if not implemented */\n#endif\n\n\tif (ret == -1) {\n\t\tzend_throw_exception_ex(spl_ce_RuntimeException, 0 TSRMLS_CC, \"Unable to read link %s, error: %s\", intern->file_name, strerror(errno));\n\t\tRETVAL_FALSE;\n\t} else {\n\t\t/* Append NULL to the end of the string */\n\t\tbuff[ret] = '\\0';\n\n\t\tRETVAL_STRINGL(buff, ret, 1);\n\t}\n\n\tzend_restore_error_handling(&error_handling TSRMLS_CC);\n}",
    "start": 1144,
    "end": 1258,
    "fix": "FileInfoFunction(getPerms, FS_PERMS)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getInode()\n   Get file inode */\nFileInfoFunction(getInode, FS_INODE)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getSize()\n   Get file size */\nFileInfoFunction(getSize, FS_SIZE)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getOwner()\n   Get file owner */\nFileInfoFunction(getOwner, FS_OWNER)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getGroup()\n   Get file group */\nFileInfoFunction(getGroup, FS_GROUP)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getATime()\n   Get last access time of file */\nFileInfoFunction(getATime, FS_ATIME)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getMTime()\n   Get last modification time of file */\nFileInfoFunction(getMTime, FS_MTIME)\n/* }}} */\n\n/* {{{ proto int SplFileInfo::getCTime()\n   Get inode modification time of file */\nFileInfoFunction(getCTime, FS_CTIME)\n/* }}} */\n\n/* {{{ proto string SplFileInfo::getType()\n   Get file type */\nFileInfoFunction(getType, FS_TYPE)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isWritable()\n   Returns true if file can be written */\nFileInfoFunction(isWritable, FS_IS_W)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isReadable()\n   Returns true if file can be read */\nFileInfoFunction(isReadable, FS_IS_R)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isExecutable()\n   Returns true if file is executable */\nFileInfoFunction(isExecutable, FS_IS_X)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isFile()\n   Returns true if file is a regular file */\nFileInfoFunction(isFile, FS_IS_FILE)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isDir()\n   Returns true if file is directory */\nFileInfoFunction(isDir, FS_IS_DIR)\n/* }}} */\n\n/* {{{ proto bool SplFileInfo::isLink()\n   Returns true if file is symbolic link */\nFileInfoFunction(isLink, FS_IS_LINK)\n/* }}} */\n\n/* {{{ proto string SplFileInfo::getLinkTarget() U\n   Return the target of a symbolic link */\nSPL_METHOD(SplFileInfo, getLinkTarget)\n{\n\tspl_filesystem_object *intern = (spl_filesystem_object*)zend_object_store_get_object(getThis() TSRMLS_CC);\n\tint ret;\n\tchar buff[MAXPATHLEN];\n\tzend_error_handling error_handling;\n\t\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tzend_replace_error_handling(EH_THROW, spl_ce_RuntimeException, &error_handling TSRMLS_CC);\n\n#if defined(PHP_WIN32) || HAVE_SYMLINK\n\tif (intern->file_name == NULL) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Empty filename\");\n\t\tRETURN_FALSE;\n\t} else if (!IS_ABSOLUTE_PATH(intern->file_name, intern->file_name_len)) {\n\t\tchar expanded_path[MAXPATHLEN];\n\t\tif (!expand_filepath_with_mode(intern->file_name, expanded_path, NULL, 0, CWD_EXPAND  TSRMLS_CC)) {\n\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"No such file or directory\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tret = php_sys_readlink(expanded_path, buff, MAXPATHLEN - 1);\n\t} else {\n\t\tret = php_sys_readlink(intern->file_name, buff,  MAXPATHLEN-1);\n\t}\n#else\n\tret = -1; /* always fail if not implemented */\n#endif\n\n\tif (ret == -1) {\n\t\tzend_throw_exception_ex(spl_ce_RuntimeException, 0 TSRMLS_CC, \"Unable to read link %s, error: %s\", intern->file_name, strerror(errno));\n\t\tRETVAL_FALSE;\n\t} else {\n\t\t/* Append NULL to the end of the string */\n\t\tbuff[ret] = '\\0';\n\n\t\tRETVAL_STRINGL(buff, ret, 1);\n\t}\n\n\tzend_restore_error_handling(&error_handling TSRMLS_CC);\n}",
    "filename": "ext/spl/spl_directory.c"
  },
  "php_2011-11-15-236120d80e-fb37f3b20d": {
    "buggy": "PHP_FUNCTION(tempnam)\n{\n\tchar *dir, *prefix;\n\tint dir_len, prefix_len;\n\tsize_t p_len;\n\tchar *opened_path;\n\tchar *p;\n\tint fd;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ps\", &dir, &dir_len, &prefix, &prefix_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (php_check_open_basedir(dir TSRMLS_CC)) {\n\t\tRETURN_FALSE;\n\t}\n\n\tphp_basename(prefix, prefix_len, NULL, 0, &p, &p_len TSRMLS_CC);\n\tif (p_len > 64) {\n\t\tp[63] = '\\0';\n\t}\n\t\n\tRETVAL_FALSE;\n\n\tif ((fd = php_open_temporary_fd(dir, p, &opened_path TSRMLS_CC)) >= 0) {\n\t\tclose(fd);\n\t\tRETVAL_STRING(opened_path, 0);\n\t}\n\tefree(p);\n}",
    "start": 798,
    "end": 827,
    "fix": "PHP_FUNCTION(tempnam)\n{\n\tchar *dir, *prefix;\n\tint dir_len, prefix_len;\n\tsize_t p_len;\n\tchar *opened_path;\n\tchar *p;\n\tint fd;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ps\", &dir, &dir_len, &prefix, &prefix_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (php_check_open_basedir(dir TSRMLS_CC)) {\n\t\tRETURN_FALSE;\n\t}\n\n\tphp_basename(prefix, prefix_len, NULL, 0, &p, &p_len TSRMLS_CC);\n\tif (p_len > 64) {\n\t\tp[63] = '\\0';\n\t}\n\t\n\tRETVAL_FALSE;\n\n\tif ((fd = php_open_temporary_fd_ex(dir, p, &opened_path, 1 TSRMLS_CC)) >= 0) {\n\t\tclose(fd);\n\t\tRETVAL_STRING(opened_path, 0);\n\t}\n\tefree(p);\n}",
    "filename": "ext/standard/file.c"
  },
  "php_2011-11-16-55acfdf7bd-3c7a573a2c": {
    "buggy": "void zend_do_halt_compiler_register(TSRMLS_D) /* {{{ */\n{\n\tchar *name, *cfilename;\n\tchar haltoff[] = \"__COMPILER_HALT_OFFSET__\";\n\tint len, clen;\n\tcfilename = zend_get_compiled_filename(TSRMLS_C);\n\tclen = strlen(cfilename);\n\tzend_mangle_property_name(&name, &len, haltoff, sizeof(haltoff) - 1, cfilename, clen, 0);\n\tzend_register_long_constant(name, len+1, zend_get_scanned_file_offset(TSRMLS_C), CONST_CS, 0 TSRMLS_CC);\n\tpefree(name, 0);\n\t\n\tif (CG(in_namespace)) {\n\t\tzend_do_end_namespace(TSRMLS_C);\n\t}\n}",
    "start": 5309,
    "end": 5323,
    "fix": "void zend_do_halt_compiler_register(TSRMLS_D) /* {{{ */\n{\n\tchar *name, *cfilename;\n\tchar haltoff[] = \"__COMPILER_HALT_OFFSET__\";\n\tint len, clen;\n\t\n\tif (CG(has_bracketed_namespaces) && CG(in_namespace)) {\n\t\tzend_error(E_COMPILE_ERROR, \"__HALT_COMPILER() can only be used from the outermost scope\");\n\t}\n\t\n\tcfilename = zend_get_compiled_filename(TSRMLS_C);\n\tclen = strlen(cfilename);\n\tzend_mangle_property_name(&name, &len, haltoff, sizeof(haltoff) - 1, cfilename, clen, 0);\n\tzend_register_long_constant(name, len+1, zend_get_scanned_file_offset(TSRMLS_C), CONST_CS, 0 TSRMLS_CC);\n\tpefree(name, 0);\n\t\n\tif (CG(in_namespace)) {\n\t\tzend_do_end_namespace(TSRMLS_C);\n\t}\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-19-51a4ae6576-bc810a443d": {
    "buggy": "static void do_inheritance_check_on_method(zend_function *child, zend_function *parent TSRMLS_DC) /* {{{ */\n{\n\tzend_uint child_flags;\n\tzend_uint parent_flags = parent->common.fn_flags;\n\n\tif (parent->common.fn_flags & ZEND_ACC_ABSTRACT\n\t\t&& parent->common.scope != (child->common.prototype ? child->common.prototype->common.scope : child->common.scope)\n\t\t&& child->common.fn_flags & (ZEND_ACC_ABSTRACT|ZEND_ACC_IMPLEMENTED_ABSTRACT)) {\n\t\tzend_error(E_COMPILE_ERROR, \"Can't inherit abstract function %s::%s() (previously declared abstract in %s)\", \n\t\t\tparent->common.scope->name,\n\t\t\tchild->common.function_name,\n\t\t\tchild->common.prototype ? child->common.prototype->common.scope->name : child->common.scope->name);\n\t}\n\n\tif (parent_flags & ZEND_ACC_FINAL) {\n\t\tzend_error(E_COMPILE_ERROR, \"Cannot override final method %s::%s()\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name);\n\t}\n\n\tchild_flags\t= child->common.fn_flags;\n\t/* You cannot change from static to non static and vice versa.\n\t */\n\tif ((child_flags & ZEND_ACC_STATIC) != (parent_flags & ZEND_ACC_STATIC)) {\n\t\tif (child->common.fn_flags & ZEND_ACC_STATIC) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot make non static method %s::%s() static in class %s\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name, ZEND_FN_SCOPE_NAME(child));\n\t\t} else {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot make static method %s::%s() non static in class %s\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name, ZEND_FN_SCOPE_NAME(child));\n\t\t}\n\t}\n\n\t/* Disallow making an inherited method abstract. */\n\tif ((child_flags & ZEND_ACC_ABSTRACT) && !(parent_flags & ZEND_ACC_ABSTRACT)) {\n\t\tzend_error(E_COMPILE_ERROR, \"Cannot make non abstract method %s::%s() abstract in class %s\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name, ZEND_FN_SCOPE_NAME(child));\n\t}\n\n\tif (parent_flags & ZEND_ACC_CHANGED) {\n\t\tchild->common.fn_flags |= ZEND_ACC_CHANGED;\n\t} else {\n\t\t/* Prevent derived classes from restricting access that was available in parent classes\n\t\t */\n\t\tif ((child_flags & ZEND_ACC_PPP_MASK) > (parent_flags & ZEND_ACC_PPP_MASK)) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Access level to %s::%s() must be %s (as in class %s)%s\", ZEND_FN_SCOPE_NAME(child), child->common.function_name, zend_visibility_string(parent_flags), ZEND_FN_SCOPE_NAME(parent), (parent_flags&ZEND_ACC_PUBLIC) ? \"\" : \" or weaker\");\n\t\t} else if (((child_flags & ZEND_ACC_PPP_MASK) < (parent_flags & ZEND_ACC_PPP_MASK))\n\t\t\t&& ((parent_flags & ZEND_ACC_PPP_MASK) & ZEND_ACC_PRIVATE)) {\n\t\t\tchild->common.fn_flags |= ZEND_ACC_CHANGED;\n\t\t}\n\t}\n\n\tif (parent_flags & ZEND_ACC_PRIVATE) {\n\t\tchild->common.prototype = NULL;\t\t\n\t} else if (parent_flags & ZEND_ACC_ABSTRACT) {\n\t\tchild->common.fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\tchild->common.prototype = parent;\n\t} else if (!(parent->common.fn_flags & ZEND_ACC_CTOR) || (parent->common.prototype && (parent->common.prototype->common.scope->ce_flags & ZEND_ACC_INTERFACE))) {\n\t\t/* ctors only have a prototype if it comes from an interface */\n\t\tchild->common.prototype = parent->common.prototype ? parent->common.prototype : parent;\n\t}\n\n\tif (child->common.prototype && (child->common.prototype->common.fn_flags & ZEND_ACC_ABSTRACT)) {\n\t\tif (!zend_do_perform_implementation_check(child, child->common.prototype TSRMLS_CC)) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Declaration of %s::%s() must be compatible with %s\", ZEND_FN_SCOPE_NAME(child), child->common.function_name, zend_get_function_declaration(child->common.prototype TSRMLS_CC)); \n\t\t}\n\t} else if (EG(error_reporting) & E_STRICT || EG(user_error_handler)) { /* Check E_STRICT (or custom error handler) before the check so that we save some time */\n\t\tif (!zend_do_perform_implementation_check(child, parent TSRMLS_CC)) {\n\t\t\tchar *method_prototype = zend_get_function_declaration(child->common.prototype TSRMLS_CC);\n\t\t\tzend_error(E_STRICT, \"Declaration of %s::%s() should be compatible with %s\", ZEND_FN_SCOPE_NAME(child), child->common.function_name, method_prototype); \n\t\t\tefree(method_prototype);\n\t\t}\n\t}\n}",
    "start": 3171,
    "end": 3239,
    "fix": "static void do_inheritance_check_on_method(zend_function *child, zend_function *parent TSRMLS_DC) /* {{{ */\n{\n\tzend_uint child_flags;\n\tzend_uint parent_flags = parent->common.fn_flags;\n\n\tif ((parent->common.scope->ce_flags & ZEND_ACC_INTERFACE) == 0\n\t\t&& parent->common.fn_flags & ZEND_ACC_ABSTRACT\n\t\t&& parent->common.scope != (child->common.prototype ? child->common.prototype->common.scope : child->common.scope)\n\t\t&& child->common.fn_flags & (ZEND_ACC_ABSTRACT|ZEND_ACC_IMPLEMENTED_ABSTRACT)) {\n\t\tzend_error(E_COMPILE_ERROR, \"Can't inherit abstract function %s::%s() (previously declared abstract in %s)\", \n\t\t\tparent->common.scope->name,\n\t\t\tchild->common.function_name,\n\t\t\tchild->common.prototype ? child->common.prototype->common.scope->name : child->common.scope->name);\n\t}\n\n\tif (parent_flags & ZEND_ACC_FINAL) {\n\t\tzend_error(E_COMPILE_ERROR, \"Cannot override final method %s::%s()\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name);\n\t}\n\n\tchild_flags\t= child->common.fn_flags;\n\t/* You cannot change from static to non static and vice versa.\n\t */\n\tif ((child_flags & ZEND_ACC_STATIC) != (parent_flags & ZEND_ACC_STATIC)) {\n\t\tif (child->common.fn_flags & ZEND_ACC_STATIC) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot make non static method %s::%s() static in class %s\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name, ZEND_FN_SCOPE_NAME(child));\n\t\t} else {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot make static method %s::%s() non static in class %s\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name, ZEND_FN_SCOPE_NAME(child));\n\t\t}\n\t}\n\n\t/* Disallow making an inherited method abstract. */\n\tif ((child_flags & ZEND_ACC_ABSTRACT) && !(parent_flags & ZEND_ACC_ABSTRACT)) {\n\t\tzend_error(E_COMPILE_ERROR, \"Cannot make non abstract method %s::%s() abstract in class %s\", ZEND_FN_SCOPE_NAME(parent), child->common.function_name, ZEND_FN_SCOPE_NAME(child));\n\t}\n\n\tif (parent_flags & ZEND_ACC_CHANGED) {\n\t\tchild->common.fn_flags |= ZEND_ACC_CHANGED;\n\t} else {\n\t\t/* Prevent derived classes from restricting access that was available in parent classes\n\t\t */\n\t\tif ((child_flags & ZEND_ACC_PPP_MASK) > (parent_flags & ZEND_ACC_PPP_MASK)) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Access level to %s::%s() must be %s (as in class %s)%s\", ZEND_FN_SCOPE_NAME(child), child->common.function_name, zend_visibility_string(parent_flags), ZEND_FN_SCOPE_NAME(parent), (parent_flags&ZEND_ACC_PUBLIC) ? \"\" : \" or weaker\");\n\t\t} else if (((child_flags & ZEND_ACC_PPP_MASK) < (parent_flags & ZEND_ACC_PPP_MASK))\n\t\t\t&& ((parent_flags & ZEND_ACC_PPP_MASK) & ZEND_ACC_PRIVATE)) {\n\t\t\tchild->common.fn_flags |= ZEND_ACC_CHANGED;\n\t\t}\n\t}\n\n\tif (parent_flags & ZEND_ACC_PRIVATE) {\n\t\tchild->common.prototype = NULL;\t\t\n\t} else if (parent_flags & ZEND_ACC_ABSTRACT) {\n\t\tchild->common.fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT;\n\t\tchild->common.prototype = parent;\n\t} else if (!(parent->common.fn_flags & ZEND_ACC_CTOR) || (parent->common.prototype && (parent->common.prototype->common.scope->ce_flags & ZEND_ACC_INTERFACE))) {\n\t\t/* ctors only have a prototype if it comes from an interface */\n\t\tchild->common.prototype = parent->common.prototype ? parent->common.prototype : parent;\n\t}\n\n\tif (child->common.prototype && (child->common.prototype->common.fn_flags & ZEND_ACC_ABSTRACT)) {\n\t\tif (!zend_do_perform_implementation_check(child, child->common.prototype TSRMLS_CC)) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Declaration of %s::%s() must be compatible with %s\", ZEND_FN_SCOPE_NAME(child), child->common.function_name, zend_get_function_declaration(child->common.prototype TSRMLS_CC)); \n\t\t}\n\t} else if (EG(error_reporting) & E_STRICT || EG(user_error_handler)) { /* Check E_STRICT (or custom error handler) before the check so that we save some time */\n\t\tif (!zend_do_perform_implementation_check(child, parent TSRMLS_CC)) {\n\t\t\tchar *method_prototype = zend_get_function_declaration(child->common.prototype TSRMLS_CC);\n\t\t\tzend_error(E_STRICT, \"Declaration of %s::%s() should be compatible with %s\", ZEND_FN_SCOPE_NAME(child), child->common.function_name, method_prototype); \n\t\t\tefree(method_prototype);\n\t\t}\n\t}\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-19-eeba0b5681-d3b20b4058": {
    "buggy": "static int phar_open_from_fp(php_stream* fp, char *fname, int fname_len, char *alias, int alias_len, int options, phar_archive_data** pphar, int is_data, char **error TSRMLS_DC) /* {{{ */\n{\n\tconst char token[] = \"__HALT_COMPILER();\";\n\tconst char zip_magic[] = \"PK\\x03\\x04\";\n\tconst char gz_magic[] = \"\\x1f\\x8b\\x08\";\n\tconst char bz_magic[] = \"BZh\";\n\tchar *pos, test = '\\0';\n\tconst int window_size = 1024 + sizeof(token);\n\tchar buffer[1024 + sizeof(token)]; /* a 1024 byte window + the size of the halt_compiler token (moving window) */\n\tconst long readsize = sizeof(buffer) - sizeof(token);\n\tconst long tokenlen = sizeof(token) - 1;\n\tlong halt_offset;\n\tsize_t got;\n\tphp_uint32 compression = PHAR_FILE_COMPRESSED_NONE;\n\n\tif (error) {\n\t\t*error = NULL;\n\t}\n\n\tif (-1 == php_stream_rewind(fp)) {\n\t\tMAPPHAR_ALLOC_FAIL(\"cannot rewind phar \\\"%s\\\"\")\n\t}\n\n\tbuffer[sizeof(buffer)-1] = '\\0';\n\tmemset(buffer, 32, sizeof(token));\n\thalt_offset = 0;\n\n\t/* Maybe it's better to compile the file instead of just searching,  */\n\t/* but we only want the offset. So we want a .re scanner to find it. */\n\twhile(!php_stream_eof(fp)) {\n\t\tif ((got = php_stream_read(fp, buffer+tokenlen, readsize)) < (size_t) tokenlen) {\n\t\t\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated entry)\")\n\t\t}\n\n\t\tif (!test) {\n\t\t\ttest = '\\1';\n\t\t\tpos = buffer+tokenlen;\n\t\t\tif (!memcmp(pos, gz_magic, 3)) {\n\t\t\t\tchar err = 0;\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\t\t\t\t/* to properly decompress, we have to tell zlib to look for a zlib or gzip header */\n\t\t\t\tzval filterparams;\n\n\t\t\t\tif (!PHAR_G(has_zlib)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file, enable zlib extension in php.ini\")\n\t\t\t\t}\n\t\t\t\tarray_init(&filterparams);\n/* this is defined in zlib's zconf.h */\n#ifndef MAX_WBITS\n#define MAX_WBITS 15\n#endif\n\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS + 32);\n\n\t\t\t\t/* entire file is gzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of gzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\terr = 1;\n\t\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS);\n\t\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\t\t\t\t\tzval_dtor(&filterparams);\n\n\t\t\t\t\tif (!filter) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tzval_dtor(&filterparams);\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_GZ;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t} else if (!memcmp(pos, bz_magic, 3)) {\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\n\t\t\t\tif (!PHAR_G(has_bz2)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file, enable bz2 extension in php.ini\")\n\t\t\t\t}\n\n\t\t\t\t/* entire file is bzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of bzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"bzip2.decompress\", NULL, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\", filter creation failed\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_BZ2;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!memcmp(pos, zip_magic, 4)) {\n\t\t\t\tphp_stream_seek(fp, 0, SEEK_END);\n\t\t\t\treturn phar_parse_zipfile(fp, fname, fname_len, alias, alias_len, pphar, error TSRMLS_CC);\n\t\t\t}\n\n\t\t\tif (got > 512) {\n\t\t\t\tif (phar_is_tar(pos, fname)) {\n\t\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\t\treturn phar_parse_tarfile(fp, fname, fname_len, alias, alias_len, pphar, is_data, compression, error TSRMLS_CC);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (got > 0 && (pos = phar_strnstr(buffer, got + sizeof(token), token, sizeof(token)-1)) != NULL) {\n\t\t\thalt_offset += (pos - buffer); /* no -tokenlen+tokenlen here */\n\t\t\treturn phar_parse_pharfile(fp, fname, fname_len, alias, alias_len, halt_offset, pphar, compression, error TSRMLS_CC);\n\t\t}\n\n\t\thalt_offset += got;\n\t\tmemmove(buffer, buffer + window_size, tokenlen); /* move the memory buffer by the size of the window */\n\t}\n\n\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (__HALT_COMPILER(); not found)\")\n}",
    "start": 1566,
    "end": 1726,
    "fix": "static int phar_open_from_fp(php_stream* fp, char *fname, int fname_len, char *alias, int alias_len, int options, phar_archive_data** pphar, int is_data, char **error TSRMLS_DC) /* {{{ */\n{\n\tconst char token[] = \"__HALT_COMPILER();\";\n\tconst char zip_magic[] = \"PK\\x03\\x04\";\n\tconst char gz_magic[] = \"\\x1f\\x8b\\x08\";\n\tconst char bz_magic[] = \"BZh\";\n\tchar *pos, test = '\\0';\n\tconst int window_size = 1024;\n\tchar buffer[window_size + sizeof(token)]; /* a 1024 byte window + the size of the halt_compiler token (moving window) */\n\tconst long readsize = sizeof(buffer) - sizeof(token);\n\tconst long tokenlen = sizeof(token) - 1;\n\tlong halt_offset;\n\tsize_t got;\n\tphp_uint32 compression = PHAR_FILE_COMPRESSED_NONE;\n\n\tif (error) {\n\t\t*error = NULL;\n\t}\n\n\tif (-1 == php_stream_rewind(fp)) {\n\t\tMAPPHAR_ALLOC_FAIL(\"cannot rewind phar \\\"%s\\\"\")\n\t}\n\n\tbuffer[sizeof(buffer)-1] = '\\0';\n\tmemset(buffer, 32, sizeof(token));\n\thalt_offset = 0;\n\n\t/* Maybe it's better to compile the file instead of just searching,  */\n\t/* but we only want the offset. So we want a .re scanner to find it. */\n\twhile(!php_stream_eof(fp)) {\n\t\tif ((got = php_stream_read(fp, buffer+tokenlen, readsize)) < (size_t) tokenlen) {\n\t\t\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated entry)\")\n\t\t}\n\n\t\tif (!test) {\n\t\t\ttest = '\\1';\n\t\t\tpos = buffer+tokenlen;\n\t\t\tif (!memcmp(pos, gz_magic, 3)) {\n\t\t\t\tchar err = 0;\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\t\t\t\t/* to properly decompress, we have to tell zlib to look for a zlib or gzip header */\n\t\t\t\tzval filterparams;\n\n\t\t\t\tif (!PHAR_G(has_zlib)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file, enable zlib extension in php.ini\")\n\t\t\t\t}\n\t\t\t\tarray_init(&filterparams);\n/* this is defined in zlib's zconf.h */\n#ifndef MAX_WBITS\n#define MAX_WBITS 15\n#endif\n\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS + 32);\n\n\t\t\t\t/* entire file is gzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of gzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\terr = 1;\n\t\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS);\n\t\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\t\t\t\t\tzval_dtor(&filterparams);\n\n\t\t\t\t\tif (!filter) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tzval_dtor(&filterparams);\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_GZ;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t} else if (!memcmp(pos, bz_magic, 3)) {\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\n\t\t\t\tif (!PHAR_G(has_bz2)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file, enable bz2 extension in php.ini\")\n\t\t\t\t}\n\n\t\t\t\t/* entire file is bzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of bzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"bzip2.decompress\", NULL, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\", filter creation failed\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_BZ2;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!memcmp(pos, zip_magic, 4)) {\n\t\t\t\tphp_stream_seek(fp, 0, SEEK_END);\n\t\t\t\treturn phar_parse_zipfile(fp, fname, fname_len, alias, alias_len, pphar, error TSRMLS_CC);\n\t\t\t}\n\n\t\t\tif (got > 512) {\n\t\t\t\tif (phar_is_tar(pos, fname)) {\n\t\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\t\treturn phar_parse_tarfile(fp, fname, fname_len, alias, alias_len, pphar, is_data, compression, error TSRMLS_CC);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (got > 0 && (pos = phar_strnstr(buffer, got + sizeof(token), token, sizeof(token)-1)) != NULL) {\n\t\t\thalt_offset += (pos - buffer); /* no -tokenlen+tokenlen here */\n\t\t\treturn phar_parse_pharfile(fp, fname, fname_len, alias, alias_len, halt_offset, pphar, compression, error TSRMLS_CC);\n\t\t}\n\n\t\thalt_offset += got;\n\t\tmemmove(buffer, buffer + window_size, tokenlen); /* move the memory buffer by the size of the window */\n\t}\n\n\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (__HALT_COMPILER(); not found)\")\n}",
    "filename": "ext/phar/phar.c"
  },
  "php_2011-11-19-eeba0b5681-f330c8ab4e": {
    "buggy": "static int phar_open_from_fp(php_stream* fp, char *fname, int fname_len, char *alias, int alias_len, int options, phar_archive_data** pphar, int is_data, char **error TSRMLS_DC) /* {{{ */\n{\n\tconst char token[] = \"__HALT_COMPILER();\";\n\tconst char zip_magic[] = \"PK\\x03\\x04\";\n\tconst char gz_magic[] = \"\\x1f\\x8b\\x08\";\n\tconst char bz_magic[] = \"BZh\";\n\tchar *pos, test = '\\0';\n\tconst int window_size = 1024 + sizeof(token);\n\tchar buffer[1024 + sizeof(token)]; /* a 1024 byte window + the size of the halt_compiler token (moving window) */\n\tconst long readsize = sizeof(buffer) - sizeof(token);\n\tconst long tokenlen = sizeof(token) - 1;\n\tlong halt_offset;\n\tsize_t got;\n\tphp_uint32 compression = PHAR_FILE_COMPRESSED_NONE;\n\n\tif (error) {\n\t\t*error = NULL;\n\t}\n\n\tif (-1 == php_stream_rewind(fp)) {\n\t\tMAPPHAR_ALLOC_FAIL(\"cannot rewind phar \\\"%s\\\"\")\n\t}\n\n\tbuffer[sizeof(buffer)-1] = '\\0';\n\tmemset(buffer, 32, sizeof(token));\n\thalt_offset = 0;\n\n\t/* Maybe it's better to compile the file instead of just searching,  */\n\t/* but we only want the offset. So we want a .re scanner to find it. */\n\twhile(!php_stream_eof(fp)) {\n\t\tif ((got = php_stream_read(fp, buffer+tokenlen, readsize)) < (size_t) tokenlen) {\n\t\t\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated entry)\")\n\t\t}\n\n\t\tif (!test) {\n\t\t\ttest = '\\1';\n\t\t\tpos = buffer+tokenlen;\n\t\t\tif (!memcmp(pos, gz_magic, 3)) {\n\t\t\t\tchar err = 0;\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\t\t\t\t/* to properly decompress, we have to tell zlib to look for a zlib or gzip header */\n\t\t\t\tzval filterparams;\n\n\t\t\t\tif (!PHAR_G(has_zlib)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file, enable zlib extension in php.ini\")\n\t\t\t\t}\n\t\t\t\tarray_init(&filterparams);\n/* this is defined in zlib's zconf.h */\n#ifndef MAX_WBITS\n#define MAX_WBITS 15\n#endif\n\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS + 32);\n\n\t\t\t\t/* entire file is gzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of gzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\terr = 1;\n\t\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS);\n\t\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\t\t\t\t\tzval_dtor(&filterparams);\n\n\t\t\t\t\tif (!filter) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tzval_dtor(&filterparams);\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_GZ;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t} else if (!memcmp(pos, bz_magic, 3)) {\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\n\t\t\t\tif (!PHAR_G(has_bz2)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file, enable bz2 extension in php.ini\")\n\t\t\t\t}\n\n\t\t\t\t/* entire file is bzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of bzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"bzip2.decompress\", NULL, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\", filter creation failed\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_BZ2;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!memcmp(pos, zip_magic, 4)) {\n\t\t\t\tphp_stream_seek(fp, 0, SEEK_END);\n\t\t\t\treturn phar_parse_zipfile(fp, fname, fname_len, alias, alias_len, pphar, error TSRMLS_CC);\n\t\t\t}\n\n\t\t\tif (got > 512) {\n\t\t\t\tif (phar_is_tar(pos, fname)) {\n\t\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\t\treturn phar_parse_tarfile(fp, fname, fname_len, alias, alias_len, pphar, is_data, compression, error TSRMLS_CC);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (got > 0 && (pos = phar_strnstr(buffer, got + sizeof(token), token, sizeof(token)-1)) != NULL) {\n\t\t\thalt_offset += (pos - buffer); /* no -tokenlen+tokenlen here */\n\t\t\treturn phar_parse_pharfile(fp, fname, fname_len, alias, alias_len, halt_offset, pphar, compression, error TSRMLS_CC);\n\t\t}\n\n\t\thalt_offset += got;\n\t\tmemmove(buffer, buffer + window_size, tokenlen); /* move the memory buffer by the size of the window */\n\t}\n\n\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (__HALT_COMPILER(); not found)\")\n}",
    "start": 1566,
    "end": 1726,
    "fix": "static int phar_open_from_fp(php_stream* fp, char *fname, int fname_len, char *alias, int alias_len, int options, phar_archive_data** pphar, int is_data, char **error TSRMLS_DC) /* {{{ */\n{\n\tconst char token[] = \"__HALT_COMPILER();\";\n\tconst char zip_magic[] = \"PK\\x03\\x04\";\n\tconst char gz_magic[] = \"\\x1f\\x8b\\x08\";\n\tconst char bz_magic[] = \"BZh\";\n\tchar *pos, test = '\\0';\n\tconst int window_size = 1024;\n\tchar buffer[1024 + sizeof(token)]; /* a 1024 byte window + the size of the halt_compiler token (moving window) */\n\tconst long readsize = sizeof(buffer) - sizeof(token);\n\tconst long tokenlen = sizeof(token) - 1;\n\tlong halt_offset;\n\tsize_t got;\n\tphp_uint32 compression = PHAR_FILE_COMPRESSED_NONE;\n\n\tif (error) {\n\t\t*error = NULL;\n\t}\n\n\tif (-1 == php_stream_rewind(fp)) {\n\t\tMAPPHAR_ALLOC_FAIL(\"cannot rewind phar \\\"%s\\\"\")\n\t}\n\n\tbuffer[sizeof(buffer)-1] = '\\0';\n\tmemset(buffer, 32, sizeof(token));\n\thalt_offset = 0;\n\n\t/* Maybe it's better to compile the file instead of just searching,  */\n\t/* but we only want the offset. So we want a .re scanner to find it. */\n\twhile(!php_stream_eof(fp)) {\n\t\tif ((got = php_stream_read(fp, buffer+tokenlen, readsize)) < (size_t) tokenlen) {\n\t\t\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated entry)\")\n\t\t}\n\n\t\tif (!test) {\n\t\t\ttest = '\\1';\n\t\t\tpos = buffer+tokenlen;\n\t\t\tif (!memcmp(pos, gz_magic, 3)) {\n\t\t\t\tchar err = 0;\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\t\t\t\t/* to properly decompress, we have to tell zlib to look for a zlib or gzip header */\n\t\t\t\tzval filterparams;\n\n\t\t\t\tif (!PHAR_G(has_zlib)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file, enable zlib extension in php.ini\")\n\t\t\t\t}\n\t\t\t\tarray_init(&filterparams);\n/* this is defined in zlib's zconf.h */\n#ifndef MAX_WBITS\n#define MAX_WBITS 15\n#endif\n\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS + 32);\n\n\t\t\t\t/* entire file is gzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of gzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\terr = 1;\n\t\t\t\t\tadd_assoc_long(&filterparams, \"window\", MAX_WBITS);\n\t\t\t\t\tfilter = php_stream_filter_create(\"zlib.inflate\", &filterparams, php_stream_is_persistent(fp) TSRMLS_CC);\n\t\t\t\t\tzval_dtor(&filterparams);\n\n\t\t\t\t\tif (!filter) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tzval_dtor(&filterparams);\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\", ext/zlib is buggy in PHP versions older than 5.2.6\")\n\t\t\t\t\t}\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress gzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_GZ;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t} else if (!memcmp(pos, bz_magic, 3)) {\n\t\t\t\tphp_stream_filter *filter;\n\t\t\t\tphp_stream *temp;\n\n\t\t\t\tif (!PHAR_G(has_bz2)) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file, enable bz2 extension in php.ini\")\n\t\t\t\t}\n\n\t\t\t\t/* entire file is bzip-compressed, uncompress to temporary file */\n\t\t\t\tif (!(temp = php_stream_fopen_tmpfile())) {\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to create temporary file for decompression of bzipped phar archive \\\"%s\\\"\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tfilter = php_stream_filter_create(\"bzip2.decompress\", NULL, php_stream_is_persistent(fp) TSRMLS_CC);\n\n\t\t\t\tif (!filter) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\", filter creation failed\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_append(&temp->writefilters, filter);\n\n\t\t\t\tif (SUCCESS != phar_stream_copy_to_stream(fp, temp, PHP_STREAM_COPY_ALL, NULL)) {\n\t\t\t\t\tphp_stream_close(temp);\n\t\t\t\t\tMAPPHAR_ALLOC_FAIL(\"unable to decompress bzipped phar archive \\\"%s\\\" to temporary file\")\n\t\t\t\t}\n\n\t\t\t\tphp_stream_filter_flush(filter, 1);\n\t\t\t\tphp_stream_filter_remove(filter, 1 TSRMLS_CC);\n\t\t\t\tphp_stream_close(fp);\n\t\t\t\tfp = temp;\n\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\tcompression = PHAR_FILE_COMPRESSED_BZ2;\n\n\t\t\t\t/* now, start over */\n\t\t\t\ttest = '\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!memcmp(pos, zip_magic, 4)) {\n\t\t\t\tphp_stream_seek(fp, 0, SEEK_END);\n\t\t\t\treturn phar_parse_zipfile(fp, fname, fname_len, alias, alias_len, pphar, error TSRMLS_CC);\n\t\t\t}\n\n\t\t\tif (got > 512) {\n\t\t\t\tif (phar_is_tar(pos, fname)) {\n\t\t\t\t\tphp_stream_rewind(fp);\n\t\t\t\t\treturn phar_parse_tarfile(fp, fname, fname_len, alias, alias_len, pphar, is_data, compression, error TSRMLS_CC);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (got > 0 && (pos = phar_strnstr(buffer, got + sizeof(token), token, sizeof(token)-1)) != NULL) {\n\t\t\thalt_offset += (pos - buffer); /* no -tokenlen+tokenlen here */\n\t\t\treturn phar_parse_pharfile(fp, fname, fname_len, alias, alias_len, halt_offset, pphar, compression, error TSRMLS_CC);\n\t\t}\n\n\t\thalt_offset += got;\n\t\tmemmove(buffer, buffer + window_size, tokenlen); /* move the memory buffer by the size of the window */\n\t}\n\n\tMAPPHAR_ALLOC_FAIL(\"internal corruption of phar \\\"%s\\\" (__HALT_COMPILER(); not found)\")\n}",
    "filename": "ext/phar/phar.c"
  },
  "php_2011-11-22-ecc6c335c5-b548293b99": {
    "buggy": "static void _parameter_string(string *str, zend_function *fptr, struct _zend_arg_info *arg_info, zend_uint offset, zend_uint required, char* indent TSRMLS_DC)\n{\n\tstring_printf(str, \"Parameter #%d [ \", offset);\n\tif (offset >= required) {\n\t\tstring_printf(str, \"<optional> \");\n\t} else {\n\t\tstring_printf(str, \"<required> \");\n\t}\n\tif (arg_info->class_name) {\n\t\tstring_printf(str, \"%s \", arg_info->class_name);\n\t\tif (arg_info->allow_null) {\n\t\t\tstring_printf(str, \"or NULL \");\n\t\t}\n\t} else if (arg_info->type_hint) {\n\t\tstring_printf(str, \"%s \", zend_get_type_by_const(arg_info->type_hint));\n\t\tif (arg_info->allow_null) {\n\t\t\tstring_printf(str, \"or NULL \");\n\t\t}\n\t}\n\tif (arg_info->pass_by_reference) {\n\t\tstring_write(str, \"&\", sizeof(\"&\")-1);\n\t}\n\tif (arg_info->name) {\n\t\tstring_printf(str, \"$%s\", arg_info->name);\n\t} else {\n\t\tstring_printf(str, \"$param%d\", offset);\n\t}\n\tif (fptr->type == ZEND_USER_FUNCTION && offset >= required) {\n\t\tzend_op *precv = _get_recv_op((zend_op_array*)fptr, offset);\n\t\tif (precv && precv->opcode == ZEND_RECV_INIT && precv->op2_type != IS_UNUSED) {\n\t\t\tzval *zv, zv_copy;\n\t\t\tint use_copy;\n\t\t\tstring_write(str, \" = \", sizeof(\" = \")-1);\n\t\t\tALLOC_ZVAL(zv);\n\t\t\t*zv = *precv->op2.zv;\n\t\t\tzval_copy_ctor(zv);\n\t\t\tINIT_PZVAL(zv);\n\t\t\tzval_update_constant_ex(&zv, (void*)1, fptr->common.scope TSRMLS_CC);\n\t\t\tif (Z_TYPE_P(zv) == IS_BOOL) {\n\t\t\t\tif (Z_LVAL_P(zv)) {\n\t\t\t\t\tstring_write(str, \"true\", sizeof(\"true\")-1);\n\t\t\t\t} else {\n\t\t\t\t\tstring_write(str, \"false\", sizeof(\"false\")-1);\n\t\t\t\t}\n\t\t\t} else if (Z_TYPE_P(zv) == IS_NULL) {\n\t\t\t\tstring_write(str, \"NULL\", sizeof(\"NULL\")-1);\n\t\t\t} else if (Z_TYPE_P(zv) == IS_STRING) {\n\t\t\t\tstring_write(str, \"'\", sizeof(\"'\")-1);\n\t\t\t\tstring_write(str, Z_STRVAL_P(zv), MIN(Z_STRLEN_P(zv), 15));\n\t\t\t\tif (Z_STRLEN_P(zv) > 15) {\n\t\t\t\t\tstring_write(str, \"...\", sizeof(\"...\")-1);\n\t\t\t\t}\n\t\t\t\tstring_write(str, \"'\", sizeof(\"'\")-1);\n\t\t\t} else {\n\t\t\t\tzend_make_printable_zval(zv, &zv_copy, &use_copy);\n\t\t\t\tstring_write(str, Z_STRVAL(zv_copy), Z_STRLEN(zv_copy));\n\t\t\t\tif (use_copy) {\n\t\t\t\t\tzval_dtor(&zv_copy);\n\t\t\t\t}\n\t\t\t}\n\t\t\tzval_ptr_dtor(&zv);\n\t\t}\n\t}\n\tstring_write(str, \" ]\", sizeof(\" ]\")-1);\n}",
    "start": 696,
    "end": 760,
    "fix": "static void _parameter_string(string *str, zend_function *fptr, struct _zend_arg_info *arg_info, zend_uint offset, zend_uint required, char* indent TSRMLS_DC)\n{\n\tstring_printf(str, \"Parameter #%d [ \", offset);\n\tif (offset >= required) {\n\t\tstring_printf(str, \"<optional> \");\n\t} else {\n\t\tstring_printf(str, \"<required> \");\n\t}\n\tif (arg_info->class_name) {\n\t\tstring_printf(str, \"%s \", arg_info->class_name);\n\t\tif (arg_info->allow_null) {\n\t\t\tstring_printf(str, \"or NULL \");\n\t\t}\n\t} else if (arg_info->type_hint) {\n\t\tstring_printf(str, \"%s \", zend_get_type_by_const(arg_info->type_hint));\n\t\tif (arg_info->allow_null) {\n\t\t\tstring_printf(str, \"or NULL \");\n\t\t}\n\t}\n\tif (arg_info->pass_by_reference) {\n\t\tstring_write(str, \"&\", sizeof(\"&\")-1);\n\t}\n\tif (arg_info->name) {\n\t\tstring_printf(str, \"$%s\", arg_info->name);\n\t} else {\n\t\tstring_printf(str, \"$param%d\", offset);\n\t}\n\tif (fptr->type == ZEND_USER_FUNCTION && offset >= required) {\n\t\tzend_op *precv = _get_recv_op((zend_op_array*)fptr, offset);\n\t\tif (precv && precv->opcode == ZEND_RECV_INIT && precv->op2_type != IS_UNUSED) {\n\t\t\tzval *zv, zv_copy;\n\t\t\tint use_copy;\n\t\t\tstring_write(str, \" = \", sizeof(\" = \")-1);\n\t\t\tALLOC_ZVAL(zv);\n\t\t\t*zv = *precv->op2.zv;\n\t\t\tzval_copy_ctor(zv);\n\t\t\tINIT_PZVAL(zv);\n\t\t\tzval_update_constant_ex(&zv, (void*)1, fptr->common.scope TSRMLS_CC);\n\t\t\tif (Z_TYPE_P(zv) == IS_BOOL) {\n\t\t\t\tif (Z_LVAL_P(zv)) {\n\t\t\t\t\tstring_write(str, \"true\", sizeof(\"true\")-1);\n\t\t\t\t} else {\n\t\t\t\t\tstring_write(str, \"false\", sizeof(\"false\")-1);\n\t\t\t\t}\n\t\t\t} else if (Z_TYPE_P(zv) == IS_NULL) {\n\t\t\t\tstring_write(str, \"NULL\", sizeof(\"NULL\")-1);\n\t\t\t} else if (Z_TYPE_P(zv) == IS_STRING) {\n\t\t\t\tstring_write(str, \"'\", sizeof(\"'\")-1);\n\t\t\t\tstring_write(str, Z_STRVAL_P(zv), MIN(Z_STRLEN_P(zv), 15));\n\t\t\t\tif (Z_STRLEN_P(zv) > 15) {\n\t\t\t\t\tstring_write(str, \"...\", sizeof(\"...\")-1);\n\t\t\t\t}\n\t\t\t\tstring_write(str, \"'\", sizeof(\"'\")-1);\n\t\t\t} else if (Z_TYPE_P(zv) == IS_ARRAY) {\n\t\t\t\tstring_write(str, \"Array\", sizeof(\"Array\")-1);\n\t\t\t} else {\n\t\t\t\tzend_make_printable_zval(zv, &zv_copy, &use_copy);\n\t\t\t\tstring_write(str, Z_STRVAL(zv_copy), Z_STRLEN(zv_copy));\n\t\t\t\tif (use_copy) {\n\t\t\t\t\tzval_dtor(&zv_copy);\n\t\t\t\t}\n\t\t\t}\n\t\t\tzval_ptr_dtor(&zv);\n\t\t}\n\t}\n\tstring_write(str, \" ]\", sizeof(\" ]\")-1);\n}",
    "filename": "ext/reflection/php_reflection.c"
  },
  "php_2011-11-23-eca88d3064-db0888dfc1": {
    "buggy": "static void zend_do_traits_property_binding(zend_class_entry *ce TSRMLS_DC) /* {{{ */\n{\n\tsize_t i;\n\tzend_property_info *property_info;\n\tzend_property_info *coliding_prop;\n\tzval compare_result;\n\tconst char* prop_name;\n\tint   prop_name_length;\n\tulong prop_hash;\n\tconst char* class_name_unused;\n\tzend_bool prop_found;\n\tzend_bool not_compatible;\n\tzval* prop_value;\n\n\n\t/* In the following steps the properties are inserted into the property table\n\t * for that, a very strict approach is applied:\n\t * - check for compatibility, if not compatible with any property in class -> fatal\n\t * - if compatible, then strict notice\n\t */\n\tfor (i = 0; i < ce->num_traits; i++) {\n\t\tfor (zend_hash_internal_pointer_reset(&ce->traits[i]->properties_info);\n\t\t\t zend_hash_get_current_data(&ce->traits[i]->properties_info, (void *) &property_info) == SUCCESS;\n\t\t\t zend_hash_move_forward(&ce->traits[i]->properties_info)) {\n\t\t\t/* first get the unmangeld name if necessary,\n\t\t\t * then check whether the property is already there\n\t\t\t */\n\t\t\tif ((property_info->flags & ZEND_ACC_PPP_MASK) == ZEND_ACC_PUBLIC) {\n\t\t\t\tprop_hash = property_info->h;\n\t\t\t\tprop_name = property_info->name;\n\t\t\t\tprop_name_length = property_info->name_length;\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info,\n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->name, property_info->name_length+1, \n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->h, (void **) &coliding_prop) == SUCCESS;\n\t\t\t} else {\n\t\t\t\t/* for private and protected we need to unmangle the names */\n\t\t\t\tzend_unmangle_property_name(property_info->name, property_info->name_length,\n\t\t\t\t\t\t\t\t\t\t\t&class_name_unused, &prop_name);\n\t\t\t\tprop_name_length = strlen(prop_name);\n\t\t\t\tprop_hash = zend_get_hash_value(prop_name, prop_name_length + 1);\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop) == SUCCESS;\n\t\t\t}\n\n\t\t\t/* next: check for conflicts with current class */\n\t\t\tif (prop_found) {\n\t\t\t\tif (coliding_prop->flags & ZEND_ACC_SHADOW) {\n\t\t\t\t\t/* this one is inherited, lets look it up in its own class */\n\t\t\t\t\tzend_hash_quick_find(&coliding_prop->ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop);\n\t\t\t\t}\n\t\t\t\tif ((coliding_prop->flags & ZEND_ACC_PPP_MASK) == (property_info->flags & ZEND_ACC_PPP_MASK)) {\n\t\t\t\t\t/* flags are identical, now the value needs to be checked */\n\t\t\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n            not_compatible = (FAILURE == compare_function(&compare_result,\n                                          ce->default_static_members_table[coliding_prop->offset],\n                                          ce->traits[i]->default_static_members_table[property_info->offset] TSRMLS_CC))\n                              || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n                                          ce->default_properties_table[coliding_prop->offset],\n                                          ce->traits[i]->default_properties_table[property_info->offset] TSRMLS_CC))\n                              || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* the flags are not identical, thus, we assume properties are not compatible */\n\t\t\t\t\tnot_compatible = 1;\n\t\t\t\t}\n\n\t\t\t\tif (not_compatible) {\n\t\t\t\t\tzend_error(E_COMPILE_ERROR, \n\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed\",\n\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t} else {\n\t\t\t\t\tzend_error(E_STRICT, \n\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. This might be incompatible, to improve maintainability consider using accessor methods in traits instead. Class was composed\",\n\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* property not found, so lets add it */\n\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\tprop_value = ce->traits[i]->default_static_members_table[property_info->offset];\n\t\t\t} else {\n\t\t\t\tprop_value = ce->traits[i]->default_properties_table[property_info->offset];\n\t\t\t}\n\t\t\tZ_ADDREF_P(prop_value);\n\n\t\t\tzend_declare_property_ex(ce, prop_name, prop_name_length, \n\t\t\t\t\t\t\t\t\t prop_value, property_info->flags, \n\t\t\t\t\t\t\t\t     property_info->doc_comment, property_info->doc_comment_len TSRMLS_CC);\n\t\t}\n\t}\n}",
    "start": 4226,
    "end": 4323,
    "fix": "static void zend_do_traits_property_binding(zend_class_entry *ce TSRMLS_DC) /* {{{ */\n{\n\tsize_t i;\n\tzend_property_info *property_info;\n\tzend_property_info *coliding_prop;\n\tzval compare_result;\n\tconst char* prop_name;\n\tint   prop_name_length;\n\tulong prop_hash;\n\tconst char* class_name_unused;\n\tzend_bool prop_found;\n\tzend_bool not_compatible;\n\tzval* prop_value;\n\n\n\t/* In the following steps the properties are inserted into the property table\n\t * for that, a very strict approach is applied:\n\t * - check for compatibility, if not compatible with any property in class -> fatal\n\t * - if compatible, then strict notice\n\t */\n\tfor (i = 0; i < ce->num_traits; i++) {\n\t\tfor (zend_hash_internal_pointer_reset(&ce->traits[i]->properties_info);\n\t\t\t zend_hash_get_current_data(&ce->traits[i]->properties_info, (void *) &property_info) == SUCCESS;\n\t\t\t zend_hash_move_forward(&ce->traits[i]->properties_info)) {\n\t\t\t/* first get the unmangeld name if necessary,\n\t\t\t * then check whether the property is already there\n\t\t\t */\n\t\t\tif ((property_info->flags & ZEND_ACC_PPP_MASK) == ZEND_ACC_PUBLIC) {\n\t\t\t\tprop_hash = property_info->h;\n\t\t\t\tprop_name = property_info->name;\n\t\t\t\tprop_name_length = property_info->name_length;\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info,\n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->name, property_info->name_length+1, \n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->h, (void **) &coliding_prop) == SUCCESS;\n\t\t\t} else {\n\t\t\t\t/* for private and protected we need to unmangle the names */\n\t\t\t\tzend_unmangle_property_name(property_info->name, property_info->name_length,\n\t\t\t\t\t\t\t\t\t\t\t&class_name_unused, &prop_name);\n\t\t\t\tprop_name_length = strlen(prop_name);\n\t\t\t\tprop_hash = zend_get_hash_value(prop_name, prop_name_length + 1);\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop) == SUCCESS;\n\t\t\t}\n\n\t\t\t/* next: check for conflicts with current class */\n\t\t\tif (prop_found) {\n\t\t\t\tif (coliding_prop->flags & ZEND_ACC_SHADOW) {\n\t\t\t\t\t/* this one is inherited, lets look it up in its own class */\n\t\t\t\t\tzend_hash_quick_find(&coliding_prop->ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop);\n\t\t\t\t}\n\t\t\t\tif (   (coliding_prop->flags & (ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC))\n\t\t\t\t\t== (property_info->flags & (ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC))) {\n\t\t\t\t\t/* flags are identical, now the value needs to be checked */\n\t\t\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n                                          ce->default_static_members_table[coliding_prop->offset],\n                                          ce->traits[i]->default_static_members_table[property_info->offset] TSRMLS_CC))\n                              || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n                                          ce->default_properties_table[coliding_prop->offset],\n                                          ce->traits[i]->default_properties_table[property_info->offset] TSRMLS_CC))\n                              || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* the flags are not identical, thus, we assume properties are not compatible */\n\t\t\t\t\tnot_compatible = 1;\n\t\t\t\t}\n\n\t\t\t\tif (not_compatible) {\n\t\t\t\t\tzend_error(E_COMPILE_ERROR, \n\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed\",\n\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t} else {\n\t\t\t\t\tzend_error(E_STRICT, \n\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. This might be incompatible, to improve maintainability consider using accessor methods in traits instead. Class was composed\",\n\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* property not found, so lets add it */\n\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\tprop_value = ce->traits[i]->default_static_members_table[property_info->offset];\n\t\t\t} else {\n\t\t\t\tprop_value = ce->traits[i]->default_properties_table[property_info->offset];\n\t\t\t}\n\t\t\tZ_ADDREF_P(prop_value);\n\n\t\t\tzend_declare_property_ex(ce, prop_name, prop_name_length, \n\t\t\t\t\t\t\t\t\t prop_value, property_info->flags, \n\t\t\t\t\t\t\t\t     property_info->doc_comment, property_info->doc_comment_len TSRMLS_CC);\n\t\t}\n\t}\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-11-26-7c2946f80e-dc6ecd21ee": {
    "buggy": "timelib_time *timelib_parse_from_format(char *format, char *string, int len, timelib_error_container **errors, const timelib_tzdb *tzdb)\n{\n\tchar       *fptr = format;\n\tchar       *ptr = string;\n\tchar       *begin;\n\ttimelib_sll tmp;\n\tScanner in;\n\tScanner *s = &in;\n\tint allow_extra = 0;\n\n\tmemset(&in, 0, sizeof(in));\n\tin.errors = malloc(sizeof(struct timelib_error_container));\n\tin.errors->warning_count = 0;\n\tin.errors->warning_messages = NULL;\n\tin.errors->error_count = 0;\n\tin.errors->error_messages = NULL;\n\n\tin.time = timelib_time_ctor();\n\tin.time->y = TIMELIB_UNSET;\n\tin.time->d = TIMELIB_UNSET;\n\tin.time->m = TIMELIB_UNSET;\n\tin.time->h = TIMELIB_UNSET;\n\tin.time->i = TIMELIB_UNSET;\n\tin.time->s = TIMELIB_UNSET;\n\tin.time->f = TIMELIB_UNSET;\n\tin.time->z = TIMELIB_UNSET;\n\tin.time->dst = TIMELIB_UNSET;\n\tin.tzdb = tzdb;\n\tin.time->is_localtime = 0;\n\tin.time->zone_type = 0;\n\n\t/* Loop over the format string */\n\twhile (*fptr && *ptr) {\n\t\tbegin = ptr;\n\t\tswitch (*fptr) {\n\t\t\tcase 'D': /* three letter day */\n\t\t\tcase 'l': /* full day */\n\t\t\t\tif (!timelib_lookup_relunit((char **) &ptr)) {\n\t\t\t\t\tadd_pbf_error(s, \"A textual day could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd': /* two digit day, with leading zero */\n\t\t\tcase 'j': /* two digit day, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->d = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit day could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'S': /* day suffix, ignored, nor checked */\n\t\t\t\ttimelib_skip_day_suffix((char **) &ptr);\n\t\t\t\tbreak;\n\t\t\tcase 'z': /* day of year - resets month (0 based) */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((tmp = timelib_get_nr((char **) &ptr, 3)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A three digit day-of-year could not be found\", string, begin);\n\t\t\t\t} else {\n\t\t\t\t\ts->time->m = 1;\n\t\t\t\t\ts->time->d = tmp + 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'm': /* two digit month, with leading zero */\n\t\t\tcase 'n': /* two digit month, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->m = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit month could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'M': /* three letter month */\n\t\t\tcase 'F': /* full month */\n\t\t\t\ttmp = timelib_lookup_month((char **) &ptr);\n\t\t\t\tif (!tmp) {\n\t\t\t\t\tadd_pbf_error(s, \"A textual month could not be found\", string, begin);\n\t\t\t\t} else {\n\t\t\t\t\ts->time->m = tmp;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'y': /* two digit year */\n\t\t\t\t{\n\t\t\t\t\tint length = 0;\n\t\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\t\tif ((s->time->y = timelib_get_nr_ex((char **) &ptr, 2, &length)) == TIMELIB_UNSET) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A two digit year could not be found\", string, begin);\n\t\t\t\t\t}\n\t\t\t\t\tTIMELIB_PROCESS_YEAR(s->time->y, length);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'Y': /* four digit year */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->y = timelib_get_nr((char **) &ptr, 4)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A four digit year could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'g': /* two digit hour, with leading zero */\n\t\t\tcase 'h': /* two digit hour, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->h = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit hour could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tif (s->time->h > 12) {\n\t\t\t\t\tadd_pbf_error(s, \"Hour can not be higher than 12\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'G': /* two digit hour, with leading zero */\n\t\t\tcase 'H': /* two digit hour, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->h = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit hour could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a': /* am/pm/a.m./p.m. */\n\t\t\tcase 'A': /* AM/PM/A.M./P.M. */\n\t\t\t\tif (s->time->h == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"Meridian can only come after an hour has been found\", string, begin);\n\t\t\t\t} else if ((tmp = timelib_meridian_with_check((char **) &ptr, s->time->h)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A meridian could not be found\", string, begin);\n\t\t\t\t} else {\n\t\t\t\t\ts->time->h += tmp;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'i': /* two digit minute, with leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->i = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit minute could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's': /* two digit second, with leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->s = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit second could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'u': /* up to six digit millisecond */\n\t\t\t\t{\n\t\t\t\t\tdouble f;\n\t\t\t\t\tchar *tptr;\n\n\t\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\t\ttptr = ptr;\n\t\t\t\t\tif ((f = timelib_get_nr((char **) &ptr, 6)) == TIMELIB_UNSET || (ptr - tptr < 1)) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A six digit millisecond could not be found\", string, begin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts->time->f = (f / pow(10, (ptr - tptr)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ' ': /* any sort of whitespace (' ' and \\t) */\n\t\t\t\ttimelib_eat_spaces((char **) &ptr);\n\t\t\t\tbreak;\n\t\t\tcase 'U': /* epoch seconds */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tTIMELIB_HAVE_RELATIVE();\n\t\t\t\ttmp = timelib_get_unsigned_nr((char **) &ptr, 24);\n\t\t\t\ts->time->y = 1970;\n\t\t\t\ts->time->m = 1;\n\t\t\t\ts->time->d = 1;\n\t\t\t\ts->time->h = s->time->i = s->time->s = 0;\n\t\t\t\ts->time->f = 0.0;\n\t\t\t\ts->time->relative.s += tmp;\n\t\t\t\ts->time->is_localtime = 1;\n\t\t\t\ts->time->zone_type = TIMELIB_ZONETYPE_OFFSET;\n\t\t\t\ts->time->z = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 'e': /* timezone */\n\t\t\tcase 'P': /* timezone */\n\t\t\tcase 'T': /* timezone */\n\t\t\tcase 'O': /* timezone */\n\t\t\t\t{\n\t\t\t\t\tint tz_not_found;\n\t\t\t\t\ts->time->z = timelib_get_zone((char **) &ptr, &s->time->dst, s->time, &tz_not_found, s->tzdb);\n\t\t\t\t\tif (tz_not_found) {\n\t\t\t\t\t\tadd_pbf_error(s, \"The timezone could not be found in the database\", string, begin);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase '#': /* separation symbol */\n\t\t\t\tif (*ptr == ';' || *ptr == ':' || *ptr == '/' || *ptr == '.' || *ptr == ',' || *ptr == '-' || *ptr == '(' || *ptr == ')') {\n\t\t\t\t\t++ptr;\n\t\t\t\t} else {\n\t\t\t\t\tadd_pbf_error(s, \"The separation symbol ([;:/.,-]) could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase ';':\n\t\t\tcase ':':\n\t\t\tcase '/':\n\t\t\tcase '.':\n\t\t\tcase ',':\n\t\t\tcase '-':\n\t\t\tcase '(':\n\t\t\tcase ')':\n\t\t\t\tif (*ptr == *fptr) {\n\t\t\t\t\t++ptr;\n\t\t\t\t} else {\n\t\t\t\t\tadd_pbf_error(s, \"The separation symbol could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase '!': /* reset all fields to default */\n\t\t\t\ttimelib_time_reset_fields(s->time);\n\t\t\t\tbreak; /* break intentionally not missing */\n\n\t\t\tcase '|': /* reset all fields to default when not set */\n\t\t\t\ttimelib_time_reset_unset_fields(s->time);\n\t\t\t\tbreak; /* break intentionally not missing */\n\n\t\t\tcase '?': /* random char */\n\t\t\t\t++ptr;\n\t\t\t\tbreak;\n\n\t\t\tcase '\\\\': /* escaped char */\n\t\t\t\t*fptr++;\n\t\t\t\tif (*ptr == *fptr) {\n\t\t\t\t\t++ptr;\n\t\t\t\t} else {\n\t\t\t\t\tadd_pbf_error(s, \"The escaped character could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase '*': /* random chars until a separator or number ([ \\t.,:;/-0123456789]) */\n\t\t\t\ttimelib_eat_until_separator((char **) &ptr);\n\t\t\t\tbreak;\n\n\t\t\tcase '+': /* allow extra chars in the format */\n\t\t\t\tallow_extra = 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (*fptr != *ptr) {\n\t\t\t\t\tadd_pbf_error(s, \"The format separator does not match\", string, begin);\n\t\t\t\t}\n\t\t\t\tptr++;\n\t\t}\n\t\tfptr++;\n\t}\n\tif (*ptr) {\n\t\tif (allow_extra) {\n\t\t\tadd_pbf_warning(s, \"Trailing data\", string, ptr);\n\t\t} else {\n\t\t\tadd_pbf_error(s, \"Trailing data\", string, ptr);\n\t\t}\n\t}\n\t/* ignore trailing +'s */\n\twhile (*fptr == '+') {\n\t\tfptr++;\n\t}\n\tif (*fptr) {\n\t\t/* Trailing | and ! specifiers are valid. */\n\t\tint done = 0;\n\t\twhile (*fptr && !done) {\n\t\t\tswitch (*fptr++) {\n\t\t\t\tcase '!': /* reset all fields to default */\n\t\t\t\t\ttimelib_time_reset_fields(s->time);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '|': /* reset all fields to default when not set */\n\t\t\t\t\ttimelib_time_reset_unset_fields(s->time);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tadd_pbf_error(s, \"Data missing\", string, ptr);\n\t\t\t\t\tdone = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* clean up a bit */\n\tif (s->time->h != TIMELIB_UNSET || s->time->i != TIMELIB_UNSET || s->time->s != TIMELIB_UNSET) {\n\t\tif (s->time->h == TIMELIB_UNSET ) {\n\t\t\ts->time->h = 0;\n\t\t}\n\t\tif (s->time->i == TIMELIB_UNSET ) {\n\t\t\ts->time->i = 0;\n\t\t}\n\t\tif (s->time->s == TIMELIB_UNSET ) {\n\t\t\ts->time->s = 0;\n\t\t}\n\t}\n\n\t/* do funky checking whether the parsed time was valid time */\n\tif (s->time->h != TIMELIB_UNSET && s->time->i != TIMELIB_UNSET &&\n\t\ts->time->s != TIMELIB_UNSET && \n\t\t!timelib_valid_time( s->time->h, s->time->i, s->time->s)) {\n\t\tadd_pbf_warning(s, \"The parsed time was invalid\", string, ptr);\n\t}\n\t/* do funky checking whether the parsed date was valid date */\n\tif (s->time->y != TIMELIB_UNSET && s->time->m != TIMELIB_UNSET &&\n\t\ts->time->d != TIMELIB_UNSET && \n\t\t!timelib_valid_date( s->time->y, s->time->m, s->time->d)) {\n\t\tadd_pbf_warning(s, \"The parsed date was invalid\", string, ptr);\n\t}\n\n\tif (errors) {\n\t\t*errors = in.errors;\n\t} else {\n\t\ttimelib_error_container_dtor(in.errors);\n\t}\n\treturn in.time;\n}",
    "start": 24883,
    "end": 25183,
    "fix": "timelib_time *timelib_parse_from_format(char *format, char *string, int len, timelib_error_container **errors, const timelib_tzdb *tzdb)\n{\n\tchar       *fptr = format;\n\tchar       *ptr = string;\n\tchar       *begin;\n\ttimelib_sll tmp;\n\tScanner in;\n\tScanner *s = &in;\n\tint allow_extra = 0;\n\n\tmemset(&in, 0, sizeof(in));\n\tin.errors = malloc(sizeof(struct timelib_error_container));\n\tin.errors->warning_count = 0;\n\tin.errors->warning_messages = NULL;\n\tin.errors->error_count = 0;\n\tin.errors->error_messages = NULL;\n\n\tin.time = timelib_time_ctor();\n\tin.time->y = TIMELIB_UNSET;\n\tin.time->d = TIMELIB_UNSET;\n\tin.time->m = TIMELIB_UNSET;\n\tin.time->h = TIMELIB_UNSET;\n\tin.time->i = TIMELIB_UNSET;\n\tin.time->s = TIMELIB_UNSET;\n\tin.time->f = TIMELIB_UNSET;\n\tin.time->z = TIMELIB_UNSET;\n\tin.time->dst = TIMELIB_UNSET;\n\tin.tzdb = tzdb;\n\tin.time->is_localtime = 0;\n\tin.time->zone_type = 0;\n\n\t/* Loop over the format string */\n\twhile (*fptr && *ptr) {\n\t\tbegin = ptr;\n\t\tswitch (*fptr) {\n\t\t\tcase 'D': /* three letter day */\n\t\t\tcase 'l': /* full day */\n\t\t\t\t{\n\t\t\t\t\tconst timelib_relunit* tmprel = 0;\n\n\t\t\t\t\ttmprel = timelib_lookup_relunit((char **) &ptr);\n\t\t\t\t\tif (!tmprel) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A textual day could not be found\", string, begin);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tin.time->have_relative = 1; \n\t\t\t\t\t\tin.time->relative.have_weekday_relative = 1;\n\t\t\t\t\t\tin.time->relative.weekday = tmprel->multiplier;\n\t\t\t\t\t\tin.time->relative.weekday_behavior = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd': /* two digit day, with leading zero */\n\t\t\tcase 'j': /* two digit day, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->d = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit day could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'S': /* day suffix, ignored, nor checked */\n\t\t\t\ttimelib_skip_day_suffix((char **) &ptr);\n\t\t\t\tbreak;\n\t\t\tcase 'z': /* day of year - resets month (0 based) */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((tmp = timelib_get_nr((char **) &ptr, 3)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A three digit day-of-year could not be found\", string, begin);\n\t\t\t\t} else {\n\t\t\t\t\ts->time->m = 1;\n\t\t\t\t\ts->time->d = tmp + 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'm': /* two digit month, with leading zero */\n\t\t\tcase 'n': /* two digit month, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->m = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit month could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'M': /* three letter month */\n\t\t\tcase 'F': /* full month */\n\t\t\t\ttmp = timelib_lookup_month((char **) &ptr);\n\t\t\t\tif (!tmp) {\n\t\t\t\t\tadd_pbf_error(s, \"A textual month could not be found\", string, begin);\n\t\t\t\t} else {\n\t\t\t\t\ts->time->m = tmp;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'y': /* two digit year */\n\t\t\t\t{\n\t\t\t\t\tint length = 0;\n\t\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\t\tif ((s->time->y = timelib_get_nr_ex((char **) &ptr, 2, &length)) == TIMELIB_UNSET) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A two digit year could not be found\", string, begin);\n\t\t\t\t\t}\n\t\t\t\t\tTIMELIB_PROCESS_YEAR(s->time->y, length);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'Y': /* four digit year */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->y = timelib_get_nr((char **) &ptr, 4)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A four digit year could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'g': /* two digit hour, with leading zero */\n\t\t\tcase 'h': /* two digit hour, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->h = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit hour could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tif (s->time->h > 12) {\n\t\t\t\t\tadd_pbf_error(s, \"Hour can not be higher than 12\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'G': /* two digit hour, with leading zero */\n\t\t\tcase 'H': /* two digit hour, without leading zero */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tif ((s->time->h = timelib_get_nr((char **) &ptr, 2)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A two digit hour could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a': /* am/pm/a.m./p.m. */\n\t\t\tcase 'A': /* AM/PM/A.M./P.M. */\n\t\t\t\tif (s->time->h == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"Meridian can only come after an hour has been found\", string, begin);\n\t\t\t\t} else if ((tmp = timelib_meridian_with_check((char **) &ptr, s->time->h)) == TIMELIB_UNSET) {\n\t\t\t\t\tadd_pbf_error(s, \"A meridian could not be found\", string, begin);\n\t\t\t\t} else {\n\t\t\t\t\ts->time->h += tmp;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'i': /* two digit minute, with leading zero */\n\t\t\t\t{\n\t\t\t\t\tint length;\n\t\t\t\t\ttimelib_sll min;\n\n\t\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\t\tmin = timelib_get_nr_ex((char **) &ptr, 2, &length);\n\t\t\t\t\tif (min == TIMELIB_UNSET || length != 2) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A two digit minute could not be found\", string, begin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts->time->i = min;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's': /* two digit second, with leading zero */\n\t\t\t\t{\n\t\t\t\t\tint length;\n\t\t\t\t\ttimelib_sll sec;\n\n\t\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\t\tsec = timelib_get_nr_ex((char **) &ptr, 2, &length);\n\t\t\t\t\tif (sec == TIMELIB_UNSET || length != 2) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A two second minute could not be found\", string, begin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts->time->s = sec;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'u': /* up to six digit millisecond */\n\t\t\t\t{\n\t\t\t\t\tdouble f;\n\t\t\t\t\tchar *tptr;\n\n\t\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\t\ttptr = ptr;\n\t\t\t\t\tif ((f = timelib_get_nr((char **) &ptr, 6)) == TIMELIB_UNSET || (ptr - tptr < 1)) {\n\t\t\t\t\t\tadd_pbf_error(s, \"A six digit millisecond could not be found\", string, begin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts->time->f = (f / pow(10, (ptr - tptr)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ' ': /* any sort of whitespace (' ' and \\t) */\n\t\t\t\ttimelib_eat_spaces((char **) &ptr);\n\t\t\t\tbreak;\n\t\t\tcase 'U': /* epoch seconds */\n\t\t\t\tTIMELIB_CHECK_NUMBER;\n\t\t\t\tTIMELIB_HAVE_RELATIVE();\n\t\t\t\ttmp = timelib_get_unsigned_nr((char **) &ptr, 24);\n\t\t\t\ts->time->y = 1970;\n\t\t\t\ts->time->m = 1;\n\t\t\t\ts->time->d = 1;\n\t\t\t\ts->time->h = s->time->i = s->time->s = 0;\n\t\t\t\ts->time->f = 0.0;\n\t\t\t\ts->time->relative.s += tmp;\n\t\t\t\ts->time->is_localtime = 1;\n\t\t\t\ts->time->zone_type = TIMELIB_ZONETYPE_OFFSET;\n\t\t\t\ts->time->z = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 'e': /* timezone */\n\t\t\tcase 'P': /* timezone */\n\t\t\tcase 'T': /* timezone */\n\t\t\tcase 'O': /* timezone */\n\t\t\t\t{\n\t\t\t\t\tint tz_not_found;\n\t\t\t\t\ts->time->z = timelib_get_zone((char **) &ptr, &s->time->dst, s->time, &tz_not_found, s->tzdb);\n\t\t\t\t\tif (tz_not_found) {\n\t\t\t\t\t\tadd_pbf_error(s, \"The timezone could not be found in the database\", string, begin);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase '#': /* separation symbol */\n\t\t\t\tif (*ptr == ';' || *ptr == ':' || *ptr == '/' || *ptr == '.' || *ptr == ',' || *ptr == '-' || *ptr == '(' || *ptr == ')') {\n\t\t\t\t\t++ptr;\n\t\t\t\t} else {\n\t\t\t\t\tadd_pbf_error(s, \"The separation symbol ([;:/.,-]) could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase ';':\n\t\t\tcase ':':\n\t\t\tcase '/':\n\t\t\tcase '.':\n\t\t\tcase ',':\n\t\t\tcase '-':\n\t\t\tcase '(':\n\t\t\tcase ')':\n\t\t\t\tif (*ptr == *fptr) {\n\t\t\t\t\t++ptr;\n\t\t\t\t} else {\n\t\t\t\t\tadd_pbf_error(s, \"The separation symbol could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase '!': /* reset all fields to default */\n\t\t\t\ttimelib_time_reset_fields(s->time);\n\t\t\t\tbreak; /* break intentionally not missing */\n\n\t\t\tcase '|': /* reset all fields to default when not set */\n\t\t\t\ttimelib_time_reset_unset_fields(s->time);\n\t\t\t\tbreak; /* break intentionally not missing */\n\n\t\t\tcase '?': /* random char */\n\t\t\t\t++ptr;\n\t\t\t\tbreak;\n\n\t\t\tcase '\\\\': /* escaped char */\n\t\t\t\t*fptr++;\n\t\t\t\tif (*ptr == *fptr) {\n\t\t\t\t\t++ptr;\n\t\t\t\t} else {\n\t\t\t\t\tadd_pbf_error(s, \"The escaped character could not be found\", string, begin);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase '*': /* random chars until a separator or number ([ \\t.,:;/-0123456789]) */\n\t\t\t\ttimelib_eat_until_separator((char **) &ptr);\n\t\t\t\tbreak;\n\n\t\t\tcase '+': /* allow extra chars in the format */\n\t\t\t\tallow_extra = 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (*fptr != *ptr) {\n\t\t\t\t\tadd_pbf_error(s, \"The format separator does not match\", string, begin);\n\t\t\t\t}\n\t\t\t\tptr++;\n\t\t}\n\t\tfptr++;\n\t}\n\tif (*ptr) {\n\t\tif (allow_extra) {\n\t\t\tadd_pbf_warning(s, \"Trailing data\", string, ptr);\n\t\t} else {\n\t\t\tadd_pbf_error(s, \"Trailing data\", string, ptr);\n\t\t}\n\t}\n\t/* ignore trailing +'s */\n\twhile (*fptr == '+') {\n\t\tfptr++;\n\t}\n\tif (*fptr) {\n\t\t/* Trailing | and ! specifiers are valid. */\n\t\tint done = 0;\n\t\twhile (*fptr && !done) {\n\t\t\tswitch (*fptr++) {\n\t\t\t\tcase '!': /* reset all fields to default */\n\t\t\t\t\ttimelib_time_reset_fields(s->time);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '|': /* reset all fields to default when not set */\n\t\t\t\t\ttimelib_time_reset_unset_fields(s->time);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tadd_pbf_error(s, \"Data missing\", string, ptr);\n\t\t\t\t\tdone = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* clean up a bit */\n\tif (s->time->h != TIMELIB_UNSET || s->time->i != TIMELIB_UNSET || s->time->s != TIMELIB_UNSET) {\n\t\tif (s->time->h == TIMELIB_UNSET ) {\n\t\t\ts->time->h = 0;\n\t\t}\n\t\tif (s->time->i == TIMELIB_UNSET ) {\n\t\t\ts->time->i = 0;\n\t\t}\n\t\tif (s->time->s == TIMELIB_UNSET ) {\n\t\t\ts->time->s = 0;\n\t\t}\n\t}\n\n\t/* do funky checking whether the parsed time was valid time */\n\tif (s->time->h != TIMELIB_UNSET && s->time->i != TIMELIB_UNSET &&\n\t\ts->time->s != TIMELIB_UNSET && \n\t\t!timelib_valid_time( s->time->h, s->time->i, s->time->s)) {\n\t\tadd_pbf_warning(s, \"The parsed time was invalid\", string, ptr);\n\t}\n\t/* do funky checking whether the parsed date was valid date */\n\tif (s->time->y != TIMELIB_UNSET && s->time->m != TIMELIB_UNSET &&\n\t\ts->time->d != TIMELIB_UNSET && \n\t\t!timelib_valid_date( s->time->y, s->time->m, s->time->d)) {\n\t\tadd_pbf_warning(s, \"The parsed date was invalid\", string, ptr);\n\t}\n\n\tif (errors) {\n\t\t*errors = in.errors;\n\t} else {\n\t\ttimelib_error_container_dtor(in.errors);\n\t}\n\treturn in.time;\n}",
    "filename": "ext/date/lib/parse_date.c"
  },
  "php_2011-12-04-1e6a82a1cf-dfa08dc325": {
    "buggy": "void php_filter_validate_email(PHP_INPUT_FILTER_PARAM_DECL) /* {{{ */\n{\n\t/*\n\t * The regex below is based on a regex by Michael Rushton.\n\t * However, it is not identical.  I changed it to only consider routeable\n\t * addresses as valid.  Michael's regex considers a@b a valid address\n\t * which conflicts with section 2.3.5 of RFC 5321 which states that:\n\t *\n\t *   Only resolvable, fully-qualified domain names (FQDNs) are permitted\n\t *   when domain names are used in SMTP.  In other words, names that can\n\t *   be resolved to MX RRs or address (i.e., A or AAAA) RRs (as discussed\n\t *   in Section 5) are permitted, as are CNAME RRs whose targets can be\n\t *   resolved, in turn, to MX or address RRs.  Local nicknames or\n\t *   unqualified names MUST NOT be used.\n\t *\n\t * This regex does not handle comments and folding whitespace.  While\n\t * this is technically valid in an email address, these parts aren't\n\t * actually part of the address itself.\n\t *\n\t * Michael's regex carries this copyright:\n\t *\n\t * Copyright \u00a9 Michael Rushton 2009-10\n\t * http://squiloople.com/\n\t * Feel free to use and redistribute this code. But please keep this copyright notice.\n\t *\n\t */\n\tconst char regexp[] = \"/^(?!(?:(?:\\\\x22?\\\\x5C[\\\\x00-\\\\x7E]\\\\x22?)|(?:\\\\x22?[^\\\\x5C\\\\x22]\\\\x22?)){255,})(?!(?:(?:\\\\x22?\\\\x5C[\\\\x00-\\\\x7E]\\\\x22?)|(?:\\\\x22?[^\\\\x5C\\\\x22]\\\\x22?)){65,}@)(?:(?:[\\\\x21\\\\x23-\\\\x27\\\\x2A\\\\x2B\\\\x2D\\\\x2F-\\\\x39\\\\x3D\\\\x3F\\\\x5E-\\\\x7E]+)|(?:\\\\x22(?:[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7F]|(?:\\\\x5C[\\\\x00-\\\\x7F]))*\\\\x22))(?:\\\\.(?:(?:[\\\\x21\\\\x23-\\\\x27\\\\x2A\\\\x2B\\\\x2D\\\\x2F-\\\\x39\\\\x3D\\\\x3F\\\\x5E-\\\\x7E]+)|(?:\\\\x22(?:[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7F]|(?:\\\\x5C[\\\\x00-\\\\x7F]))*\\\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\\\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\\\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\\\]))$/iD\";\n\n\tpcre       *re = NULL;\n\tpcre_extra *pcre_extra = NULL;\n\tint preg_options = 0;\n\tint         ovector[150]; /* Needs to be a multiple of 3 */\n\tint         matches;\n\n\n\t/* The maximum length of an e-mail address is 320 octets, per RFC 2821. */\n\tif (Z_STRLEN_P(value) > 320) {\n\t\tRETURN_VALIDATION_FAILED\n\t}\n\n\tre = pcre_get_compiled_regex((char *)regexp, &pcre_extra, &preg_options TSRMLS_CC);\n\tif (!re) {\n\t\tRETURN_VALIDATION_FAILED\n\t}\n\tmatches = pcre_exec(re, NULL, Z_STRVAL_P(value), Z_STRLEN_P(value), 0, 0, ovector, 3);\n\n\t/* 0 means that the vector is too small to hold all the captured substring offsets */\n\tif (matches < 0) {\n\t\tRETURN_VALIDATION_FAILED\n\t}\n\n}",
    "start": 499,
    "end": 550,
    "fix": "void php_filter_validate_email(PHP_INPUT_FILTER_PARAM_DECL) /* {{{ */\n{\n\t/*\n\t * The regex below is based on a regex by Michael Rushton.\n\t * However, it is not identical.  I changed it to only consider routeable\n\t * addresses as valid.  Michael's regex considers a@b a valid address\n\t * which conflicts with section 2.3.5 of RFC 5321 which states that:\n\t *\n\t *   Only resolvable, fully-qualified domain names (FQDNs) are permitted\n\t *   when domain names are used in SMTP.  In other words, names that can\n\t *   be resolved to MX RRs or address (i.e., A or AAAA) RRs (as discussed\n\t *   in Section 5) are permitted, as are CNAME RRs whose targets can be\n\t *   resolved, in turn, to MX or address RRs.  Local nicknames or\n\t *   unqualified names MUST NOT be used.\n\t *\n\t * This regex does not handle comments and folding whitespace.  While\n\t * this is technically valid in an email address, these parts aren't\n\t * actually part of the address itself.\n\t *\n\t * Michael's regex carries this copyright:\n\t *\n\t * Copyright \u00a9 Michael Rushton 2009-10\n\t * http://squiloople.com/\n\t * Feel free to use and redistribute this code. But please keep this copyright notice.\n\t *\n\t */\n\tconst char regexp[] = \"/^(?!(?:(?:\\\\x22?\\\\x5C[\\\\x00-\\\\x7E]\\\\x22?)|(?:\\\\x22?[^\\\\x5C\\\\x22]\\\\x22?)){255,})(?!(?:(?:\\\\x22?\\\\x5C[\\\\x00-\\\\x7E]\\\\x22?)|(?:\\\\x22?[^\\\\x5C\\\\x22]\\\\x22?)){65,}@)(?:(?:[\\\\x21\\\\x23-\\\\x27\\\\x2A\\\\x2B\\\\x2D\\\\x2F-\\\\x39\\\\x3D\\\\x3F\\\\x5E-\\\\x7E]+)|(?:\\\\x22(?:[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7F]|(?:\\\\x5C[\\\\x00-\\\\x7F]))*\\\\x22))(?:\\\\.(?:(?:[\\\\x21\\\\x23-\\\\x27\\\\x2A\\\\x2B\\\\x2D\\\\x2F-\\\\x39\\\\x3D\\\\x3F\\\\x5E-\\\\x7E]+)|(?:\\\\x22(?:[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7F]|(?:\\\\x5C[\\\\x00-\\\\x7F]))*\\\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-+[a-z0-9]+)*\\\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-+[a-z0-9]+)*)|(?:\\\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\\\]))$/iD\";\n\n\tpcre       *re = NULL;\n\tpcre_extra *pcre_extra = NULL;\n\tint preg_options = 0;\n\tint         ovector[150]; /* Needs to be a multiple of 3 */\n\tint         matches;\n\n\n\t/* The maximum length of an e-mail address is 320 octets, per RFC 2821. */\n\tif (Z_STRLEN_P(value) > 320) {\n\t\tRETURN_VALIDATION_FAILED\n\t}\n\n\tre = pcre_get_compiled_regex((char *)regexp, &pcre_extra, &preg_options TSRMLS_CC);\n\tif (!re) {\n\t\tRETURN_VALIDATION_FAILED\n\t}\n\tmatches = pcre_exec(re, NULL, Z_STRVAL_P(value), Z_STRLEN_P(value), 0, 0, ovector, 3);\n\n\t/* 0 means that the vector is too small to hold all the captured substring offsets */\n\tif (matches < 0) {\n\t\tRETURN_VALIDATION_FAILED\n\t}\n\n}",
    "filename": "ext/filter/logical_filters.c"
  },
  "php_2011-12-04-b3ad0b7af7-1d6c98a136": {
    "buggy": "static void do_inherit_parent_constructor(zend_class_entry *ce) /* {{{ */\n{\n\tzend_function *function;\n\n\tif (!ce->parent) {\n\t\treturn;\n\t}\n\n\t/* You cannot change create_object */\n\tce->create_object = ce->parent->create_object;\n\n\t/* Inherit special functions if needed */\n\tif (!ce->get_iterator) {\n\t\tce->get_iterator = ce->parent->get_iterator;\n\t}\n\tif (!ce->iterator_funcs.funcs) {\n\t\tce->iterator_funcs.funcs = ce->parent->iterator_funcs.funcs;\n\t}\n\tif (!ce->__get) {\n\t\tce->__get   = ce->parent->__get;\n\t}\n\tif (!ce->__set) {\n\t\tce->__set = ce->parent->__set;\n\t}\n\tif (!ce->__unset) {\n\t\tce->__unset = ce->parent->__unset;\n\t}\n\tif (!ce->__isset) {\n\t\tce->__isset = ce->parent->__isset;\n\t}\n\tif (!ce->__call) {\n\t\tce->__call = ce->parent->__call;\n\t}\n\tif (!ce->__callstatic) {\n\t\tce->__callstatic = ce->parent->__callstatic;\n\t}\n\tif (!ce->__tostring) {\n\t\tce->__tostring = ce->parent->__tostring;\n\t}\n\tif (!ce->clone) {\n\t\tce->clone = ce->parent->clone;\n\t}\n\tif(!ce->serialize) {\n\t\tce->serialize = ce->parent->serialize;\n\t}\n\tif(!ce->unserialize) {\n\t\tce->unserialize = ce->parent->unserialize;\n\t}\n\tif (!ce->destructor) {\n\t\tce->destructor   = ce->parent->destructor;\n\t}\n\tif (ce->constructor) {\n\t\tif (ce->parent->constructor && ce->parent->constructor->common.fn_flags & ZEND_ACC_FINAL) {\n\t\t\tzend_error(E_ERROR, \"Cannot override final %s::%s() with %s::%s()\",\n\t\t\t\tce->parent->name, ce->parent->constructor->common.function_name,\n\t\t\t\tce->name, ce->constructor->common.function_name\n\t\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tif (zend_hash_find(&ce->parent->function_table, ZEND_CONSTRUCTOR_FUNC_NAME, sizeof(ZEND_CONSTRUCTOR_FUNC_NAME), (void **)&function)==SUCCESS) {\n\t\t/* inherit parent's constructor */\n\t\tzend_hash_update(&ce->function_table, ZEND_CONSTRUCTOR_FUNC_NAME, sizeof(ZEND_CONSTRUCTOR_FUNC_NAME), function, sizeof(zend_function), NULL);\n\t\tfunction_add_ref(function);\n\t} else {\n\t\t/* Don't inherit the old style constructor if we already have the new style constructor */\n\t\tchar *lc_class_name;\n\t\tchar *lc_parent_class_name;\n\n\t\tlc_class_name = zend_str_tolower_dup(ce->name, ce->name_length);\n\t\tif (!zend_hash_exists(&ce->function_table, lc_class_name, ce->name_length+1)) {\n\t\t\tlc_parent_class_name = zend_str_tolower_dup(ce->parent->name, ce->parent->name_length);\n\t\t\tif (!zend_hash_exists(&ce->function_table, lc_parent_class_name, ce->parent->name_length+1) && \n\t\t\t\t\tzend_hash_find(&ce->parent->function_table, lc_parent_class_name, ce->parent->name_length+1, (void **)&function)==SUCCESS) {\n\t\t\t\tif (function->common.fn_flags & ZEND_ACC_CTOR) {\n\t\t\t\t\t/* inherit parent's constructor */\n\t\t\t\t\tzend_hash_update(&ce->function_table, lc_parent_class_name, ce->parent->name_length+1, function, sizeof(zend_function), NULL);\n\t\t\t\t\tfunction_add_ref(function);\n\t\t\t\t}\n\t\t\t}\n\t\t\tefree(lc_parent_class_name);\n\t\t}\n\t\tefree(lc_class_name);\n\t}\n\tce->constructor = ce->parent->constructor;\n}",
    "start": 2810,
    "end": 2896,
    "fix": "static void do_inherit_parent_constructor(zend_class_entry *ce) /* {{{ */\n{\n\tzend_function *function, *new_function;\n\n\tif (!ce->parent) {\n\t\treturn;\n\t}\n\n\t/* You cannot change create_object */\n\tce->create_object = ce->parent->create_object;\n\n\t/* Inherit special functions if needed */\n\tif (!ce->get_iterator) {\n\t\tce->get_iterator = ce->parent->get_iterator;\n\t}\n\tif (!ce->iterator_funcs.funcs) {\n\t\tce->iterator_funcs.funcs = ce->parent->iterator_funcs.funcs;\n\t}\n\tif (!ce->__get) {\n\t\tce->__get   = ce->parent->__get;\n\t}\n\tif (!ce->__set) {\n\t\tce->__set = ce->parent->__set;\n\t}\n\tif (!ce->__unset) {\n\t\tce->__unset = ce->parent->__unset;\n\t}\n\tif (!ce->__isset) {\n\t\tce->__isset = ce->parent->__isset;\n\t}\n\tif (!ce->__call) {\n\t\tce->__call = ce->parent->__call;\n\t}\n\tif (!ce->__callstatic) {\n\t\tce->__callstatic = ce->parent->__callstatic;\n\t}\n\tif (!ce->__tostring) {\n\t\tce->__tostring = ce->parent->__tostring;\n\t}\n\tif (!ce->clone) {\n\t\tce->clone = ce->parent->clone;\n\t}\n\tif(!ce->serialize) {\n\t\tce->serialize = ce->parent->serialize;\n\t}\n\tif(!ce->unserialize) {\n\t\tce->unserialize = ce->parent->unserialize;\n\t}\n\tif (!ce->destructor) {\n\t\tce->destructor   = ce->parent->destructor;\n\t}\n\tif (ce->constructor) {\n\t\tif (ce->parent->constructor && ce->parent->constructor->common.fn_flags & ZEND_ACC_FINAL) {\n\t\t\tzend_error(E_ERROR, \"Cannot override final %s::%s() with %s::%s()\",\n\t\t\t\tce->parent->name, ce->parent->constructor->common.function_name,\n\t\t\t\tce->name, ce->constructor->common.function_name\n\t\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tif (zend_hash_find(&ce->parent->function_table, ZEND_CONSTRUCTOR_FUNC_NAME, sizeof(ZEND_CONSTRUCTOR_FUNC_NAME), (void **)&function)==SUCCESS) {\n\t\t/* inherit parent's constructor */\n\t\tzend_hash_update(&ce->function_table, ZEND_CONSTRUCTOR_FUNC_NAME, sizeof(ZEND_CONSTRUCTOR_FUNC_NAME), function, sizeof(zend_function), (void**)&new_function);\n\t\tfunction_add_ref(new_function);\n\t} else {\n\t\t/* Don't inherit the old style constructor if we already have the new style constructor */\n\t\tchar *lc_class_name;\n\t\tchar *lc_parent_class_name;\n\n\t\tlc_class_name = zend_str_tolower_dup(ce->name, ce->name_length);\n\t\tif (!zend_hash_exists(&ce->function_table, lc_class_name, ce->name_length+1)) {\n\t\t\tlc_parent_class_name = zend_str_tolower_dup(ce->parent->name, ce->parent->name_length);\n\t\t\tif (!zend_hash_exists(&ce->function_table, lc_parent_class_name, ce->parent->name_length+1) && \n\t\t\t\t\tzend_hash_find(&ce->parent->function_table, lc_parent_class_name, ce->parent->name_length+1, (void **)&function)==SUCCESS) {\n\t\t\t\tif (function->common.fn_flags & ZEND_ACC_CTOR) {\n\t\t\t\t\t/* inherit parent's constructor */\n\t\t\t\t\tzend_hash_update(&ce->function_table, lc_parent_class_name, ce->parent->name_length+1, function, sizeof(zend_function), (void**)new_function);\n\t\t\t\t\tfunction_add_ref(new_function);\n\t\t\t\t}\n\t\t\t}\n\t\t\tefree(lc_parent_class_name);\n\t\t}\n\t\tefree(lc_class_name);\n\t}\n\tce->constructor = ce->parent->constructor;\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2011-12-10-74343ca506-52c36e60c4": {
    "buggy": "PHPAPI char *php_stream_get_record(php_stream *stream, size_t maxlen, size_t *returned_len, char *delim, size_t delim_len TSRMLS_DC)\n{\n\tchar *e, *buf;\n\tsize_t toread, len;\n\tint skip = 0;\n\n\tlen = stream->writepos - stream->readpos;\n\n\t/* make sure the stream read buffer has maxlen bytes */\n\twhile (len < maxlen) {\n\n\t\tsize_t just_read;\n\t\ttoread = MIN(maxlen - len, stream->chunk_size);\n\n\t\tphp_stream_fill_read_buffer(stream, len + toread TSRMLS_CC);\n\n\t\tjust_read = (stream->writepos - stream->readpos) - len;\n\t\tlen += just_read;\n\n\t\t/* read operation have less data than request; assume the stream is\n\t\t * temporarily or permanently out of data */\n\t\tif (just_read < toread) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (delim_len == 0 || !delim) {\n\t\ttoread = maxlen;\n\t} else {\n\t\tsize_t seek_len;\n\n\t\t/* set the maximum number of bytes we're allowed to read from buffer */\n\t\tseek_len = stream->writepos - stream->readpos;\n\t\tif (seek_len > maxlen) {\n\t\t\tseek_len = maxlen;\n\t\t}\n\n\t\tif (delim_len == 1) {\n\t\t\te = memchr(stream->readbuf + stream->readpos, *delim, seek_len);\n\t\t} else {\n\t\t\te = php_memnstr(stream->readbuf + stream->readpos, delim, delim_len, (stream->readbuf + stream->readpos + seek_len));\n\t\t}\n\n\t\tif (!e) {\n\t\t\t/* return with error if the delimiter string was not found, we\n\t\t\t * could not completely fill the read buffer with maxlen bytes\n\t\t\t * and we don't know we've reached end of file. Added with\n\t\t\t * non-blocking streams in mind, where this situation is frequent */\n\t\t\tif (seek_len < maxlen && !stream->eof) {\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t\ttoread = maxlen;\n\t\t} else {\n\t\t\ttoread = e - (char *) stream->readbuf - stream->readpos;\n\t\t\t/* we found the delimiter, so advance the read pointer past it */\n\t\t\tskip = 1;\n\t\t}\n\t}\n\n\tif (toread > maxlen && maxlen > 0) {\n\t\ttoread = maxlen;\n\t}\n\n\tbuf = emalloc(toread + 1);\n\t*returned_len = php_stream_read(stream, buf, toread);\n\n\tif (skip) {\n\t\tstream->readpos += delim_len;\n\t\tstream->position += delim_len;\n\t}\n\tbuf[*returned_len] = '\\0';\n\treturn buf;\n}",
    "start": 973,
    "end": 1045,
    "fix": "PHPAPI char *php_stream_get_record(php_stream *stream, size_t maxlen, size_t *returned_len, char *delim, size_t delim_len TSRMLS_DC)\n{\n\tchar *e, *buf;\n\tsize_t toread, len;\n\tint skip = 0;\n\n\tlen = stream->writepos - stream->readpos;\n\n\t/* make sure the stream read buffer has maxlen bytes */\n\twhile (len < maxlen) {\n\n\t\tsize_t just_read;\n\t\ttoread = MIN(maxlen - len, stream->chunk_size);\n\n\t\tphp_stream_fill_read_buffer(stream, len + toread TSRMLS_CC);\n\n\t\tjust_read = (stream->writepos - stream->readpos) - len;\n\t\tlen += just_read;\n\n\t\t/* Assume the stream is temporarily or permanently out of data */\n\t\tif (just_read == 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (delim_len == 0 || !delim) {\n\t\ttoread = maxlen;\n\t} else {\n\t\tsize_t seek_len;\n\n\t\t/* set the maximum number of bytes we're allowed to read from buffer */\n\t\tseek_len = stream->writepos - stream->readpos;\n\t\tif (seek_len > maxlen) {\n\t\t\tseek_len = maxlen;\n\t\t}\n\n\t\tif (delim_len == 1) {\n\t\t\te = memchr(stream->readbuf + stream->readpos, *delim, seek_len);\n\t\t} else {\n\t\t\te = php_memnstr(stream->readbuf + stream->readpos, delim, delim_len, (stream->readbuf + stream->readpos + seek_len));\n\t\t}\n\n\t\tif (!e) {\n\t\t\t/* return with error if the delimiter string was not found, we\n\t\t\t * could not completely fill the read buffer with maxlen bytes\n\t\t\t * and we don't know we've reached end of file. Added with\n\t\t\t * non-blocking streams in mind, where this situation is frequent */\n\t\t\tif (seek_len < maxlen && !stream->eof) {\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t\ttoread = maxlen;\n\t\t} else {\n\t\t\ttoread = e - (char *) stream->readbuf - stream->readpos;\n\t\t\t/* we found the delimiter, so advance the read pointer past it */\n\t\t\tskip = 1;\n\t\t}\n\t}\n\n\tif (toread > maxlen && maxlen > 0) {\n\t\ttoread = maxlen;\n\t}\n\n\tbuf = emalloc(toread + 1);\n\t*returned_len = php_stream_read(stream, buf, toread);\n\n\tif (skip) {\n\t\tstream->readpos += delim_len;\n\t\tstream->position += delim_len;\n\t}\n\tbuf[*returned_len] = '\\0';\n\treturn buf;\n}",
    "filename": "main/streams/streams.c"
  },
  "php_2011-12-17-db63456a8d-3dc9f0abe6": {
    "buggy": "static void zend_do_traits_property_binding(zend_class_entry *ce TSRMLS_DC) /* {{{ */\n{\n\tsize_t i;\n\tzend_property_info *property_info;\n\tzend_property_info *coliding_prop;\n\tzval compare_result;\n\tconst char* prop_name;\n\tint   prop_name_length;\n\tulong prop_hash;\n\tconst char* class_name_unused;\n\tzend_bool prop_found;\n\tzend_bool not_compatible;\n\tzval* prop_value;\n\n\n\t/* In the following steps the properties are inserted into the property table\n\t * for that, a very strict approach is applied:\n\t * - check for compatibility, if not compatible with any property in class -> fatal\n\t * - if compatible, then strict notice\n\t */\n\tfor (i = 0; i < ce->num_traits; i++) {\n\t\tfor (zend_hash_internal_pointer_reset(&ce->traits[i]->properties_info);\n\t\t\t zend_hash_get_current_data(&ce->traits[i]->properties_info, (void *) &property_info) == SUCCESS;\n\t\t\t zend_hash_move_forward(&ce->traits[i]->properties_info)) {\n\t\t\t/* first get the unmangeld name if necessary,\n\t\t\t * then check whether the property is already there\n\t\t\t */\n\t\t\tif ((property_info->flags & ZEND_ACC_PPP_MASK) == ZEND_ACC_PUBLIC) {\n\t\t\t\tprop_hash = property_info->h;\n\t\t\t\tprop_name = property_info->name;\n\t\t\t\tprop_name_length = property_info->name_length;\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info,\n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->name, property_info->name_length+1, \n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->h, (void **) &coliding_prop) == SUCCESS;\n\t\t\t} else {\n\t\t\t\t/* for private and protected we need to unmangle the names */\n\t\t\t\tzend_unmangle_property_name(property_info->name, property_info->name_length,\n\t\t\t\t\t\t\t\t\t\t\t&class_name_unused, &prop_name);\n\t\t\t\tprop_name_length = strlen(prop_name);\n\t\t\t\tprop_hash = zend_get_hash_value(prop_name, prop_name_length + 1);\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop) == SUCCESS;\n\t\t\t}\n\n\t\t\t/* next: check for conflicts with current class */\n\t\t\tif (prop_found) {\n\t\t\t\tif (coliding_prop->flags & ZEND_ACC_SHADOW) {\n\t\t\t\t\t/* this one is inherited, lets look it up in its own class */\n\t\t\t\t\tzend_hash_quick_find(&coliding_prop->ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop);\n\t\t\t\t}\n\t\t\t\tif (   (coliding_prop->flags & (ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC))\n\t\t\t\t\t== (property_info->flags & (ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC))) {\n\t\t\t\t\t/* flags are identical, now the value needs to be checked */\n\t\t\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n                                          ce->default_static_members_table[coliding_prop->offset],\n                                          ce->traits[i]->default_static_members_table[property_info->offset] TSRMLS_CC))\n                              || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n                                          ce->default_properties_table[coliding_prop->offset],\n                                          ce->traits[i]->default_properties_table[property_info->offset] TSRMLS_CC))\n                              || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* the flags are not identical, thus, we assume properties are not compatible */\n\t\t\t\t\tnot_compatible = 1;\n\t\t\t\t}\n\n\t\t\t\tif (not_compatible) {\n\t\t\t\t\tzend_error(E_COMPILE_ERROR, \n\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed\",\n\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t} else {\n\t\t\t\t\tzend_error(E_STRICT, \n\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. This might be incompatible, to improve maintainability consider using accessor methods in traits instead. Class was composed\",\n\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* property not found, so lets add it */\n\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\tprop_value = ce->traits[i]->default_static_members_table[property_info->offset];\n\t\t\t} else {\n\t\t\t\tprop_value = ce->traits[i]->default_properties_table[property_info->offset];\n\t\t\t}\n\t\t\tZ_ADDREF_P(prop_value);\n\n\t\t\tzend_declare_property_ex(ce, prop_name, prop_name_length, \n\t\t\t\t\t\t\t\t\t prop_value, property_info->flags, \n\t\t\t\t\t\t\t\t     property_info->doc_comment, property_info->doc_comment_len TSRMLS_CC);\n\t\t}\n\t}\n}",
    "start": 4226,
    "end": 4324,
    "fix": "static void zend_do_traits_property_binding(zend_class_entry *ce TSRMLS_DC) /* {{{ */\n{\n\tsize_t i;\n\tzend_property_info *property_info;\n\tzend_property_info *coliding_prop;\n\tzval compare_result;\n\tconst char* prop_name;\n\tint   prop_name_length;\n\tulong prop_hash;\n\tconst char* class_name_unused;\n\tzend_bool prop_found;\n\tzend_bool parent_prop_is_private = 0;\n\tzend_bool not_compatible;\n\tzval* prop_value;\n\n\n\t/* In the following steps the properties are inserted into the property table\n\t * for that, a very strict approach is applied:\n\t * - check for compatibility, if not compatible with any property in class -> fatal\n\t * - if compatible, then strict notice\n\t */\n\tfor (i = 0; i < ce->num_traits; i++) {\n\t\tfor (zend_hash_internal_pointer_reset(&ce->traits[i]->properties_info);\n\t\t\t zend_hash_get_current_data(&ce->traits[i]->properties_info, (void *) &property_info) == SUCCESS;\n\t\t\t zend_hash_move_forward(&ce->traits[i]->properties_info)) {\n\t\t\t/* first get the unmangeld name if necessary,\n\t\t\t * then check whether the property is already there\n\t\t\t */\n\t\t\tif ((property_info->flags & ZEND_ACC_PPP_MASK) == ZEND_ACC_PUBLIC) {\n\t\t\t\tprop_hash = property_info->h;\n\t\t\t\tprop_name = property_info->name;\n\t\t\t\tprop_name_length = property_info->name_length;\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info,\n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->name, property_info->name_length+1, \n\t\t\t\t\t\t\t\t\t\t\t\t  property_info->h, (void **) &coliding_prop) == SUCCESS;\n\t\t\t} else {\n\t\t\t\t/* for private and protected we need to unmangle the names */\n\t\t\t\tzend_unmangle_property_name(property_info->name, property_info->name_length,\n\t\t\t\t\t\t\t\t\t\t\t&class_name_unused, &prop_name);\n\t\t\t\tprop_name_length = strlen(prop_name);\n\t\t\t\tprop_hash = zend_get_hash_value(prop_name, prop_name_length + 1);\n\t\t\t\tprop_found = zend_hash_quick_find(&ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop) == SUCCESS;\n\t\t\t}\n\n\t\t\t/* next: check for conflicts with current class */\n\t\t\tif (prop_found) {\n\t\t\t\tif (coliding_prop->flags & ZEND_ACC_SHADOW) {\n\t\t\t\t\t/* this one is inherited, lets look it up in its own class */\n\t\t\t\t\tzend_hash_quick_find(&coliding_prop->ce->properties_info, prop_name, prop_name_length+1, prop_hash, (void **) &coliding_prop);\n\t\t\t\t\tparent_prop_is_private = (coliding_prop->flags & ZEND_ACC_PRIVATE) == ZEND_ACC_PRIVATE;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!parent_prop_is_private) {\n\t\t\t\t\tif (   (coliding_prop->flags & (ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC))\n\t\t\t\t\t\t== (property_info->flags & (ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC))) {\n\t\t\t\t\t\t/* flags are identical, now the value needs to be checked */\n\t\t\t\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n\t\t\t\t\t\t\t\t\t\t\t  ce->default_static_members_table[coliding_prop->offset],\n\t\t\t\t\t\t\t\t\t\t\t  ce->traits[i]->default_static_members_table[property_info->offset] TSRMLS_CC))\n\t\t\t\t\t\t\t\t  || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnot_compatible = (FAILURE == compare_function(&compare_result,\n\t\t\t\t\t\t\t\t\t\t\t  ce->default_properties_table[coliding_prop->offset],\n\t\t\t\t\t\t\t\t\t\t\t  ce->traits[i]->default_properties_table[property_info->offset] TSRMLS_CC))\n\t\t\t\t\t\t\t\t  || (Z_LVAL(compare_result) != 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* the flags are not identical, thus, we assume properties are not compatible */\n\t\t\t\t\t\tnot_compatible = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (not_compatible) {\n\t\t\t\t\t\tzend_error(E_COMPILE_ERROR, \n\t\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed\",\n\t\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzend_error(E_STRICT, \n\t\t\t\t\t\t\t\t   \"%s and %s define the same property ($%s) in the composition of %s. This might be incompatible, to improve maintainability consider using accessor methods in traits instead. Class was composed\",\n\t\t\t\t\t\t\t\t\tfind_first_definition(ce, i, prop_name, prop_name_length, prop_hash, coliding_prop->ce)->name,\n\t\t\t\t\t\t\t\t\tproperty_info->ce->name,\n\t\t\t\t\t\t\t\t\tprop_name,\n\t\t\t\t\t\t\t\t\tce->name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* property not found, so lets add it */\n\t\t\tif (property_info->flags & ZEND_ACC_STATIC) {\n\t\t\t\tprop_value = ce->traits[i]->default_static_members_table[property_info->offset];\n\t\t\t} else {\n\t\t\t\tprop_value = ce->traits[i]->default_properties_table[property_info->offset];\n\t\t\t}\n\t\t\tZ_ADDREF_P(prop_value);\n\n\t\t\tzend_declare_property_ex(ce, prop_name, prop_name_length, \n\t\t\t\t\t\t\t\t\t prop_value, property_info->flags, \n\t\t\t\t\t\t\t\t     property_info->doc_comment, property_info->doc_comment_len TSRMLS_CC);\n\t\t}\n\t}\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2012-01-01-80dd931d40-7c3177e5ab": {
    "buggy": "SAPI_API SAPI_POST_HANDLER_FUNC(rfc1867_post_handler) /* {{{ */\n{\n\tchar *boundary, *s = NULL, *boundary_end = NULL, *start_arr = NULL, *array_index = NULL;\n\tchar *temp_filename = NULL, *lbuf = NULL, *abuf = NULL;\n\tint boundary_len = 0, total_bytes = 0, cancel_upload = 0, is_arr_upload = 0, array_len = 0;\n\tint max_file_size = 0, skip_upload = 0, anonindex = 0, is_anonymous;\n\tzval *http_post_files = NULL;\n\tHashTable *uploaded_files = NULL;\n\tmultipart_buffer *mbuff;\n\tzval *array_ptr = (zval *) arg;\n\tint fd = -1;\n\tzend_llist header;\n\tvoid *event_extra_data = NULL;\n\tunsigned int llen = 0;\n\tint upload_cnt = INI_INT(\"max_file_uploads\");\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tphp_rfc1867_getword_t getword;\n\tphp_rfc1867_getword_conf_t getword_conf;\n\tphp_rfc1867_basename_t _basename;\n\n\tif (php_rfc1867_encoding_translation(TSRMLS_C) && internal_encoding) {\n\t\tgetword = php_rfc1867_getword;\n\t\tgetword_conf = php_rfc1867_getword_conf;\n\t\t_basename = php_rfc1867_basename;\n\t} else {\n\t\tgetword = php_ap_getword;\n\t\tgetword_conf = php_ap_getword_conf;\n\t\t_basename = php_ap_basename;\n\t}\n\n\tif (SG(post_max_size) > 0 && SG(request_info).content_length > SG(post_max_size)) {\n\t\tsapi_module.sapi_error(E_WARNING, \"POST Content-Length of %ld bytes exceeds the limit of %ld bytes\", SG(request_info).content_length, SG(post_max_size));\n\t\treturn;\n\t}\n\n\t/* Get the boundary */\n\tboundary = strstr(content_type_dup, \"boundary\");\n\tif (!boundary) {\n\t\tint content_type_len = strlen(content_type_dup);\n\t\tchar *content_type_lcase = estrndup(content_type_dup, content_type_len);\n\n\t\tphp_strtolower(content_type_lcase, content_type_len);\n\t\tboundary = strstr(content_type_lcase, \"boundary\");\n\t\tif (boundary) {\n\t\t\tboundary = content_type_dup + (boundary - content_type_lcase);\n\t\t}\n\t\tefree(content_type_lcase);\n\t}\n\n\tif (!boundary || !(boundary = strchr(boundary, '='))) {\n\t\tsapi_module.sapi_error(E_WARNING, \"Missing boundary in multipart/form-data POST data\");\n\t\treturn;\n\t}\n\n\tboundary++;\n\tboundary_len = strlen(boundary);\n\n\tif (boundary[0] == '\"') {\n\t\tboundary++;\n\t\tboundary_end = strchr(boundary, '\"');\n\t\tif (!boundary_end) {\n\t\t\tsapi_module.sapi_error(E_WARNING, \"Invalid boundary in multipart/form-data POST data\");\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\t/* search for the end of the boundary */\n\t\tboundary_end = strpbrk(boundary, \",;\");\n\t}\n\tif (boundary_end) {\n\t\tboundary_end[0] = '\\0';\n\t\tboundary_len = boundary_end-boundary;\n\t}\n\n\t/* Initialize the buffer */\n\tif (!(mbuff = multipart_buffer_new(boundary, boundary_len TSRMLS_CC))) {\n\t\tsapi_module.sapi_error(E_WARNING, \"Unable to initialize the input buffer\");\n\t\treturn;\n\t}\n\n\t/* Initialize $_FILES[] */\n\tzend_hash_init(&PG(rfc1867_protected_variables), 5, NULL, NULL, 0);\n\n\tALLOC_HASHTABLE(uploaded_files);\n\tzend_hash_init(uploaded_files, 5, NULL, (dtor_func_t) free_estring, 0);\n\tSG(rfc1867_uploaded_files) = uploaded_files;\n\n\tALLOC_ZVAL(http_post_files);\n\tarray_init(http_post_files);\n\tINIT_PZVAL(http_post_files);\n\tPG(http_globals)[TRACK_VARS_FILES] = http_post_files;\n\n\tzend_llist_init(&header, sizeof(mime_header_entry), (llist_dtor_func_t) php_free_hdr_entry, 0);\n\n\tif (php_rfc1867_callback != NULL) {\n\t\tmultipart_event_start event_start;\n\n\t\tevent_start.content_length = SG(request_info).content_length;\n\t\tif (php_rfc1867_callback(MULTIPART_EVENT_START, &event_start, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\tgoto fileupload_done;\n\t\t}\n\t}\n\n\twhile (!multipart_buffer_eof(mbuff TSRMLS_CC))\n\t{\n\t\tchar buff[FILLUNIT];\n\t\tchar *cd = NULL, *param = NULL, *filename = NULL, *tmp = NULL;\n\t\tsize_t blen = 0, wlen = 0;\n\t\toff_t offset;\n\n\t\tzend_llist_clean(&header);\n\n\t\tif (!multipart_buffer_headers(mbuff, &header TSRMLS_CC)) {\n\t\t\tgoto fileupload_done;\n\t\t}\n\n\t\tif ((cd = php_mime_get_hdr_value(header, \"Content-Disposition\"))) {\n\t\t\tchar *pair = NULL;\n\t\t\tint end = 0;\n\n\t\t\twhile (isspace(*cd)) {\n\t\t\t\t++cd;\n\t\t\t}\n\n\t\t\twhile (*cd && (pair = getword(mbuff->input_encoding, &cd, ';' TSRMLS_CC)))\n\t\t\t{\n\t\t\t\tchar *key = NULL, *word = pair;\n\n\t\t\t\twhile (isspace(*cd)) {\n\t\t\t\t\t++cd;\n\t\t\t\t}\n\n\t\t\t\tif (strchr(pair, '=')) {\n\t\t\t\t\tkey = getword(mbuff->input_encoding, &pair, '=' TSRMLS_CC);\n\n\t\t\t\t\tif (!strcasecmp(key, \"name\")) {\n\t\t\t\t\t\tif (param) {\n\t\t\t\t\t\t\tefree(param);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparam = getword_conf(mbuff->input_encoding, pair TSRMLS_CC);\n\t\t\t\t\t\tif (mbuff->input_encoding && internal_encoding) {\n\t\t\t\t\t\t\tunsigned char *new_param;\n\t\t\t\t\t\t\tsize_t new_param_len;\n\t\t\t\t\t\t\tif ((size_t)-1 != zend_multibyte_encoding_converter(&new_param, &new_param_len, (unsigned char *)param, strlen(param), internal_encoding, mbuff->input_encoding TSRMLS_CC)) {\n\t\t\t\t\t\t\t\tefree(param);\n\t\t\t\t\t\t\t\tparam = (char *)new_param;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!strcasecmp(key, \"filename\")) {\n\t\t\t\t\t\tif (filename) {\n\t\t\t\t\t\t\tefree(filename);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilename = getword_conf(mbuff->input_encoding, pair TSRMLS_CC);\n\t\t\t\t\t\tif (mbuff->input_encoding && internal_encoding) {\n\t\t\t\t\t\t\tunsigned char *new_filename;\n\t\t\t\t\t\t\tsize_t new_filename_len;\n\t\t\t\t\t\t\tif ((size_t)-1 != zend_multibyte_encoding_converter(&new_filename, &new_filename_len, (unsigned char *)filename, strlen(filename), internal_encoding, mbuff->input_encoding TSRMLS_CC)) {\n\t\t\t\t\t\t\t\tefree(filename);\n\t\t\t\t\t\t\t\tfilename = (char *)new_filename;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (key) {\n\t\t\t\t\tefree(key);\n\t\t\t\t}\n\t\t\t\tefree(word);\n\t\t\t}\n\n\t\t\t/* Normal form variable, safe to read all data into memory */\n\t\t\tif (!filename && param) {\n\t\t\t\tunsigned int value_len;\n\t\t\t\tchar *value = multipart_buffer_read_body(mbuff, &value_len TSRMLS_CC);\n\t\t\t\tunsigned int new_val_len; /* Dummy variable */\n\n\t\t\t\tif (!value) {\n\t\t\t\t\tvalue = estrdup(\"\");\n\t\t\t\t\tvalue_len = 0;\n\t\t\t\t}\n\n\t\t\t\tif (mbuff->input_encoding && internal_encoding) {\n\t\t\t\t\tunsigned char *new_value;\n\t\t\t\t\tsize_t new_value_len;\n\t\t\t\t\tif ((size_t)-1 != zend_multibyte_encoding_converter(&new_value, &new_value_len, (unsigned char *)value, value_len, internal_encoding, mbuff->input_encoding TSRMLS_CC)) {\n\t\t\t\t\t\tefree(value);\n\t\t\t\t\t\tvalue = (char *)new_value;\n\t\t\t\t\t\tvalue_len = new_value_len;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sapi_module.input_filter(PARSE_POST, param, &value, value_len, &new_val_len TSRMLS_CC)) {\n\t\t\t\t\tif (php_rfc1867_callback != NULL) {\n\t\t\t\t\t\tmultipart_event_formdata event_formdata;\n\t\t\t\t\t\tsize_t newlength = new_val_len;\n\n\t\t\t\t\t\tevent_formdata.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\t\t\tevent_formdata.name = param;\n\t\t\t\t\t\tevent_formdata.value = &value;\n\t\t\t\t\t\tevent_formdata.length = new_val_len;\n\t\t\t\t\t\tevent_formdata.newlength = &newlength;\n\t\t\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FORMDATA, &event_formdata, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\t\t\tefree(param);\n\t\t\t\t\t\t\tefree(value);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnew_val_len = newlength;\n\t\t\t\t\t}\n\t\t\t\t\tsafe_php_register_variable(param, value, new_val_len, array_ptr, 0 TSRMLS_CC);\n\t\t\t\t} else if (php_rfc1867_callback != NULL) {\n\t\t\t\t\tmultipart_event_formdata event_formdata;\n\n\t\t\t\t\tevent_formdata.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\t\tevent_formdata.name = param;\n\t\t\t\t\tevent_formdata.value = &value;\n\t\t\t\t\tevent_formdata.length = value_len;\n\t\t\t\t\tevent_formdata.newlength = NULL;\n\t\t\t\t\tphp_rfc1867_callback(MULTIPART_EVENT_FORMDATA, &event_formdata, &event_extra_data TSRMLS_CC);\n\t\t\t\t}\n\n\t\t\t\tif (!strcasecmp(param, \"MAX_FILE_SIZE\")) {\n\t\t\t\t\tmax_file_size = atol(value);\n\t\t\t\t}\n\n\t\t\t\tefree(param);\n\t\t\t\tefree(value);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/* If file_uploads=off, skip the file part */\n\t\t\tif (!PG(file_uploads)) {\n\t\t\t\tskip_upload = 1;\n\t\t\t} else if (upload_cnt <= 0) {\n\t\t\t\tskip_upload = 1;\n\t\t\t\tsapi_module.sapi_error(E_WARNING, \"Maximum number of allowable file uploads has been exceeded\");\n\t\t\t}\n\n\t\t\t/* Return with an error if the posted data is garbled */\n\t\t\tif (!param && !filename) {\n\t\t\t\tsapi_module.sapi_error(E_WARNING, \"File Upload Mime headers garbled\");\n\t\t\t\tgoto fileupload_done;\n\t\t\t}\n\n\t\t\tif (!param) {\n\t\t\t\tis_anonymous = 1;\n\t\t\t\tparam = emalloc(MAX_SIZE_ANONNAME);\n\t\t\t\tsnprintf(param, MAX_SIZE_ANONNAME, \"%u\", anonindex++);\n\t\t\t} else {\n\t\t\t\tis_anonymous = 0;\n\t\t\t}\n\n\t\t\t/* New Rule: never repair potential malicious user input */\n\t\t\tif (!skip_upload) {\n\t\t\t\tlong c = 0;\n\t\t\t\ttmp = param;\n\n\t\t\t\twhile (*tmp) {\n\t\t\t\t\tif (*tmp == '[') {\n\t\t\t\t\t\tc++;\n\t\t\t\t\t} else if (*tmp == ']') {\n\t\t\t\t\t\tc--;\n\t\t\t\t\t\tif (tmp[1] && tmp[1] != '[') {\n\t\t\t\t\t\t\tskip_upload = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c < 0) {\n\t\t\t\t\t\tskip_upload = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttmp++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttotal_bytes = cancel_upload = 0;\n\t\t\ttemp_filename = NULL;\n\t\t\tfd = -1;\n\n\t\t\tif (!skip_upload && php_rfc1867_callback != NULL) {\n\t\t\t\tmultipart_event_file_start event_file_start;\n\n\t\t\t\tevent_file_start.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\tevent_file_start.name = param;\n\t\t\t\tevent_file_start.filename = &filename;\n\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FILE_START, &event_file_start, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\ttemp_filename = \"\";\n\t\t\t\t\tefree(param);\n\t\t\t\t\tefree(filename);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skip_upload) {\n\t\t\t\tefree(param);\n\t\t\t\tefree(filename);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (strlen(filename) == 0) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"No file uploaded\");\n#endif\n\t\t\t\tcancel_upload = UPLOAD_ERROR_D;\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tend = 0;\n\t\t\t\n\t\t\tif (!cancel_upload) {\n\t\t\t\t/* only bother to open temp file if we have data */\n\t\t\t\tblen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC);\n#if DEBUG_FILE_UPLOAD\n\t\t\t\tif (blen > 0) {\n#else\n\t\t\t\t/* in non-debug mode we have no problem with 0-length files */\n\t\t\t\t{\n#endif\n\t\t\t\t\tfd = php_open_temporary_fd_ex(PG(upload_tmp_dir), \"php\", &temp_filename, 1 TSRMLS_CC);\n\t\t\t\t\tupload_cnt--;\n\t\t\t\t\tif (fd == -1) {\n\t\t\t\t\t\tsapi_module.sapi_error(E_WARNING, \"File upload error - unable to create a temporary file\");\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_E;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (!cancel_upload && (blen > 0))\n\t\t\t{\n\t\t\t\tif (php_rfc1867_callback != NULL) {\n\t\t\t\t\tmultipart_event_file_data event_file_data;\n\n\t\t\t\t\tevent_file_data.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\t\tevent_file_data.offset = offset;\n\t\t\t\t\tevent_file_data.data = buff;\n\t\t\t\t\tevent_file_data.length = blen;\n\t\t\t\t\tevent_file_data.newlength = &blen;\n\t\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FILE_DATA, &event_file_data, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_X;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (PG(upload_max_filesize) > 0 && (long)(total_bytes+blen) > PG(upload_max_filesize)) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"upload_max_filesize of %ld bytes exceeded - file [%s=%s] not saved\", PG(upload_max_filesize), param, filename);\n#endif\n\t\t\t\t\tcancel_upload = UPLOAD_ERROR_A;\n\t\t\t\t} else if (max_file_size && ((long)(total_bytes+blen) > max_file_size)) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"MAX_FILE_SIZE of %ld bytes exceeded - file [%s=%s] not saved\", max_file_size, param, filename);\n#endif\n\t\t\t\t\tcancel_upload = UPLOAD_ERROR_B;\n\t\t\t\t} else if (blen > 0) {\n\t\t\t\t\twlen = write(fd, buff, blen);\n\n\t\t\t\t\tif (wlen == -1) {\n\t\t\t\t\t\t/* write failed */\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"write() failed - %s\", strerror(errno));\n#endif\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_F;\n\t\t\t\t\t} else if (wlen < blen) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"Only %d bytes were written, expected to write %d\", wlen, blen);\n#endif\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_F;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttotal_bytes += wlen;\n\t\t\t\t\t}\n\t\t\t\t\toffset += wlen;\n\t\t\t\t}\n\n\t\t\t\t/* read data for next iteration */\n\t\t\t\tblen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC);\n\t\t\t}\n\n\t\t\tif (fd != -1) { /* may not be initialized if file could not be created */\n\t\t\t\tclose(fd);\n\t\t\t}\n\n\t\t\tif (!cancel_upload && !end) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"Missing mime boundary at the end of the data for file %s\", strlen(filename) > 0 ? filename : \"\");\n#endif\n\t\t\t\tcancel_upload = UPLOAD_ERROR_C;\n\t\t\t}\n#if DEBUG_FILE_UPLOAD\n\t\t\tif (strlen(filename) > 0 && total_bytes == 0 && !cancel_upload) {\n\t\t\t\tsapi_module.sapi_error(E_WARNING, \"Uploaded file size 0 - file [%s=%s] not saved\", param, filename);\n\t\t\t\tcancel_upload = 5;\n\t\t\t}\n#endif\n\t\t\tif (php_rfc1867_callback != NULL) {\n\t\t\t\tmultipart_event_file_end event_file_end;\n\n\t\t\t\tevent_file_end.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\tevent_file_end.temp_filename = temp_filename;\n\t\t\t\tevent_file_end.cancel_upload = cancel_upload;\n\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FILE_END, &event_file_end, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\tcancel_upload = UPLOAD_ERROR_X;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cancel_upload) {\n\t\t\t\tif (temp_filename) {\n\t\t\t\t\tif (cancel_upload != UPLOAD_ERROR_E) { /* file creation failed */\n\t\t\t\t\t\tunlink(temp_filename);\n\t\t\t\t\t}\n\t\t\t\t\tefree(temp_filename);\n\t\t\t\t}\n\t\t\t\ttemp_filename = \"\";\n\t\t\t} else {\n\t\t\t\tzend_hash_add(SG(rfc1867_uploaded_files), temp_filename, strlen(temp_filename) + 1, &temp_filename, sizeof(char *), NULL);\n\t\t\t}\n\n\t\t\t/* is_arr_upload is true when name of file upload field\n\t\t\t * ends in [.*]\n\t\t\t * start_arr is set to point to 1st [ */\n\t\t\tis_arr_upload =\t(start_arr = strchr(param,'[')) && (param[strlen(param)-1] == ']');\n\n\t\t\tif (is_arr_upload) {\n\t\t\t\tarray_len = strlen(start_arr);\n\t\t\t\tif (array_index) {\n\t\t\t\t\tefree(array_index);\n\t\t\t\t}\n\t\t\t\tarray_index = estrndup(start_arr + 1, array_len - 2);\n\t\t\t}\n\n\t\t\t/* Add $foo_name */\n\t\t\tif (llen < strlen(param) + MAX_SIZE_OF_INDEX + 1) {\n\t\t\t\tllen = strlen(param);\n\t\t\t\tlbuf = (char *) safe_erealloc(lbuf, llen, 1, MAX_SIZE_OF_INDEX + 1);\n\t\t\t\tllen += MAX_SIZE_OF_INDEX + 1;\n\t\t\t}\n\n\t\t\tif (is_arr_upload) {\n\t\t\t\tif (abuf) efree(abuf);\n\t\t\t\tabuf = estrndup(param, strlen(param)-array_len);\n\t\t\t\tsnprintf(lbuf, llen, \"%s_name[%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s_name\", param);\n\t\t\t}\n\n\t\t\t/* The \\ check should technically be needed for win32 systems only where\n\t\t\t * it is a valid path separator. However, IE in all it's wisdom always sends\n\t\t\t * the full path of the file on the user's filesystem, which means that unless\n\t\t\t * the user does basename() they get a bogus file name. Until IE's user base drops\n\t\t\t * to nill or problem is fixed this code must remain enabled for all systems. */\n\t\t\ts = _basename(internal_encoding, filename TSRMLS_CC);\n\t\t\tif (!s) {\n\t\t\t\ts = filename;\n\t\t\t}\n\n\t\t\tif (!is_anonymous) {\n\t\t\t\tsafe_php_register_variable(lbuf, s, strlen(s), NULL, 0 TSRMLS_CC);\n\t\t\t}\n\n\t\t\t/* Add $foo[name] */\n\t\t\tif (is_arr_upload) {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[name][%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[name]\", param);\n\t\t\t}\n\t\t\tregister_http_post_files_variable(lbuf, s, http_post_files, 0 TSRMLS_CC);\n\t\t\tefree(filename);\n\t\t\ts = NULL;\n\n\t\t\t/* Possible Content-Type: */\n\t\t\tif (cancel_upload || !(cd = php_mime_get_hdr_value(header, \"Content-Type\"))) {\n\t\t\t\tcd = \"\";\n\t\t\t} else {\n\t\t\t\t/* fix for Opera 6.01 */\n\t\t\t\ts = strchr(cd, ';');\n\t\t\t\tif (s != NULL) {\n\t\t\t\t\t*s = '\\0';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Add $foo_type */\n\t\t\tif (is_arr_upload) {\n\t\t\t\tsnprintf(lbuf, llen, \"%s_type[%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s_type\", param);\n\t\t\t}\n\t\t\tif (!is_anonymous) {\n\t\t\t\tsafe_php_register_variable(lbuf, cd, strlen(cd), NULL, 0 TSRMLS_CC);\n\t\t\t}\n\n\t\t\t/* Add $foo[type] */\n\t\t\tif (is_arr_upload) {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[type][%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[type]\", param);\n\t\t\t}\n\t\t\tregister_http_post_files_variable(lbuf, cd, http_post_files, 0 TSRMLS_CC);\n\n\t\t\t/* Restore Content-Type Header */\n\t\t\tif (s != NULL) {\n\t\t\t\t*s = ';';\n\t\t\t}\n\t\t\ts = \"\";\n\n\t\t\t{\n\t\t\t\t/* store temp_filename as-is (in case upload_tmp_dir\n\t\t\t\t * contains escapeable characters. escape only the variable name.) */\n\t\t\t\tzval zfilename;\n\n\t\t\t\t/* Initialize variables */\n\t\t\t\tadd_protected_variable(param TSRMLS_CC);\n\n\t\t\t\t/* if param is of form xxx[.*] this will cut it to xxx */\n\t\t\t\tif (!is_anonymous) {\n\t\t\t\t\tZVAL_STRING(&zfilename, temp_filename, 1);\n\t\t\t\t\tsafe_php_register_variable_ex(param, &zfilename, NULL, 1 TSRMLS_CC);\n\t\t\t\t}\n\n\t\t\t\t/* Add $foo[tmp_name] */\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[tmp_name][%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[tmp_name]\", param);\n\t\t\t\t}\n\t\t\t\tadd_protected_variable(lbuf TSRMLS_CC);\n\t\t\t\tZVAL_STRING(&zfilename, temp_filename, 1);\n\t\t\t\tregister_http_post_files_variable_ex(lbuf, &zfilename, http_post_files, 1 TSRMLS_CC);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tzval file_size, error_type;\n\n\t\t\t\terror_type.value.lval = cancel_upload;\n\t\t\t\terror_type.type = IS_LONG;\n\n\t\t\t\t/* Add $foo[error] */\n\t\t\t\tif (cancel_upload) {\n\t\t\t\t\tfile_size.value.lval = 0;\n\t\t\t\t\tfile_size.type = IS_LONG;\n\t\t\t\t} else {\n\t\t\t\t\tfile_size.value.lval = total_bytes;\n\t\t\t\t\tfile_size.type = IS_LONG;\n\t\t\t\t}\n\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[error][%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[error]\", param);\n\t\t\t\t}\n\t\t\t\tregister_http_post_files_variable_ex(lbuf, &error_type, http_post_files, 0 TSRMLS_CC);\n\n\t\t\t\t/* Add $foo_size */\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s_size[%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s_size\", param);\n\t\t\t\t}\n\t\t\t\tif (!is_anonymous) {\n\t\t\t\t\tsafe_php_register_variable_ex(lbuf, &file_size, NULL, 0 TSRMLS_CC);\n\t\t\t\t}\n\n\t\t\t\t/* Add $foo[size] */\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[size][%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[size]\", param);\n\t\t\t\t}\n\t\t\t\tregister_http_post_files_variable_ex(lbuf, &file_size, http_post_files, 0 TSRMLS_CC);\n\t\t\t}\n\t\t\tefree(param);\n\t\t}\n\t}\n\nfileupload_done:\n\tif (php_rfc1867_callback != NULL) {\n\t\tmultipart_event_end event_end;\n\n\t\tevent_end.post_bytes_processed = SG(read_post_bytes);\n\t\tphp_rfc1867_callback(MULTIPART_EVENT_END, &event_end, &event_extra_data TSRMLS_CC);\n\t}\n\n\tif (lbuf) efree(lbuf);\n\tif (abuf) efree(abuf);\n\tif (array_index) efree(array_index);\n\tzend_hash_destroy(&PG(rfc1867_protected_variables));\n\tzend_llist_destroy(&header);\n\tif (mbuff->boundary_next) efree(mbuff->boundary_next);\n\tif (mbuff->boundary) efree(mbuff->boundary);\n\tif (mbuff->buffer) efree(mbuff->buffer);\n\tif (mbuff) efree(mbuff);\n}",
    "start": 675,
    "end": 1261,
    "fix": "SAPI_API SAPI_POST_HANDLER_FUNC(rfc1867_post_handler) /* {{{ */\n{\n\tchar *boundary, *s = NULL, *boundary_end = NULL, *start_arr = NULL, *array_index = NULL;\n\tchar *temp_filename = NULL, *lbuf = NULL, *abuf = NULL;\n\tint boundary_len = 0, total_bytes = 0, cancel_upload = 0, is_arr_upload = 0, array_len = 0;\n\tint max_file_size = 0, skip_upload = 0, anonindex = 0, is_anonymous;\n\tzval *http_post_files = NULL;\n\tHashTable *uploaded_files = NULL;\n\tmultipart_buffer *mbuff;\n\tzval *array_ptr = (zval *) arg;\n\tint fd = -1;\n\tzend_llist header;\n\tvoid *event_extra_data = NULL;\n\tunsigned int llen = 0;\n\tint upload_cnt = INI_INT(\"max_file_uploads\");\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tphp_rfc1867_getword_t getword;\n\tphp_rfc1867_getword_conf_t getword_conf;\n\tphp_rfc1867_basename_t _basename;\n\n\tif (php_rfc1867_encoding_translation(TSRMLS_C) && internal_encoding) {\n\t\tgetword = php_rfc1867_getword;\n\t\tgetword_conf = php_rfc1867_getword_conf;\n\t\t_basename = php_rfc1867_basename;\n\t} else {\n\t\tgetword = php_ap_getword;\n\t\tgetword_conf = php_ap_getword_conf;\n\t\t_basename = php_ap_basename;\n\t}\n\n\tif (SG(post_max_size) > 0 && SG(request_info).content_length > SG(post_max_size)) {\n\t\tsapi_module.sapi_error(E_WARNING, \"POST Content-Length of %ld bytes exceeds the limit of %ld bytes\", SG(request_info).content_length, SG(post_max_size));\n\t\treturn;\n\t}\n\n\t/* Get the boundary */\n\tboundary = strstr(content_type_dup, \"boundary\");\n\tif (!boundary) {\n\t\tint content_type_len = strlen(content_type_dup);\n\t\tchar *content_type_lcase = estrndup(content_type_dup, content_type_len);\n\n\t\tphp_strtolower(content_type_lcase, content_type_len);\n\t\tboundary = strstr(content_type_lcase, \"boundary\");\n\t\tif (boundary) {\n\t\t\tboundary = content_type_dup + (boundary - content_type_lcase);\n\t\t}\n\t\tefree(content_type_lcase);\n\t}\n\n\tif (!boundary || !(boundary = strchr(boundary, '='))) {\n\t\tsapi_module.sapi_error(E_WARNING, \"Missing boundary in multipart/form-data POST data\");\n\t\treturn;\n\t}\n\n\tboundary++;\n\tboundary_len = strlen(boundary);\n\n\tif (boundary[0] == '\"') {\n\t\tboundary++;\n\t\tboundary_end = strchr(boundary, '\"');\n\t\tif (!boundary_end) {\n\t\t\tsapi_module.sapi_error(E_WARNING, \"Invalid boundary in multipart/form-data POST data\");\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\t/* search for the end of the boundary */\n\t\tboundary_end = strpbrk(boundary, \",;\");\n\t}\n\tif (boundary_end) {\n\t\tboundary_end[0] = '\\0';\n\t\tboundary_len = boundary_end-boundary;\n\t}\n\n\t/* Initialize the buffer */\n\tif (!(mbuff = multipart_buffer_new(boundary, boundary_len TSRMLS_CC))) {\n\t\tsapi_module.sapi_error(E_WARNING, \"Unable to initialize the input buffer\");\n\t\treturn;\n\t}\n\n\t/* Initialize $_FILES[] */\n\tzend_hash_init(&PG(rfc1867_protected_variables), 5, NULL, NULL, 0);\n\n\tALLOC_HASHTABLE(uploaded_files);\n\tzend_hash_init(uploaded_files, 5, NULL, (dtor_func_t) free_estring, 0);\n\tSG(rfc1867_uploaded_files) = uploaded_files;\n\n\tALLOC_ZVAL(http_post_files);\n\tarray_init(http_post_files);\n\tINIT_PZVAL(http_post_files);\n\tPG(http_globals)[TRACK_VARS_FILES] = http_post_files;\n\n\tzend_llist_init(&header, sizeof(mime_header_entry), (llist_dtor_func_t) php_free_hdr_entry, 0);\n\n\tif (php_rfc1867_callback != NULL) {\n\t\tmultipart_event_start event_start;\n\n\t\tevent_start.content_length = SG(request_info).content_length;\n\t\tif (php_rfc1867_callback(MULTIPART_EVENT_START, &event_start, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\tgoto fileupload_done;\n\t\t}\n\t}\n\n\twhile (!multipart_buffer_eof(mbuff TSRMLS_CC))\n\t{\n\t\tchar buff[FILLUNIT];\n\t\tchar *cd = NULL, *param = NULL, *filename = NULL, *tmp = NULL;\n\t\tsize_t blen = 0, wlen = 0;\n\t\toff_t offset;\n\n\t\tzend_llist_clean(&header);\n\n\t\tif (!multipart_buffer_headers(mbuff, &header TSRMLS_CC)) {\n\t\t\tgoto fileupload_done;\n\t\t}\n\n\t\tif ((cd = php_mime_get_hdr_value(header, \"Content-Disposition\"))) {\n\t\t\tchar *pair = NULL;\n\t\t\tint end = 0;\n\n\t\t\twhile (isspace(*cd)) {\n\t\t\t\t++cd;\n\t\t\t}\n\n\t\t\twhile (*cd && (pair = getword(mbuff->input_encoding, &cd, ';' TSRMLS_CC)))\n\t\t\t{\n\t\t\t\tchar *key = NULL, *word = pair;\n\n\t\t\t\twhile (isspace(*cd)) {\n\t\t\t\t\t++cd;\n\t\t\t\t}\n\n\t\t\t\tif (strchr(pair, '=')) {\n\t\t\t\t\tkey = getword(mbuff->input_encoding, &pair, '=' TSRMLS_CC);\n\n\t\t\t\t\tif (!strcasecmp(key, \"name\")) {\n\t\t\t\t\t\tif (param) {\n\t\t\t\t\t\t\tefree(param);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparam = getword_conf(mbuff->input_encoding, pair TSRMLS_CC);\n\t\t\t\t\t\tif (mbuff->input_encoding && internal_encoding) {\n\t\t\t\t\t\t\tunsigned char *new_param;\n\t\t\t\t\t\t\tsize_t new_param_len;\n\t\t\t\t\t\t\tif ((size_t)-1 != zend_multibyte_encoding_converter(&new_param, &new_param_len, (unsigned char *)param, strlen(param), internal_encoding, mbuff->input_encoding TSRMLS_CC)) {\n\t\t\t\t\t\t\t\tefree(param);\n\t\t\t\t\t\t\t\tparam = (char *)new_param;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!strcasecmp(key, \"filename\")) {\n\t\t\t\t\t\tif (filename) {\n\t\t\t\t\t\t\tefree(filename);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilename = getword_conf(mbuff->input_encoding, pair TSRMLS_CC);\n\t\t\t\t\t\tif (mbuff->input_encoding && internal_encoding) {\n\t\t\t\t\t\t\tunsigned char *new_filename;\n\t\t\t\t\t\t\tsize_t new_filename_len;\n\t\t\t\t\t\t\tif ((size_t)-1 != zend_multibyte_encoding_converter(&new_filename, &new_filename_len, (unsigned char *)filename, strlen(filename), internal_encoding, mbuff->input_encoding TSRMLS_CC)) {\n\t\t\t\t\t\t\t\tefree(filename);\n\t\t\t\t\t\t\t\tfilename = (char *)new_filename;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (key) {\n\t\t\t\t\tefree(key);\n\t\t\t\t}\n\t\t\t\tefree(word);\n\t\t\t}\n\n\t\t\t/* Normal form variable, safe to read all data into memory */\n\t\t\tif (!filename && param) {\n\t\t\t\tunsigned int value_len;\n\t\t\t\tchar *value = multipart_buffer_read_body(mbuff, &value_len TSRMLS_CC);\n\t\t\t\tunsigned int new_val_len; /* Dummy variable */\n\n\t\t\t\tif (!value) {\n\t\t\t\t\tvalue = estrdup(\"\");\n\t\t\t\t\tvalue_len = 0;\n\t\t\t\t}\n\n\t\t\t\tif (mbuff->input_encoding && internal_encoding) {\n\t\t\t\t\tunsigned char *new_value;\n\t\t\t\t\tsize_t new_value_len;\n\t\t\t\t\tif ((size_t)-1 != zend_multibyte_encoding_converter(&new_value, &new_value_len, (unsigned char *)value, value_len, internal_encoding, mbuff->input_encoding TSRMLS_CC)) {\n\t\t\t\t\t\tefree(value);\n\t\t\t\t\t\tvalue = (char *)new_value;\n\t\t\t\t\t\tvalue_len = new_value_len;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sapi_module.input_filter(PARSE_POST, param, &value, value_len, &new_val_len TSRMLS_CC)) {\n\t\t\t\t\tif (php_rfc1867_callback != NULL) {\n\t\t\t\t\t\tmultipart_event_formdata event_formdata;\n\t\t\t\t\t\tsize_t newlength = new_val_len;\n\n\t\t\t\t\t\tevent_formdata.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\t\t\tevent_formdata.name = param;\n\t\t\t\t\t\tevent_formdata.value = &value;\n\t\t\t\t\t\tevent_formdata.length = new_val_len;\n\t\t\t\t\t\tevent_formdata.newlength = &newlength;\n\t\t\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FORMDATA, &event_formdata, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\t\t\tefree(param);\n\t\t\t\t\t\t\tefree(value);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnew_val_len = newlength;\n\t\t\t\t\t}\n\t\t\t\t\tsafe_php_register_variable(param, value, new_val_len, array_ptr, 0 TSRMLS_CC);\n\t\t\t\t} else if (php_rfc1867_callback != NULL) {\n\t\t\t\t\tmultipart_event_formdata event_formdata;\n\n\t\t\t\t\tevent_formdata.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\t\tevent_formdata.name = param;\n\t\t\t\t\tevent_formdata.value = &value;\n\t\t\t\t\tevent_formdata.length = value_len;\n\t\t\t\t\tevent_formdata.newlength = NULL;\n\t\t\t\t\tphp_rfc1867_callback(MULTIPART_EVENT_FORMDATA, &event_formdata, &event_extra_data TSRMLS_CC);\n\t\t\t\t}\n\n\t\t\t\tif (!strcasecmp(param, \"MAX_FILE_SIZE\")) {\n\t\t\t\t\tmax_file_size = atol(value);\n\t\t\t\t}\n\n\t\t\t\tefree(param);\n\t\t\t\tefree(value);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/* If file_uploads=off, skip the file part */\n\t\t\tif (!PG(file_uploads)) {\n\t\t\t\tskip_upload = 1;\n\t\t\t} else if (upload_cnt <= 0) {\n\t\t\t\tskip_upload = 1;\n\t\t\t\tsapi_module.sapi_error(E_WARNING, \"Maximum number of allowable file uploads has been exceeded\");\n\t\t\t}\n\n\t\t\t/* Return with an error if the posted data is garbled */\n\t\t\tif (!param && !filename) {\n\t\t\t\tsapi_module.sapi_error(E_WARNING, \"File Upload Mime headers garbled\");\n\t\t\t\tgoto fileupload_done;\n\t\t\t}\n\n\t\t\tif (!param) {\n\t\t\t\tis_anonymous = 1;\n\t\t\t\tparam = emalloc(MAX_SIZE_ANONNAME);\n\t\t\t\tsnprintf(param, MAX_SIZE_ANONNAME, \"%u\", anonindex++);\n\t\t\t} else {\n\t\t\t\tis_anonymous = 0;\n\t\t\t}\n\n\t\t\t/* New Rule: never repair potential malicious user input */\n\t\t\tif (!skip_upload) {\n\t\t\t\tlong c = 0;\n\t\t\t\ttmp = param;\n\n\t\t\t\twhile (*tmp) {\n\t\t\t\t\tif (*tmp == '[') {\n\t\t\t\t\t\tc++;\n\t\t\t\t\t} else if (*tmp == ']') {\n\t\t\t\t\t\tc--;\n\t\t\t\t\t\tif (tmp[1] && tmp[1] != '[') {\n\t\t\t\t\t\t\tskip_upload = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c < 0) {\n\t\t\t\t\t\tskip_upload = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttmp++;\n\t\t\t\t}\n\t\t\t\t/* Brackets should always be closed */\n\t\t\t\tif(c != 0) {\n\t\t\t\t\tskip_upload = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttotal_bytes = cancel_upload = 0;\n\t\t\ttemp_filename = NULL;\n\t\t\tfd = -1;\n\n\t\t\tif (!skip_upload && php_rfc1867_callback != NULL) {\n\t\t\t\tmultipart_event_file_start event_file_start;\n\n\t\t\t\tevent_file_start.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\tevent_file_start.name = param;\n\t\t\t\tevent_file_start.filename = &filename;\n\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FILE_START, &event_file_start, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\ttemp_filename = \"\";\n\t\t\t\t\tefree(param);\n\t\t\t\t\tefree(filename);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skip_upload) {\n\t\t\t\tefree(param);\n\t\t\t\tefree(filename);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (strlen(filename) == 0) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"No file uploaded\");\n#endif\n\t\t\t\tcancel_upload = UPLOAD_ERROR_D;\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tend = 0;\n\n\t\t\tif (!cancel_upload) {\n\t\t\t\t/* only bother to open temp file if we have data */\n\t\t\t\tblen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC);\n#if DEBUG_FILE_UPLOAD\n\t\t\t\tif (blen > 0) {\n#else\n\t\t\t\t/* in non-debug mode we have no problem with 0-length files */\n\t\t\t\t{\n#endif\n\t\t\t\t\tfd = php_open_temporary_fd_ex(PG(upload_tmp_dir), \"php\", &temp_filename, 1 TSRMLS_CC);\n\t\t\t\t\tupload_cnt--;\n\t\t\t\t\tif (fd == -1) {\n\t\t\t\t\t\tsapi_module.sapi_error(E_WARNING, \"File upload error - unable to create a temporary file\");\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_E;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (!cancel_upload && (blen > 0))\n\t\t\t{\n\t\t\t\tif (php_rfc1867_callback != NULL) {\n\t\t\t\t\tmultipart_event_file_data event_file_data;\n\n\t\t\t\t\tevent_file_data.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\t\tevent_file_data.offset = offset;\n\t\t\t\t\tevent_file_data.data = buff;\n\t\t\t\t\tevent_file_data.length = blen;\n\t\t\t\t\tevent_file_data.newlength = &blen;\n\t\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FILE_DATA, &event_file_data, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_X;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (PG(upload_max_filesize) > 0 && (long)(total_bytes+blen) > PG(upload_max_filesize)) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"upload_max_filesize of %ld bytes exceeded - file [%s=%s] not saved\", PG(upload_max_filesize), param, filename);\n#endif\n\t\t\t\t\tcancel_upload = UPLOAD_ERROR_A;\n\t\t\t\t} else if (max_file_size && ((long)(total_bytes+blen) > max_file_size)) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"MAX_FILE_SIZE of %ld bytes exceeded - file [%s=%s] not saved\", max_file_size, param, filename);\n#endif\n\t\t\t\t\tcancel_upload = UPLOAD_ERROR_B;\n\t\t\t\t} else if (blen > 0) {\n\t\t\t\t\twlen = write(fd, buff, blen);\n\n\t\t\t\t\tif (wlen == -1) {\n\t\t\t\t\t\t/* write failed */\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"write() failed - %s\", strerror(errno));\n#endif\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_F;\n\t\t\t\t\t} else if (wlen < blen) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"Only %d bytes were written, expected to write %d\", wlen, blen);\n#endif\n\t\t\t\t\t\tcancel_upload = UPLOAD_ERROR_F;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttotal_bytes += wlen;\n\t\t\t\t\t}\n\t\t\t\t\toffset += wlen;\n\t\t\t\t}\n\n\t\t\t\t/* read data for next iteration */\n\t\t\t\tblen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC);\n\t\t\t}\n\n\t\t\tif (fd != -1) { /* may not be initialized if file could not be created */\n\t\t\t\tclose(fd);\n\t\t\t}\n\n\t\t\tif (!cancel_upload && !end) {\n#if DEBUG_FILE_UPLOAD\n\t\t\t\tsapi_module.sapi_error(E_NOTICE, \"Missing mime boundary at the end of the data for file %s\", strlen(filename) > 0 ? filename : \"\");\n#endif\n\t\t\t\tcancel_upload = UPLOAD_ERROR_C;\n\t\t\t}\n#if DEBUG_FILE_UPLOAD\n\t\t\tif (strlen(filename) > 0 && total_bytes == 0 && !cancel_upload) {\n\t\t\t\tsapi_module.sapi_error(E_WARNING, \"Uploaded file size 0 - file [%s=%s] not saved\", param, filename);\n\t\t\t\tcancel_upload = 5;\n\t\t\t}\n#endif\n\t\t\tif (php_rfc1867_callback != NULL) {\n\t\t\t\tmultipart_event_file_end event_file_end;\n\n\t\t\t\tevent_file_end.post_bytes_processed = SG(read_post_bytes);\n\t\t\t\tevent_file_end.temp_filename = temp_filename;\n\t\t\t\tevent_file_end.cancel_upload = cancel_upload;\n\t\t\t\tif (php_rfc1867_callback(MULTIPART_EVENT_FILE_END, &event_file_end, &event_extra_data TSRMLS_CC) == FAILURE) {\n\t\t\t\t\tcancel_upload = UPLOAD_ERROR_X;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cancel_upload) {\n\t\t\t\tif (temp_filename) {\n\t\t\t\t\tif (cancel_upload != UPLOAD_ERROR_E) { /* file creation failed */\n\t\t\t\t\t\tunlink(temp_filename);\n\t\t\t\t\t}\n\t\t\t\t\tefree(temp_filename);\n\t\t\t\t}\n\t\t\t\ttemp_filename = \"\";\n\t\t\t} else {\n\t\t\t\tzend_hash_add(SG(rfc1867_uploaded_files), temp_filename, strlen(temp_filename) + 1, &temp_filename, sizeof(char *), NULL);\n\t\t\t}\n\n\t\t\t/* is_arr_upload is true when name of file upload field\n\t\t\t * ends in [.*]\n\t\t\t * start_arr is set to point to 1st [ */\n\t\t\tis_arr_upload =\t(start_arr = strchr(param,'[')) && (param[strlen(param)-1] == ']');\n\n\t\t\tif (is_arr_upload) {\n\t\t\t\tarray_len = strlen(start_arr);\n\t\t\t\tif (array_index) {\n\t\t\t\t\tefree(array_index);\n\t\t\t\t}\n\t\t\t\tarray_index = estrndup(start_arr + 1, array_len - 2);\n\t\t\t}\n\n\t\t\t/* Add $foo_name */\n\t\t\tif (llen < strlen(param) + MAX_SIZE_OF_INDEX + 1) {\n\t\t\t\tllen = strlen(param);\n\t\t\t\tlbuf = (char *) safe_erealloc(lbuf, llen, 1, MAX_SIZE_OF_INDEX + 1);\n\t\t\t\tllen += MAX_SIZE_OF_INDEX + 1;\n\t\t\t}\n\n\t\t\tif (is_arr_upload) {\n\t\t\t\tif (abuf) efree(abuf);\n\t\t\t\tabuf = estrndup(param, strlen(param)-array_len);\n\t\t\t\tsnprintf(lbuf, llen, \"%s_name[%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s_name\", param);\n\t\t\t}\n\n\t\t\t/* The \\ check should technically be needed for win32 systems only where\n\t\t\t * it is a valid path separator. However, IE in all it's wisdom always sends\n\t\t\t * the full path of the file on the user's filesystem, which means that unless\n\t\t\t * the user does basename() they get a bogus file name. Until IE's user base drops\n\t\t\t * to nill or problem is fixed this code must remain enabled for all systems. */\n\t\t\ts = _basename(internal_encoding, filename TSRMLS_CC);\n\t\t\tif (!s) {\n\t\t\t\ts = filename;\n\t\t\t}\n\n\t\t\tif (!is_anonymous) {\n\t\t\t\tsafe_php_register_variable(lbuf, s, strlen(s), NULL, 0 TSRMLS_CC);\n\t\t\t}\n\n\t\t\t/* Add $foo[name] */\n\t\t\tif (is_arr_upload) {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[name][%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[name]\", param);\n\t\t\t}\n\t\t\tregister_http_post_files_variable(lbuf, s, http_post_files, 0 TSRMLS_CC);\n\t\t\tefree(filename);\n\t\t\ts = NULL;\n\n\t\t\t/* Possible Content-Type: */\n\t\t\tif (cancel_upload || !(cd = php_mime_get_hdr_value(header, \"Content-Type\"))) {\n\t\t\t\tcd = \"\";\n\t\t\t} else {\n\t\t\t\t/* fix for Opera 6.01 */\n\t\t\t\ts = strchr(cd, ';');\n\t\t\t\tif (s != NULL) {\n\t\t\t\t\t*s = '\\0';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Add $foo_type */\n\t\t\tif (is_arr_upload) {\n\t\t\t\tsnprintf(lbuf, llen, \"%s_type[%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s_type\", param);\n\t\t\t}\n\t\t\tif (!is_anonymous) {\n\t\t\t\tsafe_php_register_variable(lbuf, cd, strlen(cd), NULL, 0 TSRMLS_CC);\n\t\t\t}\n\n\t\t\t/* Add $foo[type] */\n\t\t\tif (is_arr_upload) {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[type][%s]\", abuf, array_index);\n\t\t\t} else {\n\t\t\t\tsnprintf(lbuf, llen, \"%s[type]\", param);\n\t\t\t}\n\t\t\tregister_http_post_files_variable(lbuf, cd, http_post_files, 0 TSRMLS_CC);\n\n\t\t\t/* Restore Content-Type Header */\n\t\t\tif (s != NULL) {\n\t\t\t\t*s = ';';\n\t\t\t}\n\t\t\ts = \"\";\n\n\t\t\t{\n\t\t\t\t/* store temp_filename as-is (in case upload_tmp_dir\n\t\t\t\t * contains escapeable characters. escape only the variable name.) */\n\t\t\t\tzval zfilename;\n\n\t\t\t\t/* Initialize variables */\n\t\t\t\tadd_protected_variable(param TSRMLS_CC);\n\n\t\t\t\t/* if param is of form xxx[.*] this will cut it to xxx */\n\t\t\t\tif (!is_anonymous) {\n\t\t\t\t\tZVAL_STRING(&zfilename, temp_filename, 1);\n\t\t\t\t\tsafe_php_register_variable_ex(param, &zfilename, NULL, 1 TSRMLS_CC);\n\t\t\t\t}\n\n\t\t\t\t/* Add $foo[tmp_name] */\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[tmp_name][%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[tmp_name]\", param);\n\t\t\t\t}\n\t\t\t\tadd_protected_variable(lbuf TSRMLS_CC);\n\t\t\t\tZVAL_STRING(&zfilename, temp_filename, 1);\n\t\t\t\tregister_http_post_files_variable_ex(lbuf, &zfilename, http_post_files, 1 TSRMLS_CC);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tzval file_size, error_type;\n\n\t\t\t\terror_type.value.lval = cancel_upload;\n\t\t\t\terror_type.type = IS_LONG;\n\n\t\t\t\t/* Add $foo[error] */\n\t\t\t\tif (cancel_upload) {\n\t\t\t\t\tfile_size.value.lval = 0;\n\t\t\t\t\tfile_size.type = IS_LONG;\n\t\t\t\t} else {\n\t\t\t\t\tfile_size.value.lval = total_bytes;\n\t\t\t\t\tfile_size.type = IS_LONG;\n\t\t\t\t}\n\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[error][%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[error]\", param);\n\t\t\t\t}\n\t\t\t\tregister_http_post_files_variable_ex(lbuf, &error_type, http_post_files, 0 TSRMLS_CC);\n\n\t\t\t\t/* Add $foo_size */\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s_size[%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s_size\", param);\n\t\t\t\t}\n\t\t\t\tif (!is_anonymous) {\n\t\t\t\t\tsafe_php_register_variable_ex(lbuf, &file_size, NULL, 0 TSRMLS_CC);\n\t\t\t\t}\n\n\t\t\t\t/* Add $foo[size] */\n\t\t\t\tif (is_arr_upload) {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[size][%s]\", abuf, array_index);\n\t\t\t\t} else {\n\t\t\t\t\tsnprintf(lbuf, llen, \"%s[size]\", param);\n\t\t\t\t}\n\t\t\t\tregister_http_post_files_variable_ex(lbuf, &file_size, http_post_files, 0 TSRMLS_CC);\n\t\t\t}\n\t\t\tefree(param);\n\t\t}\n\t}\n\nfileupload_done:\n\tif (php_rfc1867_callback != NULL) {\n\t\tmultipart_event_end event_end;\n\n\t\tevent_end.post_bytes_processed = SG(read_post_bytes);\n\t\tphp_rfc1867_callback(MULTIPART_EVENT_END, &event_end, &event_extra_data TSRMLS_CC);\n\t}\n\n\tif (lbuf) efree(lbuf);\n\tif (abuf) efree(abuf);\n\tif (array_index) efree(array_index);\n\tzend_hash_destroy(&PG(rfc1867_protected_variables));\n\tzend_llist_destroy(&header);\n\tif (mbuff->boundary_next) efree(mbuff->boundary_next);\n\tif (mbuff->boundary) efree(mbuff->boundary);\n\tif (mbuff->buffer) efree(mbuff->buffer);\n\tif (mbuff) efree(mbuff);\n}",
    "filename": "main/rfc1867.c"
  },
  "php_2012-01-16-36df53421e-f32760bd40": {
    "buggy": "static inline php_output_handler_status_t php_output_handler_op(php_output_handler *handler, php_output_context *context)\n{\n\tphp_output_handler_status_t status;\n\tint original_op = context->op;\n\tPHP_OUTPUT_TSRMLS(context);\n\n#if PHP_OUTPUT_DEBUG\n\tfprintf(stderr, \">>> op(%d, \"\n\t\t\t\t\t\"handler=%p, \"\n\t\t\t\t\t\"name=%s, \"\n\t\t\t\t\t\"flags=%d, \"\n\t\t\t\t\t\"buffer.data=%s, \"\n\t\t\t\t\t\"buffer.used=%zu, \"\n\t\t\t\t\t\"buffer.size=%zu, \"\n\t\t\t\t\t\"in.data=%s, \"\n\t\t\t\t\t\"in.used=%zu)\\n\",\n\t\t\tcontext->op,\n\t\t\thandler,\n\t\t\thandler->name,\n\t\t\thandler->flags,\n\t\t\thandler->buffer.used?handler->buffer.data:\"\",\n\t\t\thandler->buffer.used,\n\t\t\thandler->buffer.size,\n\t\t\tcontext->in.used?context->in.data:\"\",\n\t\t\tcontext->in.used\n\t);\n#endif\n\n\tif (php_output_lock_error(context->op TSRMLS_CC)) {\n\t\t/* fatal error */\n\t\treturn PHP_OUTPUT_HANDLER_FAILURE;\n\t}\n\n\t/* storable? */\n\tif (php_output_handler_append(handler, &context->in TSRMLS_CC) && !context->op) {\n\t\tstatus = PHP_OUTPUT_HANDLER_NO_DATA;\n\t} else {\n\t\t/* need to start? */\n\t\tif (!(handler->flags & PHP_OUTPUT_HANDLER_STARTED)) {\n\t\t\tcontext->op |= PHP_OUTPUT_HANDLER_START;\n\t\t}\n\n\t\tOG(running) = handler;\n\t\tif (handler->flags & PHP_OUTPUT_HANDLER_USER) {\n\t\t\tzval *retval = NULL, *ob_data, *ob_mode;\n\n\t\t\tMAKE_STD_ZVAL(ob_data);\n\t\t\tZVAL_STRINGL(ob_data, handler->buffer.data, handler->buffer.used, 1);\n\t\t\tMAKE_STD_ZVAL(ob_mode);\n\t\t\tZVAL_LONG(ob_mode, (long) context->op);\n\t\t\tzend_fcall_info_argn(&handler->func.user->fci TSRMLS_CC, 2, &ob_data, &ob_mode);\n\n#define PHP_OUTPUT_USER_SUCCESS(retval) (retval && !(Z_TYPE_P(retval) == IS_BOOL && Z_BVAL_P(retval)==0))\n\t\t\tif (SUCCESS == zend_fcall_info_call(&handler->func.user->fci, &handler->func.user->fcc, &retval, NULL TSRMLS_CC) && PHP_OUTPUT_USER_SUCCESS(retval)) {\n\t\t\t\t/* user handler may have returned TRUE */\n\t\t\t\tstatus = PHP_OUTPUT_HANDLER_NO_DATA;\n\t\t\t\tif (Z_TYPE_P(retval) != IS_BOOL) {\n\t\t\t\t\tconvert_to_string_ex(&retval);\n\t\t\t\t\tif (Z_STRLEN_P(retval)) {\n\t\t\t\t\t\tcontext->out.data = estrndup(Z_STRVAL_P(retval), Z_STRLEN_P(retval));\n\t\t\t\t\t\tcontext->out.used = Z_STRLEN_P(retval);\n\t\t\t\t\t\tcontext->out.free = 1;\n\t\t\t\t\t\tstatus = PHP_OUTPUT_HANDLER_SUCCESS;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* call failed, pass internal buffer along */\n\t\t\t\tstatus = PHP_OUTPUT_HANDLER_FAILURE;\n\t\t\t}\n\n\t\t\tzend_fcall_info_argn(&handler->func.user->fci TSRMLS_CC, 0);\n\t\t\tzval_ptr_dtor(&ob_data);\n\t\t\tzval_ptr_dtor(&ob_mode);\n\t\t\tif (retval) {\n\t\t\t\tzval_ptr_dtor(&retval);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tphp_output_context_feed(context, handler->buffer.data, handler->buffer.size, handler->buffer.used, 0);\n\n\t\t\tif (SUCCESS == handler->func.internal(&handler->opaq, context)) {\n\t\t\t\tif (context->out.used) {\n\t\t\t\t\tstatus = PHP_OUTPUT_HANDLER_SUCCESS;\n\t\t\t\t} else {\n\t\t\t\t\tstatus = PHP_OUTPUT_HANDLER_NO_DATA;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstatus = PHP_OUTPUT_HANDLER_FAILURE;\n\t\t\t}\n\t\t}\n\t\thandler->flags |= PHP_OUTPUT_HANDLER_STARTED;\n\t\tOG(running) = NULL;\n\t}\n\n\tswitch (status) {\n\t\tcase PHP_OUTPUT_HANDLER_FAILURE:\n\t\t\t/* disable this handler */\n\t\t\thandler->flags |= PHP_OUTPUT_HANDLER_DISABLED;\n\t\t\t/* discard any output */\n\t\t\tif (context->out.data && context->out.free) {\n\t\t\t\tefree(context->out.data);\n\t\t\t}\n\t\t\t/* returns handlers buffer */\n\t\t\tcontext->out.data = handler->buffer.data;\n\t\t\tcontext->out.used = handler->buffer.used;\n\t\t\tcontext->out.free = 1;\n\t\t\thandler->buffer.data = NULL;\n\t\t\thandler->buffer.used = 0;\n\t\t\thandler->buffer.size = 0;\n\t\t\tbreak;\n\t\tcase PHP_OUTPUT_HANDLER_SUCCESS:\n\t\t\t/* no more buffered data */\n\t\t\thandler->buffer.used = 0;\n\t\t\tbreak;\n\t\tcase PHP_OUTPUT_HANDLER_NO_DATA:\n\t\t\t/* handler ate all */\n\t\t\tphp_output_context_reset(context);\n\t\t\tbreak;\n\t}\n\n\tcontext->op = original_op;\n\treturn status;\n}",
    "start": 853,
    "end": 976,
    "fix": "static inline php_output_handler_status_t php_output_handler_op(php_output_handler *handler, php_output_context *context)\n{\n\tphp_output_handler_status_t status;\n\tint original_op = context->op;\n\tPHP_OUTPUT_TSRMLS(context);\n\n#if PHP_OUTPUT_DEBUG\n\tfprintf(stderr, \">>> op(%d, \"\n\t\t\t\t\t\"handler=%p, \"\n\t\t\t\t\t\"name=%s, \"\n\t\t\t\t\t\"flags=%d, \"\n\t\t\t\t\t\"buffer.data=%s, \"\n\t\t\t\t\t\"buffer.used=%zu, \"\n\t\t\t\t\t\"buffer.size=%zu, \"\n\t\t\t\t\t\"in.data=%s, \"\n\t\t\t\t\t\"in.used=%zu)\\n\",\n\t\t\tcontext->op,\n\t\t\thandler,\n\t\t\thandler->name,\n\t\t\thandler->flags,\n\t\t\thandler->buffer.used?handler->buffer.data:\"\",\n\t\t\thandler->buffer.used,\n\t\t\thandler->buffer.size,\n\t\t\tcontext->in.used?context->in.data:\"\",\n\t\t\tcontext->in.used\n\t);\n#endif\n\n\tif (php_output_lock_error(context->op TSRMLS_CC)) {\n\t\t/* fatal error */\n\t\treturn PHP_OUTPUT_HANDLER_FAILURE;\n\t}\n\n\t/* storable? */\n\tif (php_output_handler_append(handler, &context->in TSRMLS_CC) && !context->op) {\n\t\tcontext->op = original_op;\n\t\treturn PHP_OUTPUT_HANDLER_NO_DATA;\n\t} else {\n\t\t/* need to start? */\n\t\tif (!(handler->flags & PHP_OUTPUT_HANDLER_STARTED)) {\n\t\t\tcontext->op |= PHP_OUTPUT_HANDLER_START;\n\t\t}\n\n\t\tOG(running) = handler;\n\t\tif (handler->flags & PHP_OUTPUT_HANDLER_USER) {\n\t\t\tzval *retval = NULL, *ob_data, *ob_mode;\n\n\t\t\tMAKE_STD_ZVAL(ob_data);\n\t\t\tZVAL_STRINGL(ob_data, handler->buffer.data, handler->buffer.used, 1);\n\t\t\tMAKE_STD_ZVAL(ob_mode);\n\t\t\tZVAL_LONG(ob_mode, (long) context->op);\n\t\t\tzend_fcall_info_argn(&handler->func.user->fci TSRMLS_CC, 2, &ob_data, &ob_mode);\n\n#define PHP_OUTPUT_USER_SUCCESS(retval) (retval && !(Z_TYPE_P(retval) == IS_BOOL && Z_BVAL_P(retval)==0))\n\t\t\tif (SUCCESS == zend_fcall_info_call(&handler->func.user->fci, &handler->func.user->fcc, &retval, NULL TSRMLS_CC) && PHP_OUTPUT_USER_SUCCESS(retval)) {\n\t\t\t\t/* user handler may have returned TRUE */\n\t\t\t\tstatus = PHP_OUTPUT_HANDLER_NO_DATA;\n\t\t\t\tif (Z_TYPE_P(retval) != IS_BOOL) {\n\t\t\t\t\tconvert_to_string_ex(&retval);\n\t\t\t\t\tif (Z_STRLEN_P(retval)) {\n\t\t\t\t\t\tcontext->out.data = estrndup(Z_STRVAL_P(retval), Z_STRLEN_P(retval));\n\t\t\t\t\t\tcontext->out.used = Z_STRLEN_P(retval);\n\t\t\t\t\t\tcontext->out.free = 1;\n\t\t\t\t\t\tstatus = PHP_OUTPUT_HANDLER_SUCCESS;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* call failed, pass internal buffer along */\n\t\t\t\tstatus = PHP_OUTPUT_HANDLER_FAILURE;\n\t\t\t}\n\n\t\t\tzend_fcall_info_argn(&handler->func.user->fci TSRMLS_CC, 0);\n\t\t\tzval_ptr_dtor(&ob_data);\n\t\t\tzval_ptr_dtor(&ob_mode);\n\t\t\tif (retval) {\n\t\t\t\tzval_ptr_dtor(&retval);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tphp_output_context_feed(context, handler->buffer.data, handler->buffer.size, handler->buffer.used, 0);\n\n\t\t\tif (SUCCESS == handler->func.internal(&handler->opaq, context)) {\n\t\t\t\tif (context->out.used) {\n\t\t\t\t\tstatus = PHP_OUTPUT_HANDLER_SUCCESS;\n\t\t\t\t} else {\n\t\t\t\t\tstatus = PHP_OUTPUT_HANDLER_NO_DATA;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstatus = PHP_OUTPUT_HANDLER_FAILURE;\n\t\t\t}\n\t\t}\n\t\thandler->flags |= PHP_OUTPUT_HANDLER_STARTED;\n\t\tOG(running) = NULL;\n\t}\n\n\tswitch (status) {\n\t\tcase PHP_OUTPUT_HANDLER_FAILURE:\n\t\t\t/* disable this handler */\n\t\t\thandler->flags |= PHP_OUTPUT_HANDLER_DISABLED;\n\t\t\t/* discard any output */\n\t\t\tif (context->out.data && context->out.free) {\n\t\t\t\tefree(context->out.data);\n\t\t\t}\n\t\t\t/* returns handlers buffer */\n\t\t\tcontext->out.data = handler->buffer.data;\n\t\t\tcontext->out.used = handler->buffer.used;\n\t\t\tcontext->out.free = 1;\n\t\t\thandler->buffer.data = NULL;\n\t\t\thandler->buffer.used = 0;\n\t\t\thandler->buffer.size = 0;\n\t\t\tbreak;\n\t\tcase PHP_OUTPUT_HANDLER_NO_DATA:\n\t\t\t/* handler ate all */\n\t\t\tphp_output_context_reset(context);\n\t\t\t/* no break */\n\t\tcase PHP_OUTPUT_HANDLER_SUCCESS:\n\t\t\t/* no more buffered data */\n\t\t\thandler->buffer.used = 0;\n\t\t\tbreak;\n\t}\n\n\tcontext->op = original_op;\n\treturn status;\n}",
    "filename": "main/output.c"
  },
  "php_2012-01-17-032d140fd6-877f97cde1": {
    "buggy": "int lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 995 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1775 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1154 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1763 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1184 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1740 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1203 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1700 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1406 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1718 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1445 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1731 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1459 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1753 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1495 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2226 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1607 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1623 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1640 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1662 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1673 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1695 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1721 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2176 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1838 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2165 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1854 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1871 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1893 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1904 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1926 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1952 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2144 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1975 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2268 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2108 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2130 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2152 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2163 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2185 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2211 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2398 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1431 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2628 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2645 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1191 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2660 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2893 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1448 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2907 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1494 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2956 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1887 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3018 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1978 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3093 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2047 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3141 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2138 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3152 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3167 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1555 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3200 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1473 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3313 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1515 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3346 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1955 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3363 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3403 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1419 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3421 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1411 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3434 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1399 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3444 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1403 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3454 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1395 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3464 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1407 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3474 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1391 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3484 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1964 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3506 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1379 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3516 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1375 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3551 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1921 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3594 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1371 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3608 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1367 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3635 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1427 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3646 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1355 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3656 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1387 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3666 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1423 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3681 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1351 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3697 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1347 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3708 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1383 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3763 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3916 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1339 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3960 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1359 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3970 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1327 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3980 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1315 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4003 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1343 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4014 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1311 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4024 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1335 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4034 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1690 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4174 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1663 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4221 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1645 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4252 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1624 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4308 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1608 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4375 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1651 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4407 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1588 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4457 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1561 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t// This is a hack, we abuse IS_NULL to indicate an invalid value\n\t\t// if __CLASS__ is encountered in a trait, however, we also not that we\n\t\t// should fix it up when we copy the method into an actual class\n\t\tzendlval->value.lval = ZEND_ACC_TRAIT;\n\t\tzendlval->type = IS_NULL;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4514 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1279 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4580 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1259 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4604 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1307 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4627 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1207 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4803 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1211 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4851 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1215 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4925 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1219 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4962 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1223 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5004 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1227 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5049 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1231 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5113 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1203 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5131 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1195 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5155 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1255 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5198 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5208 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1363 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5234 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1331 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5244 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5255 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1303 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5304 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1299 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5363 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1295 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5397 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1133 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5410 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1125 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5439 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1267 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5467 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1117 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5508 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1101 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5552 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1283 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5580 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5611 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1319 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5634 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1415 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5647 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1287 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5685 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1057 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5713 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1041 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5726 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1271 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5782 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1239 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5840 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5873 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1141 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5911 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1263 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5965 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 5998 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1153 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6046 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1029 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6078 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1145 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6101 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1037 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6124 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1247 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6189 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1251 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6222 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1025 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6245 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1121 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6339 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1021 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6352 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1199 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6381 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1137 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6399 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1323 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6449 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1109 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6462 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1033 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6480 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1017 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6535 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1069 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6563 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1077 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6591 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1291 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6614 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1065 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6649 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1013 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6662 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1113 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6701 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1085 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6729 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1149 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6813 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1009 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6826 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1235 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6844 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1061 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6918 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1105 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6951 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1049 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6964 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1073 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 6997 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1081 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7025 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7063 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1275 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7086 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1053 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7119 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1045 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7137 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1129 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7155 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7236 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1181 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7250 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7266 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7291 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7369 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7382 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2340 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7459 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1536 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7578 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1868 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7603 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1863 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7614 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1873 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7631 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7646 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7661 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7703 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1548 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7750 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2405 \"Zend/zend_language_scanner.l\"\n\n}",
    "start": 986,
    "end": 7774,
    "fix": "int lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 995 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1775 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1154 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1763 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1184 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1740 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1203 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1700 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1406 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1718 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1445 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1731 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1459 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1753 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1495 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2226 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1607 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1623 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1640 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1662 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1673 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1695 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1721 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2176 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1838 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2165 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1854 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1871 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1893 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1904 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1926 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1952 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2144 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1975 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2268 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2108 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2130 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2152 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2163 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2185 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2211 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2398 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1431 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2628 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2645 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1191 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2660 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2893 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1448 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2907 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1494 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2956 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1887 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3018 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1978 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3093 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2047 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3141 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2138 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3152 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3167 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1555 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3200 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1473 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3313 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1515 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3346 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1955 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3363 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3403 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1419 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3421 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1411 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3434 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1399 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3444 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1403 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3454 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1395 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3464 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1407 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3474 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1391 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3484 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1964 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3506 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1379 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3516 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1375 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3551 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1921 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3594 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1371 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3608 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1367 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3635 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1427 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3646 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1355 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3656 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1387 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3666 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1423 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3681 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1351 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3697 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1347 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3708 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1383 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3763 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3916 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1339 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3960 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1359 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3970 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1327 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3980 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1315 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4003 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1343 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4014 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1311 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4024 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1335 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4034 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1690 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4174 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1663 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4221 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1645 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4252 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1624 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4308 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1608 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4375 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1651 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4407 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1588 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4457 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1561 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4514 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1279 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4580 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1259 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4604 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1307 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4627 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1207 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4803 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1211 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4851 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1215 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4925 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1219 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4962 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1223 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5004 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1227 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5049 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1231 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5113 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1203 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5131 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1195 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5155 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1255 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5198 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5208 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1363 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5234 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1331 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5244 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5255 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1303 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5304 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1299 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5363 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1295 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5397 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1133 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5410 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1125 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5439 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1267 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5467 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1117 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5508 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1101 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5552 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1283 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5580 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5611 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1319 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5634 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1415 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5647 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1287 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5685 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1057 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5713 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1041 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5726 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1271 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5782 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1239 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5840 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5873 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1141 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5911 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1263 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5965 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 5998 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1153 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6046 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1029 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6078 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1145 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6101 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1037 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6124 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1247 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6189 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1251 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6222 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1025 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6245 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1121 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6339 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1021 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6352 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1199 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6381 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1137 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6399 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1323 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6449 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1109 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6462 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1033 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6480 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1017 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6535 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1069 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6563 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1077 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6591 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1291 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6614 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1065 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6649 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1013 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6662 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1113 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6701 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1085 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6729 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1149 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6813 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1009 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6826 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1235 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6844 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1061 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6918 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1105 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6951 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1049 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6964 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1073 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 6997 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1081 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7025 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7063 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1275 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7086 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1053 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7119 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1045 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7137 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1129 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7155 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7236 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1181 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7250 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7266 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7291 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7369 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7382 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2340 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7459 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1536 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7578 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1868 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7603 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1863 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7614 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1873 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7631 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7646 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7661 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7703 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1548 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7750 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2405 \"Zend/zend_language_scanner.l\"\n\n}",
    "filename": "Zend/zend_language_scanner.c"
  },
  "php_2012-01-27-544e36dfff-acaf9c5227": {
    "buggy": "PS_OPEN_FUNC(user)\n{\n\tzval *args[2];\n\tSTDVARS;\n\n\tSESS_ZVAL_STRING((char*)save_path, args[0]);\n\tSESS_ZVAL_STRING((char*)session_name, args[1]);\n\n\tretval = ps_call_handler(PSF(open), 2, args TSRMLS_CC);\n\tPS(mod_user_implemented) = 1;\n\n\tFINISH;\n}",
    "start": 79,
    "end": 91,
    "fix": "PS_OPEN_FUNC(user)\n{\n\tzval *args[2];\n\tSTDVARS;\n\t\n\tif (PSF(open) == NULL) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING,\n\t\t\t\"user session functions not defined\");\n\t\t\t\n\t\treturn FAILURE;\n\t}\n\n\tSESS_ZVAL_STRING((char*)save_path, args[0]);\n\tSESS_ZVAL_STRING((char*)session_name, args[1]);\n\n\tretval = ps_call_handler(PSF(open), 2, args TSRMLS_CC);\n\tPS(mod_user_implemented) = 1;\n\n\tFINISH;\n}",
    "filename": "ext/session/mod_user.c"
  },
  "php_2012-02-08-ff63c09e6f-6672171672": {
    "buggy": "PHPAPI void php_register_variable_ex(char *var_name, zval *val, zval *track_vars_array TSRMLS_DC)\n{\n\tchar *p = NULL;\n\tchar *ip;\t\t/* index pointer */\n\tchar *index;\n\tchar *var, *var_orig;\n\tint var_len, index_len;\n\tzval *gpc_element, **gpc_element_p;\n\tzend_bool is_array = 0;\n\tHashTable *symtable1 = NULL;\n\tALLOCA_FLAG(use_heap)\n\n\tassert(var_name != NULL);\n\n\tif (track_vars_array) {\n\t\tsymtable1 = Z_ARRVAL_P(track_vars_array);\n\t}\n\n\tif (!symtable1) {\n\t\t/* Nothing to do */\n\t\tzval_dtor(val);\n\t\treturn;\n\t}\n\n\n\t/* ignore leading spaces in the variable name */\n\twhile (*var_name && *var_name==' ') {\n\t\tvar_name++;\n\t}\n\t\n\t/*\n\t * Prepare variable name\n\t */\n\tvar_len = strlen(var_name);\n\tvar = var_orig = do_alloca(var_len + 1, use_heap);\n\tmemcpy(var_orig, var_name, var_len + 1);\n\n\t/* ensure that we don't have spaces or dots in the variable name (not binary safe) */\n\tfor (p = var; *p; p++) {\n\t\tif (*p == ' ' || *p == '.') {\n\t\t\t*p='_';\n\t\t} else if (*p == '[') {\n\t\t\tis_array = 1;\n\t\t\tip = p;\n\t\t\t*p = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tvar_len = p - var;\n\n\tif (var_len==0) { /* empty variable name, or variable name with a space in it */\n\t\tzval_dtor(val);\n\t\tfree_alloca(var_orig, use_heap);\n\t\treturn;\n\t}\n\n\t/* GLOBALS hijack attempt, reject parameter */\n\tif (symtable1 == EG(active_symbol_table) &&\n\t\tvar_len == sizeof(\"GLOBALS\")-1 &&\n\t\t!memcmp(var, \"GLOBALS\", sizeof(\"GLOBALS\")-1)) {\n\t\tzval_dtor(val);\n\t\tfree_alloca(var_orig, use_heap);\n\t\treturn;\n\t}\n\n\tindex = var;\n\tindex_len = var_len;\n\n\tif (is_array) {\n\t\tint nest_level = 0;\n\t\twhile (1) {\n\t\t\tchar *index_s;\n\t\t\tint new_idx_len = 0;\n\n\t\t\tif(++nest_level > PG(max_input_nesting_level)) {\n\t\t\t\tHashTable *ht;\n\t\t\t\t/* too many levels of nesting */\n\n\t\t\t\tif (track_vars_array) {\n\t\t\t\t\tht = Z_ARRVAL_P(track_vars_array);\n\t\t\t\t\tzend_hash_del(ht, var, var_len + 1);\n\t\t\t\t}\n\n\t\t\t\tzval_dtor(val);\n\n\t\t\t\t/* do not output the error message to the screen,\n\t\t\t\t this helps us to to avoid \"information disclosure\" */\n\t\t\t\tif (!PG(display_errors)) {\n\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Input variable nesting level exceeded %ld. To increase the limit change max_input_nesting_level in php.ini.\", PG(max_input_nesting_level));\n\t\t\t\t}\n\t\t\t\tfree_alloca(var_orig, use_heap);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tip++;\n\t\t\tindex_s = ip;\n\t\t\tif (isspace(*ip)) {\n\t\t\t\tip++;\n\t\t\t}\n\t\t\tif (*ip==']') {\n\t\t\t\tindex_s = NULL;\n\t\t\t} else {\n\t\t\t\tip = strchr(ip, ']');\n\t\t\t\tif (!ip) {\n\t\t\t\t\t/* PHP variables cannot contain '[' in their names, so we replace the character with a '_' */\n\t\t\t\t\t*(index_s - 1) = '_';\n\n\t\t\t\t\tindex_len = 0;\n\t\t\t\t\tif (index) {\n\t\t\t\t\t\tindex_len = strlen(index);\n\t\t\t\t\t}\n\t\t\t\t\tgoto plain_var;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t*ip = 0;\n\t\t\t\tnew_idx_len = strlen(index_s);\t\n\t\t\t}\n\n\t\t\tif (!index) {\n\t\t\t\tMAKE_STD_ZVAL(gpc_element);\n\t\t\t\tarray_init(gpc_element);\n\t\t\t\tif (zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p) == FAILURE) {\n\t\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t\t\tzval_dtor(val);\n\t\t\t\t\tfree_alloca(var_orig, use_heap);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (zend_symtable_find(symtable1, index, index_len + 1, (void **) &gpc_element_p) == FAILURE\n\t\t\t\t\t|| Z_TYPE_PP(gpc_element_p) != IS_ARRAY) {\n\t\t\t\t\tif (zend_hash_num_elements(symtable1) <= PG(max_input_vars)) {\n\t\t\t\t\t\tif (zend_hash_num_elements(symtable1) == PG(max_input_vars)) {\n\t\t\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.\", PG(max_input_vars));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tMAKE_STD_ZVAL(gpc_element);\n\t\t\t\t\t\tarray_init(gpc_element);\n\t\t\t\t\t\tzend_symtable_update(symtable1, index, index_len + 1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzval_dtor(val);\n\t\t\t\t\t\tfree_alloca(var_orig, use_heap);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsymtable1 = Z_ARRVAL_PP(gpc_element_p);\n\t\t\t/* ip pointed to the '[' character, now obtain the key */\n\t\t\tindex = index_s;\n\t\t\tindex_len = new_idx_len;\n\n\t\t\tip++;\n\t\t\tif (*ip == '[') {\n\t\t\t\tis_array = 1;\n\t\t\t\t*ip = 0;\n\t\t\t} else {\n\t\t\t\tgoto plain_var;\n\t\t\t}\n\t\t}\n\t} else {\nplain_var:\n\t\tMAKE_STD_ZVAL(gpc_element);\n\t\tgpc_element->value = val->value;\n\t\tZ_TYPE_P(gpc_element) = Z_TYPE_P(val);\n\t\tif (!index) {\n\t\t\tif (zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p) == FAILURE) {\n\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t}\n\t\t} else {\n\t\t\t/* \n\t\t\t * According to rfc2965, more specific paths are listed above the less specific ones.\n\t\t\t * If we encounter a duplicate cookie name, we should skip it, since it is not possible\n\t\t\t * to have the same (plain text) cookie name for the same path and we should not overwrite\n\t\t\t * more specific cookies with the less specific ones.\n\t\t\t */\n\t\t\tif (PG(http_globals)[TRACK_VARS_COOKIE] &&\n\t\t\t\tsymtable1 == Z_ARRVAL_P(PG(http_globals)[TRACK_VARS_COOKIE]) &&\n\t\t\t\tzend_symtable_exists(symtable1, index, index_len + 1)) {\n\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t} else {\n\t\t\t\tif (zend_hash_num_elements(symtable1) <= PG(max_input_vars)) {\n\t\t\t\t\tif (zend_hash_num_elements(symtable1) == PG(max_input_vars)) {\n\t\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.\", PG(max_input_vars));\n\t\t\t\t\t}\n\t\t\t\t\tzend_symtable_update(symtable1, index, index_len + 1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);\n\t\t\t\t} else {\n\t\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfree_alloca(var_orig, use_heap);\n}",
    "start": 56,
    "end": 246,
    "fix": "PHPAPI void php_register_variable_ex(char *var_name, zval *val, zval *track_vars_array TSRMLS_DC)\n{\n\tchar *p = NULL;\n\tchar *ip;\t\t/* index pointer */\n\tchar *index;\n\tchar *var, *var_orig;\n\tint var_len, index_len;\n\tzval *gpc_element, **gpc_element_p;\n\tzend_bool is_array = 0;\n\tHashTable *symtable1 = NULL;\n\tALLOCA_FLAG(use_heap)\n\n\tassert(var_name != NULL);\n\n\tif (track_vars_array) {\n\t\tsymtable1 = Z_ARRVAL_P(track_vars_array);\n\t}\n\n\tif (!symtable1) {\n\t\t/* Nothing to do */\n\t\tzval_dtor(val);\n\t\treturn;\n\t}\n\n\n\t/* ignore leading spaces in the variable name */\n\twhile (*var_name && *var_name==' ') {\n\t\tvar_name++;\n\t}\n\t\n\t/*\n\t * Prepare variable name\n\t */\n\tvar_len = strlen(var_name);\n\tvar = var_orig = do_alloca(var_len + 1, use_heap);\n\tmemcpy(var_orig, var_name, var_len + 1);\n\n\t/* ensure that we don't have spaces or dots in the variable name (not binary safe) */\n\tfor (p = var; *p; p++) {\n\t\tif (*p == ' ' || *p == '.') {\n\t\t\t*p='_';\n\t\t} else if (*p == '[') {\n\t\t\tis_array = 1;\n\t\t\tip = p;\n\t\t\t*p = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tvar_len = p - var;\n\n\tif (var_len==0) { /* empty variable name, or variable name with a space in it */\n\t\tzval_dtor(val);\n\t\tfree_alloca(var_orig, use_heap);\n\t\treturn;\n\t}\n\n\t/* GLOBALS hijack attempt, reject parameter */\n\tif (symtable1 == EG(active_symbol_table) &&\n\t\tvar_len == sizeof(\"GLOBALS\")-1 &&\n\t\t!memcmp(var, \"GLOBALS\", sizeof(\"GLOBALS\")-1)) {\n\t\tzval_dtor(val);\n\t\tfree_alloca(var_orig, use_heap);\n\t\treturn;\n\t}\n\n\tindex = var;\n\tindex_len = var_len;\n\n\tif (is_array) {\n\t\tint nest_level = 0;\n\t\twhile (1) {\n\t\t\tchar *index_s;\n\t\t\tint new_idx_len = 0;\n\n\t\t\tif(++nest_level > PG(max_input_nesting_level)) {\n\t\t\t\tHashTable *ht;\n\t\t\t\t/* too many levels of nesting */\n\n\t\t\t\tif (track_vars_array) {\n\t\t\t\t\tht = Z_ARRVAL_P(track_vars_array);\n\t\t\t\t\tzend_symtable_del(ht, var, var_len + 1);\n\t\t\t\t}\n\n\t\t\t\tzval_dtor(val);\n\n\t\t\t\t/* do not output the error message to the screen,\n\t\t\t\t this helps us to to avoid \"information disclosure\" */\n\t\t\t\tif (!PG(display_errors)) {\n\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Input variable nesting level exceeded %ld. To increase the limit change max_input_nesting_level in php.ini.\", PG(max_input_nesting_level));\n\t\t\t\t}\n\t\t\t\tfree_alloca(var_orig, use_heap);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tip++;\n\t\t\tindex_s = ip;\n\t\t\tif (isspace(*ip)) {\n\t\t\t\tip++;\n\t\t\t}\n\t\t\tif (*ip==']') {\n\t\t\t\tindex_s = NULL;\n\t\t\t} else {\n\t\t\t\tip = strchr(ip, ']');\n\t\t\t\tif (!ip) {\n\t\t\t\t\t/* PHP variables cannot contain '[' in their names, so we replace the character with a '_' */\n\t\t\t\t\t*(index_s - 1) = '_';\n\n\t\t\t\t\tindex_len = 0;\n\t\t\t\t\tif (index) {\n\t\t\t\t\t\tindex_len = strlen(index);\n\t\t\t\t\t}\n\t\t\t\t\tgoto plain_var;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t*ip = 0;\n\t\t\t\tnew_idx_len = strlen(index_s);\t\n\t\t\t}\n\n\t\t\tif (!index) {\n\t\t\t\tMAKE_STD_ZVAL(gpc_element);\n\t\t\t\tarray_init(gpc_element);\n\t\t\t\tif (zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p) == FAILURE) {\n\t\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t\t\tzval_dtor(val);\n\t\t\t\t\tfree_alloca(var_orig, use_heap);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (zend_symtable_find(symtable1, index, index_len + 1, (void **) &gpc_element_p) == FAILURE\n\t\t\t\t\t|| Z_TYPE_PP(gpc_element_p) != IS_ARRAY) {\n\t\t\t\t\tif (zend_hash_num_elements(symtable1) <= PG(max_input_vars)) {\n\t\t\t\t\t\tif (zend_hash_num_elements(symtable1) == PG(max_input_vars)) {\n\t\t\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.\", PG(max_input_vars));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tMAKE_STD_ZVAL(gpc_element);\n\t\t\t\t\t\tarray_init(gpc_element);\n\t\t\t\t\t\tzend_symtable_update(symtable1, index, index_len + 1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzval_dtor(val);\n\t\t\t\t\t\tfree_alloca(var_orig, use_heap);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsymtable1 = Z_ARRVAL_PP(gpc_element_p);\n\t\t\t/* ip pointed to the '[' character, now obtain the key */\n\t\t\tindex = index_s;\n\t\t\tindex_len = new_idx_len;\n\n\t\t\tip++;\n\t\t\tif (*ip == '[') {\n\t\t\t\tis_array = 1;\n\t\t\t\t*ip = 0;\n\t\t\t} else {\n\t\t\t\tgoto plain_var;\n\t\t\t}\n\t\t}\n\t} else {\nplain_var:\n\t\tMAKE_STD_ZVAL(gpc_element);\n\t\tgpc_element->value = val->value;\n\t\tZ_TYPE_P(gpc_element) = Z_TYPE_P(val);\n\t\tif (!index) {\n\t\t\tif (zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p) == FAILURE) {\n\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t}\n\t\t} else {\n\t\t\t/* \n\t\t\t * According to rfc2965, more specific paths are listed above the less specific ones.\n\t\t\t * If we encounter a duplicate cookie name, we should skip it, since it is not possible\n\t\t\t * to have the same (plain text) cookie name for the same path and we should not overwrite\n\t\t\t * more specific cookies with the less specific ones.\n\t\t\t */\n\t\t\tif (PG(http_globals)[TRACK_VARS_COOKIE] &&\n\t\t\t\tsymtable1 == Z_ARRVAL_P(PG(http_globals)[TRACK_VARS_COOKIE]) &&\n\t\t\t\tzend_symtable_exists(symtable1, index, index_len + 1)) {\n\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t} else {\n\t\t\t\tif (zend_hash_num_elements(symtable1) <= PG(max_input_vars)) {\n\t\t\t\t\tif (zend_hash_num_elements(symtable1) == PG(max_input_vars)) {\n\t\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.\", PG(max_input_vars));\n\t\t\t\t\t}\n\t\t\t\t\tzend_symtable_update(symtable1, index, index_len + 1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);\n\t\t\t\t} else {\n\t\t\t\t\tzval_ptr_dtor(&gpc_element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfree_alloca(var_orig, use_heap);\n}",
    "filename": "main/php_variables.c"
  },
  "php_2012-02-12-3d898cfa3f-af92365239": {
    "buggy": "PHP_FUNCTION(compact)\n{\n\tzval ***args = NULL;\t/* function arguments array */\n\tint num_args, i;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"+\", &args, &num_args) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!EG(active_symbol_table)) {\n\t\tzend_rebuild_symbol_table(TSRMLS_C);\n\t}\n\n\t/* compact() is probably most used with a single array of var_names\n\t   or multiple string names, rather than a combination of both.\n\t   So quickly guess a minimum result size based on that */\n\tif (ZEND_NUM_ARGS() == 1 && Z_TYPE_PP(args[0]) == IS_ARRAY) {\n\t\tarray_init_size(return_value, zend_hash_num_elements(Z_ARRVAL_PP(args[0])));\n\t} else {\n\t\tarray_init_size(return_value, ZEND_NUM_ARGS());\n\t}\n\n\tfor (i=0; i<ZEND_NUM_ARGS(); i++) {\n\t\tphp_compact_var(EG(active_symbol_table), return_value, *args[i] TSRMLS_CC);\n\t}\n\n\tif (args) {\n\t\tefree(args);\n\t}\n}",
    "start": 1514,
    "end": 1543,
    "fix": "PHP_FUNCTION(compact)\n{\n\tzval ***args = NULL;\t/* function arguments array */\n\tint num_args, i;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"+\", &args, &num_args) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!EG(active_symbol_table)) {\n\t\tzend_rebuild_symbol_table(TSRMLS_C);\n\t}\n\n\t/* compact() is probably most used with a single array of var_names\n\t   or multiple string names, rather than a combination of both.\n\t   So quickly guess a minimum result size based on that */\n\tif (ZEND_NUM_ARGS() == 1 && Z_TYPE_PP(args[0]) == IS_ARRAY) {\n\t\tarray_init_size(return_value, zend_hash_num_elements(Z_ARRVAL_PP(args[0])));\n\t} else {\n\t\tarray_init_size(return_value, ZEND_NUM_ARGS());\n\t}\n\n\tfor (i=0; i<ZEND_NUM_ARGS(); i++) {\n\t\tphp_compact_var(EG(active_symbol_table), return_value, *args[i] TSRMLS_CC);\n\t}\n\n\tif (args) {\n\t\tefree(args);\n\t}\n}",
    "filename": "ext/standard/array.c"
  },
  "php_2012-02-20-0cb26060af-eefefddc0e": {
    "buggy": "int lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 995 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1775 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1154 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1763 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1184 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1740 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1203 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1700 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1406 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1718 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1445 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1731 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1459 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1753 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1495 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2226 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1607 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1623 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1640 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1662 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1673 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1695 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1721 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2176 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1838 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2165 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1854 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1871 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1893 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1904 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1926 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1952 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2144 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1975 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2268 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2108 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2130 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2152 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2163 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1849 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2185 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1839 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2211 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2398 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1431 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2628 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2645 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1191 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2660 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2893 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1448 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2907 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1494 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2956 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1887 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3018 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1978 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3093 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2047 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3141 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2138 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3152 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3167 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1555 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3200 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1473 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3313 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1515 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3346 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1955 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3363 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3403 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1419 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3421 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1411 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3434 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1399 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3444 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1403 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3454 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1395 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3464 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1407 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3474 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1391 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3484 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1964 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3506 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1379 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3516 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1375 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3551 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1921 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3594 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1371 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3608 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1367 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3635 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1427 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3646 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1355 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3656 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1387 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3666 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1423 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3681 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1351 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3697 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1347 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3708 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1383 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3763 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3916 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1339 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3960 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1359 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3970 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1327 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3980 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1315 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4003 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1343 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4014 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1311 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4024 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1335 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4034 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1690 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4174 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1663 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4221 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1645 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4252 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1624 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4308 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1608 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4375 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1651 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4407 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1588 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4457 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1561 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4514 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1279 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4580 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1259 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4604 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1307 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4627 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1207 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4803 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1211 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4851 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1215 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4925 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1219 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4962 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1223 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5004 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1227 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5049 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1231 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5113 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1203 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5131 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1195 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5155 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1255 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5198 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5208 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1363 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5234 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1331 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5244 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5255 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1303 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5304 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1299 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5363 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1295 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5397 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1133 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5410 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1125 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5439 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1267 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5467 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1117 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5508 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1101 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5552 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1283 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5580 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5611 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1319 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5634 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1415 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5647 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1287 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5685 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1057 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5713 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1041 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5726 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1271 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5782 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1239 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5840 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5873 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1141 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5911 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1263 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5965 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 5998 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1153 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6046 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1029 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6078 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1145 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6101 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1037 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6124 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1247 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6189 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1251 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6222 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1025 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6245 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1121 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6339 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1021 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6352 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1199 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6381 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1137 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6399 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1323 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6449 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1109 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6462 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1033 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6480 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1017 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6535 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1069 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6563 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1077 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6591 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1291 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6614 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1065 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6649 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1013 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6662 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1113 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6701 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1085 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6729 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1149 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6813 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1009 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6826 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1235 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6844 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1061 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6918 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1105 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6951 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1049 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6964 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1073 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 6997 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1081 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7025 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7063 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1275 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7086 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1053 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7119 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1045 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7137 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1129 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7155 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7236 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1181 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7250 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7266 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7291 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7369 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7382 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2340 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7459 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1536 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7578 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1868 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7603 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1863 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7614 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1873 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7631 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7646 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7661 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7703 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1548 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7750 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2405 \"Zend/zend_language_scanner.l\"\n\n}",
    "start": 986,
    "end": 7774,
    "fix": "int lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 995 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1779 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1154 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1767 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1184 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1744 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1203 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1704 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1406 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1722 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1445 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1735 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1459 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1757 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1495 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2230 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1607 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1623 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1640 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1662 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1673 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1853 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1695 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1843 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1721 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2180 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1838 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2169 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1854 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1871 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1893 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1904 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1853 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1926 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1843 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1952 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2148 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1975 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2272 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2108 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2130 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2152 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2163 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1853 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2185 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1843 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2211 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1884 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2398 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1431 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2628 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2645 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1191 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2660 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2893 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1448 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2907 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1494 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2956 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1891 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3018 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1982 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3093 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2051 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3141 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2142 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3152 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2400 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3167 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1559 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3200 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1473 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3313 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1515 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3350 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1959 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3367 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3407 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1419 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3425 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1411 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3438 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1399 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3448 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1403 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3458 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1395 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3468 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1407 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3478 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1391 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3488 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1968 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3510 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1379 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3520 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1375 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3555 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1925 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3598 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1371 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3612 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1367 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3639 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1427 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3650 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1355 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3660 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1387 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3670 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1423 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3685 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1351 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3701 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1347 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3712 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1383 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3767 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3920 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1339 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3964 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1359 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3974 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1327 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3984 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1315 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4007 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1343 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4018 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1311 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4028 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1335 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4038 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1694 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4178 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1667 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4225 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1649 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4256 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1628 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4312 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1612 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4379 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1655 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4411 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1592 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4461 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1565 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4518 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1279 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4584 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1259 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4608 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1307 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4631 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1207 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4807 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1211 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4855 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1215 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4929 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1219 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4966 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1223 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5008 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1227 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5053 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1231 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5117 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1203 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5135 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1195 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5159 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1255 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5202 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5212 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1363 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5238 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1331 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5248 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5259 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1303 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5308 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1299 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5367 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1295 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5401 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1133 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5414 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1125 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5443 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1267 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5471 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1117 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5512 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1101 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5556 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1283 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5584 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5615 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1319 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5638 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1415 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5651 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1287 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5689 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1057 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5717 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1041 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5730 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1271 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5786 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1239 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5844 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5877 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1141 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5915 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1263 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5969 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 6002 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1153 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6050 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1029 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6082 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1145 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6105 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1037 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6128 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1247 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6193 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1251 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6226 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1025 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6249 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1121 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6343 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1021 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6356 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1199 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6385 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1137 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6403 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1323 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6453 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1109 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6466 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1033 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6484 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1017 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6539 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1069 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6567 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1077 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6595 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1291 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6618 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1065 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6653 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1013 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6666 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1113 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6705 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1085 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6733 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1149 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6817 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1009 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6830 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1235 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6848 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1061 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6922 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1105 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6955 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1049 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6968 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1073 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 7001 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1081 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7029 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7067 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1275 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7090 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1053 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7123 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1045 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7141 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1129 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7159 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7240 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1181 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7254 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7270 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7295 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7373 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7386 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2344 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7463 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1540 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7582 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1872 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7607 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1867 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7618 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1877 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7635 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1884 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7650 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2400 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7665 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7707 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1552 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7754 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2409 \"Zend/zend_language_scanner.l\"\n\n}",
    "filename": "Zend/zend_language_scanner.c"
  },
  "php_2012-02-25-38b549ea2f-1923ecfe25": {
    "buggy": "static int parse_arg_object_to_string(zval **arg, char **p, int *pl, int type TSRMLS_DC) /* {{{ */\n{\n\tif (Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tzval *obj;\n\t\tALLOC_ZVAL(obj);\n\t\tMAKE_COPY_ZVAL(arg, obj);\n\t\tif (Z_OBJ_HANDLER_P(*arg, cast_object)(*arg, obj, type TSRMLS_CC) == SUCCESS) {\n\t\t\tzval_ptr_dtor(arg);\n\t\t\t*arg = obj;\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tzval_ptr_dtor(&obj);\n\t}\n\t/* Standard PHP objects */\n\tif (Z_OBJ_HT_PP(arg) == &std_object_handlers || !Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tSEPARATE_ZVAL_IF_NOT_REF(arg);\n\t\tif (zend_std_cast_object_tostring(*arg, *arg, type TSRMLS_CC) == SUCCESS) {\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\tif (!Z_OBJ_HANDLER_PP(arg, cast_object) && Z_OBJ_HANDLER_PP(arg, get)) {\n\t\tint use_copy;\n\t\tzval *z = Z_OBJ_HANDLER_PP(arg, get)(*arg TSRMLS_CC);\n\t\tZ_ADDREF_P(z);\n\t\tif(Z_TYPE_P(z) != IS_OBJECT) {\n\t\t\tzval_dtor(*arg);\n\t\t\tZ_TYPE_P(*arg) = IS_NULL;\n\t\t\tzend_make_printable_zval(z, *arg, &use_copy);\n\t\t\tif (!use_copy) {\n\t\t\t\tZVAL_ZVAL(*arg, z, 1, 1);\n\t\t\t}\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tzval_ptr_dtor(&z);\n\t}\n\treturn FAILURE;\n}",
    "start": 262,
    "end": 304,
    "fix": "static int parse_arg_object_to_string(zval **arg, char **p, int *pl, int type TSRMLS_DC) /* {{{ */\n{\n\tif (Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tzval *obj;\n\t\tMAKE_STD_ZVAL(obj);\n\t\tif (Z_OBJ_HANDLER_P(*arg, cast_object)(*arg, obj, type TSRMLS_CC) == SUCCESS) {\n\t\t\tzval_ptr_dtor(arg);\n\t\t\t*arg = obj;\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tefree(obj);\n\t}\n\t/* Standard PHP objects */\n\tif (Z_OBJ_HT_PP(arg) == &std_object_handlers || !Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tSEPARATE_ZVAL_IF_NOT_REF(arg);\n\t\tif (zend_std_cast_object_tostring(*arg, *arg, type TSRMLS_CC) == SUCCESS) {\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\tif (!Z_OBJ_HANDLER_PP(arg, cast_object) && Z_OBJ_HANDLER_PP(arg, get)) {\n\t\tint use_copy;\n\t\tzval *z = Z_OBJ_HANDLER_PP(arg, get)(*arg TSRMLS_CC);\n\t\tZ_ADDREF_P(z);\n\t\tif(Z_TYPE_P(z) != IS_OBJECT) {\n\t\t\tzval_dtor(*arg);\n\t\t\tZ_TYPE_P(*arg) = IS_NULL;\n\t\t\tzend_make_printable_zval(z, *arg, &use_copy);\n\t\t\tif (!use_copy) {\n\t\t\t\tZVAL_ZVAL(*arg, z, 1, 1);\n\t\t\t}\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tzval_ptr_dtor(&z);\n\t}\n\treturn FAILURE;\n}",
    "filename": "Zend/zend_API.c"
  },
  "php_2012-02-25-c1322d2505-cfa9c90b20": {
    "buggy": "static int parse_arg_object_to_string(zval **arg, char **p, int *pl, int type TSRMLS_DC) /* {{{ */\n{\n\tif (Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tSEPARATE_ZVAL_IF_NOT_REF(arg);\n\t\tif (Z_OBJ_HANDLER_PP(arg, cast_object)(*arg, *arg, type TSRMLS_CC) == SUCCESS) {\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\t/* Standard PHP objects */\n\tif (Z_OBJ_HT_PP(arg) == &std_object_handlers || !Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tSEPARATE_ZVAL_IF_NOT_REF(arg);\n\t\tif (zend_std_cast_object_tostring(*arg, *arg, type TSRMLS_CC) == SUCCESS) {\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\tif (!Z_OBJ_HANDLER_PP(arg, cast_object) && Z_OBJ_HANDLER_PP(arg, get)) {\n\t\tint use_copy;\n\t\tzval *z = Z_OBJ_HANDLER_PP(arg, get)(*arg TSRMLS_CC);\n\t\tZ_ADDREF_P(z);\n\t\tif(Z_TYPE_P(z) != IS_OBJECT) {\n\t\t\tzval_dtor(*arg);\n\t\t\tZ_TYPE_P(*arg) = IS_NULL;\n\t\t\tzend_make_printable_zval(z, *arg, &use_copy);\n\t\t\tif (!use_copy) {\n\t\t\t\tZVAL_ZVAL(*arg, z, 1, 1);\n\t\t\t}\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tzval_ptr_dtor(&z);\n\t}\n\treturn FAILURE;\n}",
    "start": 262,
    "end": 299,
    "fix": "static int parse_arg_object_to_string(zval **arg, char **p, int *pl, int type TSRMLS_DC) /* {{{ */\n{\n\tif (Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tzval *obj;\n\t\tALLOC_ZVAL(obj);\n\t\tMAKE_COPY_ZVAL(arg, obj);\n\t\tif (Z_OBJ_HANDLER_P(*arg, cast_object)(*arg, obj, type TSRMLS_CC) == SUCCESS) {\n\t\t\tzval_ptr_dtor(arg);\n\t\t\t*arg = obj;\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tzval_ptr_dtor(&obj);\n\t}\n\t/* Standard PHP objects */\n\tif (Z_OBJ_HT_PP(arg) == &std_object_handlers || !Z_OBJ_HANDLER_PP(arg, cast_object)) {\n\t\tSEPARATE_ZVAL_IF_NOT_REF(arg);\n\t\tif (zend_std_cast_object_tostring(*arg, *arg, type TSRMLS_CC) == SUCCESS) {\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t}\n\tif (!Z_OBJ_HANDLER_PP(arg, cast_object) && Z_OBJ_HANDLER_PP(arg, get)) {\n\t\tint use_copy;\n\t\tzval *z = Z_OBJ_HANDLER_PP(arg, get)(*arg TSRMLS_CC);\n\t\tZ_ADDREF_P(z);\n\t\tif(Z_TYPE_P(z) != IS_OBJECT) {\n\t\t\tzval_dtor(*arg);\n\t\t\tZ_TYPE_P(*arg) = IS_NULL;\n\t\t\tzend_make_printable_zval(z, *arg, &use_copy);\n\t\t\tif (!use_copy) {\n\t\t\t\tZVAL_ZVAL(*arg, z, 1, 1);\n\t\t\t}\n\t\t\t*pl = Z_STRLEN_PP(arg);\n\t\t\t*p = Z_STRVAL_PP(arg);\n\t\t\treturn SUCCESS;\n\t\t}\n\t\tzval_ptr_dtor(&z);\n\t}\n\treturn FAILURE;\n}",
    "filename": "Zend/zend_API.c"
  },
  "php_2012-03-02-730b54a374-1953161b8c": {
    "buggy": "int lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 995 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1779 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1154 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1767 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1184 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1744 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1203 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1704 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1406 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1722 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1445 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1735 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1459 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1757 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1495 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2230 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1607 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1623 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1640 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1662 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1673 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1853 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1695 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1843 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1721 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2180 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1838 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2169 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1854 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1871 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1893 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1904 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1853 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1926 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1843 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1952 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2148 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1975 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2272 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2108 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2130 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2152 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2163 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1853 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2185 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1843 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2211 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1884 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2398 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1431 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2628 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2645 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1191 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2660 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2893 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1448 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2907 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1494 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2956 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1891 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3018 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1982 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3093 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2051 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3141 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2142 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3152 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2400 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3167 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1559 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3200 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1473 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3313 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1515 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3350 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1959 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3367 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3407 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1419 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3425 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1411 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3438 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1399 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3448 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1403 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3458 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1395 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3468 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1407 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3478 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1391 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3488 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1968 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3510 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1379 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3520 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1375 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3555 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1925 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3598 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1371 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3612 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1367 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3639 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1427 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3650 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1355 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3660 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1387 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3670 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1423 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3685 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1351 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3701 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1347 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3712 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1383 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3767 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3920 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1339 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3964 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1359 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3974 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1327 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3984 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1315 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4007 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1343 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4018 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1311 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4028 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1335 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4038 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1694 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4178 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1667 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4225 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1649 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4256 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1628 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4312 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1612 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4379 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1655 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4411 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1592 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4461 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1565 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4518 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1279 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4584 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1259 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4608 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1307 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4631 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1207 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4807 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1211 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4855 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1215 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4929 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1219 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4966 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1223 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5008 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1227 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5053 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1231 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5117 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1203 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5135 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1195 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5159 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1255 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5202 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5212 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1363 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5238 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1331 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5248 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5259 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1303 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5308 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1299 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5367 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1295 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5401 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1133 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5414 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1125 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5443 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1267 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5471 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1117 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5512 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1101 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5556 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1283 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5584 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5615 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1319 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5638 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1415 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5651 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1287 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5689 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1057 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5717 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1041 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5730 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1271 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5786 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1239 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5844 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5877 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1141 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5915 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1263 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5969 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 6002 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1153 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6050 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1029 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6082 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1145 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6105 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1037 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6128 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1247 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6193 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1251 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6226 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1025 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6249 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1121 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6343 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1021 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6356 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1199 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6385 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1137 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6403 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1323 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6453 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1109 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6466 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1033 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6484 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1017 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6539 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1069 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6567 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1077 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6595 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1291 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6618 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1065 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6653 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1013 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6666 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1113 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6705 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1085 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6733 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1149 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6817 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1009 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6830 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1235 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6848 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1061 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6922 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1105 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6955 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1049 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6968 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1073 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 7001 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1081 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7029 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7067 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1275 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7090 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1053 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7123 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1045 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7141 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1129 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7159 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7240 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1181 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7254 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7270 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7295 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7373 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7386 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2344 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7463 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1540 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7582 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1872 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7607 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1867 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7618 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1877 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7635 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1884 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7650 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2400 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7665 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1861 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7707 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1552 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7754 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2409 \"Zend/zend_language_scanner.l\"\n\n}",
    "start": 986,
    "end": 7778,
    "fix": "int lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 995 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1783 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1154 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1771 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1184 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1748 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1203 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1708 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1406 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1726 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1445 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1739 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1459 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1761 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1495 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2234 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1607 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2178 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1623 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2165 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1640 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1865 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1662 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1673 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1695 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1847 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1721 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2184 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1838 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2173 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1854 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2165 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1871 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1865 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1893 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1904 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1926 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1847 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1952 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2152 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1975 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2276 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2108 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2165 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2130 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1865 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2152 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1442 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2163 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1857 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2185 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1847 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2211 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1888 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2398 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1431 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2628 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2645 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1191 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2660 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2893 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1448 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2907 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1498 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2956 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1895 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3018 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1986 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3093 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2055 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3141 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2146 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3152 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2404 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3167 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1563 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3200 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1473 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3317 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1519 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3354 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1963 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3371 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1865 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3411 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1419 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3429 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1411 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3442 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1399 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3452 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1403 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3462 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1395 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3472 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1407 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3482 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1391 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3492 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1972 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3514 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1379 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3524 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1375 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3559 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1929 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3602 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1371 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3616 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1367 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3643 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1427 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3654 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1355 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3664 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1387 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3674 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1423 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3689 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1351 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3705 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1347 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3716 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1383 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3771 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3924 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1339 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3968 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1359 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3978 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1327 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3988 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1315 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4011 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1343 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4022 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1311 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4032 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1335 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4042 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1698 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4182 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1671 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4229 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1653 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4260 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1632 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4316 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1616 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4383 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1659 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4415 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1596 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4465 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1569 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4522 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1279 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4588 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1259 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4612 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1307 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4635 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1207 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4811 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1211 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4859 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1215 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4933 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1219 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4970 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1223 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5012 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1227 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5057 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1231 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5121 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1203 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5139 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1195 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5163 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1255 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5206 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5216 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1363 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5242 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1331 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5252 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1157 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5263 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1303 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5312 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1299 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5371 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1295 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5405 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1133 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5418 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1125 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5447 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1267 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5475 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1117 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5516 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1101 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5560 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1283 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5588 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1097 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5619 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1319 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5642 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1415 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5655 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1287 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5693 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1057 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5721 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1041 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5734 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1271 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5790 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1239 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5848 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5881 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1141 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5919 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1263 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5973 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1093 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 6006 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1153 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6054 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1029 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6086 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1145 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6109 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1037 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6132 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1247 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6197 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1251 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6230 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1025 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6253 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1121 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6347 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1021 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6360 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1199 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6389 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1137 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6407 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1323 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6457 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1109 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6470 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1033 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6488 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1017 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6543 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1069 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6571 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1077 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6599 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1291 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6622 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1065 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6657 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1013 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6670 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1113 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6709 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1085 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6737 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1149 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6821 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1009 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6834 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1235 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6852 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1061 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6926 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1105 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6959 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1049 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6972 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1073 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 7005 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1081 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7033 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1089 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7071 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1275 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7094 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1053 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7127 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1045 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7145 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1129 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7163 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7244 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1181 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7258 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7274 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1170 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7299 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7377 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7390 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2348 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7467 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1544 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7586 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1876 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7611 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1871 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7622 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1881 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7639 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1888 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7654 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2404 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7669 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1865 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7711 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1556 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7758 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2413 \"Zend/zend_language_scanner.l\"\n\n}",
    "filename": "Zend/zend_language_scanner.c"
  },
  "php_2012-03-04-60dfd64bf2-34fe62619d": {
    "buggy": "void zend_do_begin_class_declaration(const znode *class_token, znode *class_name, const znode *parent_class_name TSRMLS_DC) /* {{{ */\n{\n\tzend_op *opline;\n\tint doing_inheritance = 0;\n\tzend_class_entry *new_class_entry;\n\tchar *lcname;\n\tint error = 0;\n\tzval **ns_name, key;\n\n\tif (CG(active_class_entry)) {\n\t\tzend_error(E_COMPILE_ERROR, \"Class declarations may not be nested\");\n\t\treturn;\n\t}\n\n\tlcname = zend_str_tolower_dup(class_name->u.constant.value.str.val, class_name->u.constant.value.str.len);\n\n\tif (!(strcmp(lcname, \"self\") && strcmp(lcname, \"parent\"))) {\n\t\tefree(lcname);\n\t\tzend_error(E_COMPILE_ERROR, \"Cannot use '%s' as class name as it is reserved\", Z_STRVAL(class_name->u.constant));\n\t}\n\n\t/* Class name must not conflict with import names */\n\tif (CG(current_import) &&\n\t    zend_hash_find(CG(current_import), lcname, Z_STRLEN(class_name->u.constant)+1, (void**)&ns_name) == SUCCESS) {\n\t\terror = 1;\n\t}\n\n\tif (CG(current_namespace)) {\n\t\t/* Prefix class name with name of current namespace */\n\t\tznode tmp;\n\n\t\ttmp.u.constant = *CG(current_namespace);\n\t\tzval_copy_ctor(&tmp.u.constant);\n\t\tzend_do_build_namespace_name(&tmp, &tmp, class_name TSRMLS_CC);\n\t\tclass_name = &tmp;\n\t\tefree(lcname);\n\t\tlcname = zend_str_tolower_dup(Z_STRVAL(class_name->u.constant), Z_STRLEN(class_name->u.constant));\n\t}\n\n\tif (error) {\n\t\tchar *tmp = zend_str_tolower_dup(Z_STRVAL_PP(ns_name), Z_STRLEN_PP(ns_name));\n\n\t\tif (Z_STRLEN_PP(ns_name) != Z_STRLEN(class_name->u.constant) ||\n\t\t\tmemcmp(tmp, lcname, Z_STRLEN(class_name->u.constant))) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot declare class %s because the name is already in use\", Z_STRVAL(class_name->u.constant));\n\t\t}\n\t\tefree(tmp);\n\t}\n\n\tnew_class_entry = emalloc(sizeof(zend_class_entry));\n\tnew_class_entry->type = ZEND_USER_CLASS;\n\tnew_class_entry->name = zend_new_interned_string(Z_STRVAL(class_name->u.constant), Z_STRLEN(class_name->u.constant) + 1, 1 TSRMLS_CC);\n\tnew_class_entry->name_length = Z_STRLEN(class_name->u.constant);\n\n\tzend_initialize_class_data(new_class_entry, 1 TSRMLS_CC);\n\tnew_class_entry->info.user.filename = zend_get_compiled_filename(TSRMLS_C);\n\tnew_class_entry->info.user.line_start = class_token->u.op.opline_num;\n\tnew_class_entry->ce_flags |= class_token->EA;\n\n\tif (parent_class_name && parent_class_name->op_type != IS_UNUSED) {\n\t\tswitch (parent_class_name->EA) {\n\t\t\tcase ZEND_FETCH_CLASS_SELF:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use 'self' as class name as it is reserved\");\n\t\t\t\tbreak;\n\t\t\tcase ZEND_FETCH_CLASS_PARENT:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use 'parent' as class name as it is reserved\");\n\t\t\t\tbreak;\n\t\t\tcase ZEND_FETCH_CLASS_STATIC:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use 'static' as class name as it is reserved\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tdoing_inheritance = 1;\n\t}\n\n\topline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\topline->op1_type = IS_CONST;\n\tbuild_runtime_defined_function_key(&key, lcname, new_class_entry->name_length TSRMLS_CC);\n\topline->op1.constant = zend_add_literal(CG(active_op_array), &key TSRMLS_CC);\n\tZ_HASH_P(&CONSTANT(opline->op1.constant)) = zend_hash_func(Z_STRVAL(CONSTANT(opline->op1.constant)), Z_STRLEN(CONSTANT(opline->op1.constant)));\n\t\n\topline->op2_type = IS_CONST;\n\n\tif (doing_inheritance) {\n       /* Make sure a trait does not try to extend a class */\n       if ((new_class_entry->ce_flags & ZEND_ACC_TRAIT) == ZEND_ACC_TRAIT) {\n           zend_error(E_COMPILE_ERROR, \"A trait (%s) cannot extend a class\", new_class_entry->name);\n       }\n    \n\t\topline->extended_value = parent_class_name->u.op.var;\n\t\topline->opcode = ZEND_DECLARE_INHERITED_CLASS;\n\t} else {\n\t\topline->opcode = ZEND_DECLARE_CLASS;\n\t}\n\n\tLITERAL_STRINGL(opline->op2, lcname, new_class_entry->name_length, 0);\n\tCALCULATE_LITERAL_HASH(opline->op2.constant);\n\t\n\tzend_hash_quick_update(CG(class_table), Z_STRVAL(key), Z_STRLEN(key), Z_HASH_P(&CONSTANT(opline->op1.constant)), &new_class_entry, sizeof(zend_class_entry *), NULL);\n\tCG(active_class_entry) = new_class_entry;\n\n\topline->result.var = get_temporary_variable(CG(active_op_array));\n\topline->result_type = IS_VAR;\n\tGET_NODE(&CG(implementing_class), opline->result);\n\n\tif (CG(doc_comment)) {\n\t\tCG(active_class_entry)->info.user.doc_comment = CG(doc_comment);\n\t\tCG(active_class_entry)->info.user.doc_comment_len = CG(doc_comment_len);\n\t\tCG(doc_comment) = NULL;\n\t\tCG(doc_comment_len) = 0;\n\t}\n}",
    "start": 4911,
    "end": 5023,
    "fix": "void zend_do_begin_class_declaration(const znode *class_token, znode *class_name, const znode *parent_class_name TSRMLS_DC) /* {{{ */\n{\n\tzend_op *opline;\n\tint doing_inheritance = 0;\n\tzend_class_entry *new_class_entry;\n\tchar *lcname;\n\tint error = 0;\n\tzval **ns_name, key;\n\n\tif (CG(active_class_entry)) {\n\t\tzend_error(E_COMPILE_ERROR, \"Class declarations may not be nested\");\n\t\treturn;\n\t}\n\n\tlcname = zend_str_tolower_dup(class_name->u.constant.value.str.val, class_name->u.constant.value.str.len);\n\n\tif (!(strcmp(lcname, \"self\") && strcmp(lcname, \"parent\"))) {\n\t\tefree(lcname);\n\t\tzend_error(E_COMPILE_ERROR, \"Cannot use '%s' as class name as it is reserved\", Z_STRVAL(class_name->u.constant));\n\t}\n\n\t/* Class name must not conflict with import names */\n\tif (CG(current_import) &&\n\t    zend_hash_find(CG(current_import), lcname, Z_STRLEN(class_name->u.constant)+1, (void**)&ns_name) == SUCCESS) {\n\t\terror = 1;\n\t}\n\n\tif (CG(current_namespace)) {\n\t\t/* Prefix class name with name of current namespace */\n\t\tznode tmp;\n\n\t\ttmp.u.constant = *CG(current_namespace);\n\t\tzval_copy_ctor(&tmp.u.constant);\n\t\tzend_do_build_namespace_name(&tmp, &tmp, class_name TSRMLS_CC);\n\t\tclass_name = &tmp;\n\t\tefree(lcname);\n\t\tlcname = zend_str_tolower_dup(Z_STRVAL(class_name->u.constant), Z_STRLEN(class_name->u.constant));\n\t}\n\n\tif (error) {\n\t\tchar *tmp = zend_str_tolower_dup(Z_STRVAL_PP(ns_name), Z_STRLEN_PP(ns_name));\n\n\t\tif (Z_STRLEN_PP(ns_name) != Z_STRLEN(class_name->u.constant) ||\n\t\t\tmemcmp(tmp, lcname, Z_STRLEN(class_name->u.constant))) {\n\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot declare class %s because the name is already in use\", Z_STRVAL(class_name->u.constant));\n\t\t}\n\t\tefree(tmp);\n\t}\n\n\tnew_class_entry = emalloc(sizeof(zend_class_entry));\n\tnew_class_entry->type = ZEND_USER_CLASS;\n\tnew_class_entry->name = zend_new_interned_string(Z_STRVAL(class_name->u.constant), Z_STRLEN(class_name->u.constant) + 1, 1 TSRMLS_CC);\n\tnew_class_entry->name_length = Z_STRLEN(class_name->u.constant);\n\n\tzend_initialize_class_data(new_class_entry, 1 TSRMLS_CC);\n\tnew_class_entry->info.user.filename = zend_get_compiled_filename(TSRMLS_C);\n\tnew_class_entry->info.user.line_start = class_token->u.op.opline_num;\n\tnew_class_entry->ce_flags |= class_token->EA;\n\n\tif (parent_class_name && parent_class_name->op_type != IS_UNUSED) {\n\t\tswitch (parent_class_name->EA) {\n\t\t\tcase ZEND_FETCH_CLASS_SELF:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use 'self' as class name as it is reserved\");\n\t\t\t\tbreak;\n\t\t\tcase ZEND_FETCH_CLASS_PARENT:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use 'parent' as class name as it is reserved\");\n\t\t\t\tbreak;\n\t\t\tcase ZEND_FETCH_CLASS_STATIC:\n\t\t\t\tzend_error(E_COMPILE_ERROR, \"Cannot use 'static' as class name as it is reserved\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tdoing_inheritance = 1;\n\t}\n\n\topline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\topline->op1_type = IS_CONST;\n\tbuild_runtime_defined_function_key(&key, lcname, new_class_entry->name_length TSRMLS_CC);\n\topline->op1.constant = zend_add_literal(CG(active_op_array), &key TSRMLS_CC);\n\tZ_HASH_P(&CONSTANT(opline->op1.constant)) = zend_hash_func(Z_STRVAL(CONSTANT(opline->op1.constant)), Z_STRLEN(CONSTANT(opline->op1.constant)));\n\t\n\topline->op2_type = IS_CONST;\n\n\tif (doing_inheritance) {\n       /* Make sure a trait does not try to extend a class */\n       if ((new_class_entry->ce_flags & ZEND_ACC_TRAIT) == ZEND_ACC_TRAIT) {\n           zend_error(E_COMPILE_ERROR, \"A trait (%s) cannot extend a class. Traits can only be composed from other traits with the 'use' keyword. Error\", new_class_entry->name);\n       }\n    \n\t\topline->extended_value = parent_class_name->u.op.var;\n\t\topline->opcode = ZEND_DECLARE_INHERITED_CLASS;\n\t} else {\n\t\topline->opcode = ZEND_DECLARE_CLASS;\n\t}\n\n\tLITERAL_STRINGL(opline->op2, lcname, new_class_entry->name_length, 0);\n\tCALCULATE_LITERAL_HASH(opline->op2.constant);\n\t\n\tzend_hash_quick_update(CG(class_table), Z_STRVAL(key), Z_STRLEN(key), Z_HASH_P(&CONSTANT(opline->op1.constant)), &new_class_entry, sizeof(zend_class_entry *), NULL);\n\tCG(active_class_entry) = new_class_entry;\n\n\topline->result.var = get_temporary_variable(CG(active_op_array));\n\topline->result_type = IS_VAR;\n\tGET_NODE(&CG(implementing_class), opline->result);\n\n\tif (CG(doc_comment)) {\n\t\tCG(active_class_entry)->info.user.doc_comment = CG(doc_comment);\n\t\tCG(active_class_entry)->info.user.doc_comment_len = CG(doc_comment_len);\n\t\tCG(doc_comment) = NULL;\n\t\tCG(doc_comment_len) = 0;\n\t}\n}",
    "filename": "Zend/zend_compile.c"
  },
  "php_2012-03-08-0169020e49-cdc512afb3": {
    "buggy": "void php_stream_display_wrapper_errors(php_stream_wrapper *wrapper, const char *path, const char *caption TSRMLS_DC)\n{\n\tchar *tmp = estrdup(path);\n\tchar *msg;\n\tint free_msg = 0;\n\n\tif (wrapper) {\n\t\tzend_llist *err_list = php_get_wrapper_errors_list(wrapper TSRMLS_CC);\n\t\tif (err_list) {\n\t\t\tsize_t l = 0;\n\t\t\tint brlen;\n\t\t\tint i;\n\t\t\tint count = zend_llist_count(err_list);\n\t\t\tconst char *br;\n\t\t\tconst char **err_buf_p;\n\t\t\tzend_llist_position pos;\n\n\t\t\tif (PG(html_errors)) {\n\t\t\t\tbrlen = 7;\n\t\t\t\tbr = \"<br />\\n\";\n\t\t\t} else {\n\t\t\t\tbrlen = 1;\n\t\t\t\tbr = \"\\n\";\n\t\t\t}\n\n\t\t\tfor (err_buf_p = zend_llist_get_first_ex(err_list, &pos), i = 0;\n\t\t\t\t\terr_buf_p;\n\t\t\t\t\terr_buf_p = zend_llist_get_next_ex(err_list, &pos), i++) {\n\t\t\t\tl += strlen(*err_buf_p);\n\t\t\t\tif (i < count - 1) {\n\t\t\t\t\tl += brlen;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmsg = emalloc(l + 1);\n\t\t\tmsg[0] = '\\0';\n\t\t\tfor (err_buf_p = zend_llist_get_first_ex(err_list, &pos), i = 0;\n\t\t\t\t\terr_buf_p;\n\t\t\t\t\terr_buf_p = zend_llist_get_next_ex(err_list, &pos), i++) {\n\t\t\t\tstrcat(msg, *err_buf_p);\n\t\t\t\tif (i < count - 1) {\n\t\t\t\t\tl += brlen;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfree_msg = 1;\n\t\t} else {\n\t\t\tif (wrapper == &php_plain_files_wrapper) {\n\t\t\t\tmsg = strerror(errno); /* TODO: not ts on linux */\n\t\t\t} else {\n\t\t\t\tmsg = \"operation failed\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmsg = \"no suitable wrapper could be found\";\n\t}\n\n\tphp_strip_url_passwd(tmp);\n\tphp_error_docref1(NULL TSRMLS_CC, tmp, E_WARNING, \"%s: %s\", caption, msg);\n\tefree(tmp);\n\tif (free_msg) {\n\t\tefree(msg);\n\t}\n}",
    "start": 173,
    "end": 235,
    "fix": "void php_stream_display_wrapper_errors(php_stream_wrapper *wrapper, const char *path, const char *caption TSRMLS_DC)\n{\n\tchar *tmp = estrdup(path);\n\tchar *msg;\n\tint free_msg = 0;\n\n\tif (wrapper) {\n\t\tzend_llist *err_list = php_get_wrapper_errors_list(wrapper TSRMLS_CC);\n\t\tif (err_list) {\n\t\t\tsize_t l = 0;\n\t\t\tint brlen;\n\t\t\tint i;\n\t\t\tint count = zend_llist_count(err_list);\n\t\t\tconst char *br;\n\t\t\tconst char **err_buf_p;\n\t\t\tzend_llist_position pos;\n\n\t\t\tif (PG(html_errors)) {\n\t\t\t\tbrlen = 7;\n\t\t\t\tbr = \"<br />\\n\";\n\t\t\t} else {\n\t\t\t\tbrlen = 1;\n\t\t\t\tbr = \"\\n\";\n\t\t\t}\n\n\t\t\tfor (err_buf_p = zend_llist_get_first_ex(err_list, &pos), i = 0;\n\t\t\t\t\terr_buf_p;\n\t\t\t\t\terr_buf_p = zend_llist_get_next_ex(err_list, &pos), i++) {\n\t\t\t\tl += strlen(*err_buf_p);\n\t\t\t\tif (i < count - 1) {\n\t\t\t\t\tl += brlen;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmsg = emalloc(l + 1);\n\t\t\tmsg[0] = '\\0';\n\t\t\tfor (err_buf_p = zend_llist_get_first_ex(err_list, &pos), i = 0;\n\t\t\t\t\terr_buf_p;\n\t\t\t\t\terr_buf_p = zend_llist_get_next_ex(err_list, &pos), i++) {\n\t\t\t\tstrcat(msg, *err_buf_p);\n\t\t\t\tif (i < count - 1) {\n\t\t\t\t\tstrcat(msg, br);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfree_msg = 1;\n\t\t} else {\n\t\t\tif (wrapper == &php_plain_files_wrapper) {\n\t\t\t\tmsg = strerror(errno); /* TODO: not ts on linux */\n\t\t\t} else {\n\t\t\t\tmsg = \"operation failed\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmsg = \"no suitable wrapper could be found\";\n\t}\n\n\tphp_strip_url_passwd(tmp);\n\tphp_error_docref1(NULL TSRMLS_CC, tmp, E_WARNING, \"%s: %s\", caption, msg);\n\tefree(tmp);\n\tif (free_msg) {\n\t\tefree(msg);\n\t}\n}",
    "filename": "main/streams/streams.c"
  },
  "php_2012-03-10-23e65a9dcc-e6ec1fb166": {
    "buggy": "static int spl_array_has_dimension_ex(int check_inherited, zval *object, zval *offset, int check_empty TSRMLS_DC) /* {{{ */\n{\n\tspl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);\n\tlong index;\n\tzval *rv, **tmp;\n\n\tif (check_inherited && intern->fptr_offset_has) {\n\t\tSEPARATE_ARG_IF_REF(offset);\n\t\tzend_call_method_with_1_params(&object, Z_OBJCE_P(object), &intern->fptr_offset_has, \"offsetExists\", &rv, offset);\n\t\tzval_ptr_dtor(&offset);\n\t\tif (rv && zend_is_true(rv)) {\n\t\t\tzval_ptr_dtor(&rv);\n\t\t\treturn 1;\n\t\t}\n\t\tif (rv) {\n\t\t\tzval_ptr_dtor(&rv);\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tswitch(Z_TYPE_P(offset)) {\n\tcase IS_STRING:\n\t\tif (check_empty) {\n\t\t\tif (zend_symtable_find(spl_array_get_hash_table(intern, 0 TSRMLS_CC), Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1, (void **) &tmp) != FAILURE) {\n\t\t\t\tswitch (check_empty) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn Z_TYPE_PP(tmp) != IS_NULL;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn zend_is_true(*tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn zend_symtable_exists(spl_array_get_hash_table(intern, 0 TSRMLS_CC), Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);\n\t\t}\n\tcase IS_DOUBLE:\n\tcase IS_RESOURCE:\n\tcase IS_BOOL: \n\tcase IS_LONG: \n\t\tif (offset->type == IS_DOUBLE) {\n\t\t\tindex = (long)Z_DVAL_P(offset);\n\t\t} else {\n\t\t\tindex = Z_LVAL_P(offset);\n\t\t}\n\t\tif (check_empty) {\n\t\t\tHashTable *ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\t\tif (zend_hash_index_find(ht, index, (void **)&tmp) != FAILURE) {\n\t\t\t\tswitch (check_empty) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn Z_TYPE_PP(tmp) != IS_NULL;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn zend_is_true(*tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn zend_hash_index_exists(spl_array_get_hash_table(intern, 0 TSRMLS_CC), index);\n\t\t}\n\tdefault:\n\t\tzend_error(E_WARNING, \"Illegal offset type\");\n\t}\n\treturn 0;\n} /* }}} */",
    "start": 583,
    "end": 649,
    "fix": "static int spl_array_has_dimension_ex(int check_inherited, zval *object, zval *offset, int check_empty TSRMLS_DC) /* {{{ */\n{\n\tspl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);\n\tlong index;\n\tzval *rv, **tmp;\n\n\tif (check_inherited && intern->fptr_offset_has) {\n\t\tSEPARATE_ARG_IF_REF(offset);\n\t\tzend_call_method_with_1_params(&object, Z_OBJCE_P(object), &intern->fptr_offset_has, \"offsetExists\", &rv, offset);\n\t\tzval_ptr_dtor(&offset);\n\t\tif (rv && zend_is_true(rv)) {\n\t\t\tzval_ptr_dtor(&rv);\n\t\t\treturn 1;\n\t\t}\n\t\tif (rv) {\n\t\t\tzval_ptr_dtor(&rv);\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tswitch(Z_TYPE_P(offset)) {\n\t\tcase IS_STRING:\n\t\t\t{\n\t\t\t\tHashTable *ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\t\t\tif (zend_symtable_find(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1, (void **) &tmp) != FAILURE) {\n\t\t\t\t\tswitch (check_empty) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn Z_TYPE_PP(tmp) != IS_NULL;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn zend_is_true(*tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\tcase IS_DOUBLE:\n\t\tcase IS_RESOURCE:\n\t\tcase IS_BOOL: \n\t\tcase IS_LONG:\n\t\t\t{\t\n\t\t\t\tHashTable *ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);\n\t\t\t\tif (offset->type == IS_DOUBLE) {\n\t\t\t\t\tindex = (long)Z_DVAL_P(offset);\n\t\t\t\t} else {\n\t\t\t\t\tindex = Z_LVAL_P(offset);\n\t\t\t\t}\n\t\t\t\tif (zend_hash_index_find(ht, index, (void **)&tmp) != FAILURE) {\n\t\t\t\t\tswitch (check_empty) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn Z_TYPE_PP(tmp) != IS_NULL;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn zend_is_true(*tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\tdefault:\n\t\t\tzend_error(E_WARNING, \"Illegal offset type\");\n\t}\n\treturn 0;\n} /* }}} */",
    "filename": "ext/spl/spl_array.c"
  },
  "php_2012-03-11-3954743813-d4f05fbffc": {
    "buggy": "ZEND_METHOD(exception, __construct)\n{\n\tchar  *message = NULL;\n\tlong   code = 0;\n\tzval  *object, *previous = NULL;\n\tint    argc = ZEND_NUM_ARGS(), message_len;\n\n\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, argc TSRMLS_CC, \"|slO!\", &message, &message_len, &code, &previous, default_exception_ce) == FAILURE) {\n\t\tzend_error(E_ERROR, \"Wrong parameters for Exception([string $exception [, long $code [, Exception $previous = NULL]]])\");\n\t}\n\n\tobject = getThis();\n\n\tif (message) {\n\t\tzend_update_property_string(default_exception_ce, object, \"message\", sizeof(\"message\")-1, message TSRMLS_CC);\n\t}\n\n\tif (code) {\n\t\tzend_update_property_long(default_exception_ce, object, \"code\", sizeof(\"code\")-1, code TSRMLS_CC);\n\t}\n\n\tif (previous) {\n\t\tzend_update_property(default_exception_ce, object, \"previous\", sizeof(\"previous\")-1, previous TSRMLS_CC);\n\t}\n}",
    "start": 194,
    "end": 218,
    "fix": "ZEND_METHOD(exception, __construct)\n{\n\tchar  *message = NULL;\n\tlong   code = 0;\n\tzval  *object, *previous = NULL;\n\tint    argc = ZEND_NUM_ARGS(), message_len;\n\n\tif (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, argc TSRMLS_CC, \"|slO!\", &message, &message_len, &code, &previous, default_exception_ce) == FAILURE) {\n\t\tzend_error(E_ERROR, \"Wrong parameters for Exception([string $exception [, long $code [, Exception $previous = NULL]]])\");\n\t}\n\n\tobject = getThis();\n\n\tif (message) {\n\t\tzend_update_property_stringl(default_exception_ce, object, \"message\", sizeof(\"message\")-1, message, message_len TSRMLS_CC);\n\t}\n\n\tif (code) {\n\t\tzend_update_property_long(default_exception_ce, object, \"code\", sizeof(\"code\")-1, code TSRMLS_CC);\n\t}\n\n\tif (previous) {\n\t\tzend_update_property(default_exception_ce, object, \"previous\", sizeof(\"previous\")-1, previous TSRMLS_CC);\n\t}\n}",
    "filename": "Zend/zend_exceptions.c"
  },
  "php_2012-03-12-438a30f1e7-7337a901b7": {
    "buggy": "PHP_FUNCTION(time_nanosleep)\n{\n\tlong tv_sec, tv_nsec;\n\tstruct timespec php_req, php_rem;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ll\", &tv_sec, &tv_nsec) == FAILURE) {\n\t\treturn;\n\t}\n\n\tphp_req.tv_sec = (time_t) tv_sec;\n\tphp_req.tv_nsec = tv_nsec;\n\tif (!nanosleep(&php_req, &php_rem)) {\n\t\tRETURN_TRUE;\n\t} else if (errno == EINTR) {\n\t\tarray_init(return_value);\n\t\tadd_assoc_long_ex(return_value, \"seconds\", sizeof(\"seconds\"), php_rem.tv_sec);\n\t\tadd_assoc_long_ex(return_value, \"nanoseconds\", sizeof(\"nanoseconds\"), php_rem.tv_nsec);\n\t\treturn;\n\t} else if (errno == EINVAL) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"nanoseconds was not in the range 0 to 999 999 999 or seconds was negative\");\n\t}\n\n\tRETURN_FALSE;\n}",
    "start": 4461,
    "end": 4484,
    "fix": "PHP_FUNCTION(time_nanosleep)\n{\n\tlong tv_sec, tv_nsec;\n\tstruct timespec php_req, php_rem;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ll\", &tv_sec, &tv_nsec) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (tv_sec < 0) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The seconds value must be greater than 0\");\n\t\tRETURN_FALSE;\n\t}\n\tif (tv_nsec < 0) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"The nanoseconds value must be greater than 0\");\n\t\tRETURN_FALSE;\n\t}\n\n\tphp_req.tv_sec = (time_t) tv_sec;\n\tphp_req.tv_nsec = tv_nsec;\n\tif (!nanosleep(&php_req, &php_rem)) {\n\t\tRETURN_TRUE;\n\t} else if (errno == EINTR) {\n\t\tarray_init(return_value);\n\t\tadd_assoc_long_ex(return_value, \"seconds\", sizeof(\"seconds\"), php_rem.tv_sec);\n\t\tadd_assoc_long_ex(return_value, \"nanoseconds\", sizeof(\"nanoseconds\"), php_rem.tv_nsec);\n\t\treturn;\n\t} else if (errno == EINVAL) {\n\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"nanoseconds was not in the range 0 to 999 999 999 or seconds was negative\");\n\t}\n\n\tRETURN_FALSE;\n}",
    "filename": "ext/standard/basic_functions.c"
  },
  "php_2012-03-12-7aefbf70a8-efc94f3115": {
    "buggy": "static void traverse_for_entities(\n\tconst char *old,\n\tsize_t oldlen,\n\tchar *ret, /* should have allocated TRAVERSE_FOR_ENTITIES_EXPAND_SIZE(olden) */\n\tsize_t *retlen,\n\tint all,\n\tint flags,\n\tconst entity_ht *inv_map,\n\tenum entity_charset charset)\n{\n\tconst char *p,\n\t\t\t   *lim;\n\tchar\t   *q;\n\tint doctype = flags & ENT_HTML_DOC_TYPE_MASK;\n\n\tlim = old + oldlen; /* terminator address */\n\tassert(*lim == '\\0');\n\n\tfor (p = old, q = ret; p < lim;) {\n\t\tunsigned code, code2 = 0;\n\t\tconst char *next = NULL; /* when set, next > p, otherwise possible inf loop */\n\n\t\t/* Shift JIS, Big5 and HKSCS use multi-byte encodings where an\n\t\t * ASCII range byte can be part of a multi-byte sequence.\n\t\t * However, they start at 0x40, therefore if we find a 0x26 byte,\n\t\t * we're sure it represents the '&' character. */\n\n\t\t/* assumes there are no single-char entities */\n\t\tif (p[0] != '&' || (p + 3 >= lim)) {\n\t\t\t*(q++) = *(p++);\n\t\t\tcontinue;\n\t\t}\n\n\t\t/* now p[3] is surely valid and is no terminator */\n\n\t\t/* numerical entity */\n\t\tif (p[1] == '#') {\n\t\t\tnext = &p[2];\n\t\t\tif (process_numeric_entity(&next, &code) == FAILURE)\n\t\t\t\tgoto invalid_code;\n\n\t\t\t/* If we're in htmlspecialchars_decode, we're only decoding entities\n\t\t\t * that represent &, <, >, \" and '. Is this one of them? */\n\t\t\tif (!all && (code > 63U ||\n\t\t\t\t\tstage3_table_be_apos_00000[code].data.ent.entity == NULL))\n\t\t\t\tgoto invalid_code;\n\n\t\t\t/* are we allowed to decode this entity in this document type?\n\t\t\t * HTML 5 is the only that has a character that cannot be used in \n\t\t\t * a numeric entity but is allowed literally (U+000D). The\n\t\t\t * unoptimized version would be ... || !numeric_entity_is_allowed(code) */\n\t\t\tif (!unicode_cp_is_allowed(code, doctype) ||\n\t\t\t\t\t(doctype == ENT_HTML_DOC_HTML5 && code == 0x0D))\n\t\t\t\tgoto invalid_code;\n\t\t} else {\n\t\t\tconst char *start;\n\t\t\tsize_t ent_len;\n\n\t\t\tnext = &p[1];\n\t\t\tstart = next;\n\n\t\t\tif (process_named_entity_html(&next, &start, &ent_len) == FAILURE)\n\t\t\t\tgoto invalid_code;\n\n\t\t\tif (resolve_named_entity_html(start, ent_len, inv_map, &code, &code2) == FAILURE) {\n\t\t\t\tif (doctype == ENT_HTML_DOC_XHTML && ent_len == 4 && start[0] == 'a'\n\t\t\t\t\t\t\t&& start[1] == 'p' && start[2] == 'o' && start[3] == 's') {\n\t\t\t\t\t/* uses html4 inv_map, which doesn't include apos;. This is a\n\t\t\t\t\t * hack to support it */\n\t\t\t\t\tcode = (unsigned) '\\'';\n\t\t\t\t} else {\n\t\t\t\t\tgoto invalid_code;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tassert(*next == ';');\n\t\t\n\t\tif (((code == '\\'' && !(flags & ENT_HTML_QUOTE_SINGLE)) ||\n\t\t\t\t(code == '\"' && !(flags & ENT_HTML_QUOTE_DOUBLE)))\n\t\t\t\t/* && code2 == '\\0' always true for current maps */)\n\t\t\tgoto invalid_code;\n\n\t\t/* deal with encodings other than utf-8/iso-8859-1 */\n\t\tif (!CHARSET_UNICODE_COMPAT(charset)) {\n\t\t\t/* replace unicode code point */\n\t\t\tif (map_from_unicode(code, charset, &code) == FAILURE || code2 != 0)\n\t\t\t\tgoto invalid_code; /* not representable in target charset */\n\t\t}\n\n\t\tq += write_octet_sequence(q, charset, code);\n\t\tif (code2) {\n\t\t\tq += write_octet_sequence(q, charset, code2);\n\t\t}\n\n\t\t/* jump over the valid entity; may go beyond size of buffer; np */\n\t\tp = next + 1;\n\t\tcontinue;\n\ninvalid_code:\n\t\tfor (; p < next; p++) {\n\t\t\t*(q++) = *p;\n\t\t}\n\t}\n\t\n\t*q = '\\0';\n\t*retlen = (size_t)(q - ret);\n}",
    "start": 924,
    "end": 1031,
    "fix": "static void traverse_for_entities(\n\tconst char *old,\n\tsize_t oldlen,\n\tchar *ret, /* should have allocated TRAVERSE_FOR_ENTITIES_EXPAND_SIZE(olden) */\n\tsize_t *retlen,\n\tint all,\n\tint flags,\n\tconst entity_ht *inv_map,\n\tenum entity_charset charset)\n{\n\tconst char *p,\n\t\t\t   *lim;\n\tchar\t   *q;\n\tint doctype = flags & ENT_HTML_DOC_TYPE_MASK;\n\n\tlim = old + oldlen; /* terminator address */\n\tassert(*lim == '\\0');\n\n\tfor (p = old, q = ret; p < lim;) {\n\t\tunsigned code, code2 = 0;\n\t\tconst char *next = NULL; /* when set, next > p, otherwise possible inf loop */\n\n\t\t/* Shift JIS, Big5 and HKSCS use multi-byte encodings where an\n\t\t * ASCII range byte can be part of a multi-byte sequence.\n\t\t * However, they start at 0x40, therefore if we find a 0x26 byte,\n\t\t * we're sure it represents the '&' character. */\n\n\t\t/* assumes there are no single-char entities */\n\t\tif (p[0] != '&' || (p + 3 >= lim)) {\n\t\t\t*(q++) = *(p++);\n\t\t\tcontinue;\n\t\t}\n\n\t\t/* now p[3] is surely valid and is no terminator */\n\n\t\t/* numerical entity */\n\t\tif (p[1] == '#') {\n\t\t\tnext = &p[2];\n\t\t\tif (process_numeric_entity(&next, &code) == FAILURE)\n\t\t\t\tgoto invalid_code;\n\n\t\t\t/* If we're in htmlspecialchars_decode, we're only decoding entities\n\t\t\t * that represent &, <, >, \" and '. Is this one of them? */\n\t\t\tif (!all && (code > 63U ||\n\t\t\t\t\tstage3_table_be_apos_00000[code].data.ent.entity == NULL))\n\t\t\t\tgoto invalid_code;\n\n\t\t\t/* are we allowed to decode this entity in this document type?\n\t\t\t * HTML 5 is the only that has a character that cannot be used in \n\t\t\t * a numeric entity but is allowed literally (U+000D). The\n\t\t\t * unoptimized version would be ... || !numeric_entity_is_allowed(code) */\n\t\t\tif (!unicode_cp_is_allowed(code, doctype) ||\n\t\t\t\t\t(doctype == ENT_HTML_DOC_HTML5 && code == 0x0D))\n\t\t\t\tgoto invalid_code;\n\t\t} else {\n\t\t\tconst char *start;\n\t\t\tsize_t ent_len;\n\n\t\t\tnext = &p[1];\n\t\t\tstart = next;\n\n\t\t\tif (process_named_entity_html(&next, &start, &ent_len) == FAILURE)\n\t\t\t\tgoto invalid_code;\n\n\t\t\tif (resolve_named_entity_html(start, ent_len, inv_map, &code, &code2) == FAILURE) {\n\t\t\t\tif (doctype == ENT_HTML_DOC_XHTML && ent_len == 4 && start[0] == 'a'\n\t\t\t\t\t\t\t&& start[1] == 'p' && start[2] == 'o' && start[3] == 's') {\n\t\t\t\t\t/* uses html4 inv_map, which doesn't include apos;. This is a\n\t\t\t\t\t * hack to support it */\n\t\t\t\t\tcode = (unsigned) '\\'';\n\t\t\t\t} else {\n\t\t\t\t\tgoto invalid_code;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tassert(*next == ';');\n\t\t\n\t\tif (((code == '\\'' && !(flags & ENT_HTML_QUOTE_SINGLE)) ||\n\t\t\t\t(code == '\"' && !(flags & ENT_HTML_QUOTE_DOUBLE)))\n\t\t\t\t/* && code2 == '\\0' always true for current maps */)\n\t\t\tgoto invalid_code;\n\n\t\t/* UTF-8 doesn't need mapping (ISO-8859-1 doesn't either, but\n\t\t * the call is needed to ensure the codepoint <= U+00FF)  */\n\t\tif (charset != cs_utf_8) {\n\t\t\t/* replace unicode code point */\n\t\t\tif (map_from_unicode(code, charset, &code) == FAILURE || code2 != 0)\n\t\t\t\tgoto invalid_code; /* not representable in target charset */\n\t\t}\n\n\t\tq += write_octet_sequence(q, charset, code);\n\t\tif (code2) {\n\t\t\tq += write_octet_sequence(q, charset, code2);\n\t\t}\n\n\t\t/* jump over the valid entity; may go beyond size of buffer; np */\n\t\tp = next + 1;\n\t\tcontinue;\n\ninvalid_code:\n\t\tfor (; p < next; p++) {\n\t\t\t*(q++) = *p;\n\t\t}\n\t}\n\t\n\t*q = '\\0';\n\t*retlen = (size_t)(q - ret);\n}",
    "filename": "ext/standard/html.c"
  },
  "python_69223-69224": {
    "buggy": "select_select(PyObject *self, PyObject *args)\n{\n#ifdef SELECT_USES_HEAP\n    pylist *rfd2obj, *wfd2obj, *efd2obj;\n#else  /* !SELECT_USES_HEAP */\n    /* XXX: All this should probably be implemented as follows:\n     * - find the highest descriptor we're interested in\n     * - add one\n     * - that's the size\n     * See: Stevens, APitUE, $12.5.1\n     */\n    pylist rfd2obj[FD_SETSIZE + 1];\n    pylist wfd2obj[FD_SETSIZE + 1];\n    pylist efd2obj[FD_SETSIZE + 1];\n#endif /* SELECT_USES_HEAP */\n    PyObject *ifdlist, *ofdlist, *efdlist;\n    PyObject *ret = NULL;\n    PyObject *tout = Py_None;\n    fd_set ifdset, ofdset, efdset;\n    double timeout;\n    struct timeval tv, *tvp;\n    long seconds;\n    int imax, omax, emax, max;\n    int n;\n\n    /* convert arguments */\n    if (!PyArg_UnpackTuple(args, \"select\", 3, 4,\n                          &ifdlist, &ofdlist, &efdlist, &tout))\n        return NULL;\n\n    if (tout == Py_None)\n        tvp = (struct timeval *)0;\n    else if (!PyNumber_Check(tout)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"timeout must be a float or None\");\n        return NULL;\n    }\n    else {\n        timeout = PyFloat_AsDouble(tout);\n        if (timeout == -1 && PyErr_Occurred())\n            return NULL;\n        if (timeout > (double)LONG_MAX) {\n            PyErr_SetString(PyExc_OverflowError,\n                            \"timeout period too long\");\n            return NULL;\n        }\n        seconds = (long)timeout;\n        timeout = timeout - (double)seconds;\n        tv.tv_sec = seconds;\n        tv.tv_usec = (long)(timeout * 1E6);\n        tvp = &tv;\n    }\n\n\n#ifdef SELECT_USES_HEAP\n    /* Allocate memory for the lists */\n    rfd2obj = PyMem_NEW(pylist, FD_SETSIZE + 1);\n    wfd2obj = PyMem_NEW(pylist, FD_SETSIZE + 1);\n    efd2obj = PyMem_NEW(pylist, FD_SETSIZE + 1);\n    if (rfd2obj == NULL || wfd2obj == NULL || efd2obj == NULL) {\n        if (rfd2obj) PyMem_DEL(rfd2obj);\n        if (wfd2obj) PyMem_DEL(wfd2obj);\n        if (efd2obj) PyMem_DEL(efd2obj);\n        return PyErr_NoMemory();\n    }\n#endif /* SELECT_USES_HEAP */\n    /* Convert sequences to fd_sets, and get maximum fd number\n     * propagates the Python exception set in seq2set()\n     */\n    rfd2obj[0].sentinel = -1;\n    wfd2obj[0].sentinel = -1;\n    efd2obj[0].sentinel = -1;\n    if ((imax=seq2set(ifdlist, &ifdset, rfd2obj)) < 0)\n        goto finally;\n    if ((omax=seq2set(ofdlist, &ofdset, wfd2obj)) < 0)\n        goto finally;\n    if ((emax=seq2set(efdlist, &efdset, efd2obj)) < 0)\n        goto finally;\n    max = imax;\n    if (omax > max) max = omax;\n    if (emax > max) max = emax;\n\n    Py_BEGIN_ALLOW_THREADS\n    n = select(max, &ifdset, &ofdset, &efdset, tvp);\n    Py_END_ALLOW_THREADS\n\n#ifdef MS_WINDOWS\n    if (n == SOCKET_ERROR) {\n        PyErr_SetExcFromWindowsErr(SelectError, WSAGetLastError());\n    }\n#else\n    if (n < 0) {\n        PyErr_SetFromErrno(SelectError);\n    }\n#endif\n    else {\n        /* any of these three calls can raise an exception.  it's more\n           convenient to test for this after all three calls... but\n           is that acceptable?\n        */\n        ifdlist = set2list(&ifdset, rfd2obj);\n        ofdlist = set2list(&ofdset, wfd2obj);\n        efdlist = set2list(&efdset, efd2obj);\n        if (PyErr_Occurred())\n            ret = NULL;\n        else\n            ret = PyTuple_Pack(3, ifdlist, ofdlist, efdlist);\n\n        Py_DECREF(ifdlist);\n        Py_DECREF(ofdlist);\n        Py_DECREF(efdlist);\n    }\n\n  finally:\n    reap_obj(rfd2obj);\n    reap_obj(wfd2obj);\n    reap_obj(efd2obj);\n#ifdef SELECT_USES_HEAP\n    PyMem_DEL(rfd2obj);\n    PyMem_DEL(wfd2obj);\n    PyMem_DEL(efd2obj);\n#endif /* SELECT_USES_HEAP */\n    return ret;\n}",
    "start": 191,
    "end": 314,
    "fix": "select_select(PyObject *self, PyObject *args)\n{\n#ifdef SELECT_USES_HEAP\n    pylist *rfd2obj, *wfd2obj, *efd2obj;\n#else  /* !SELECT_USES_HEAP */\n    /* XXX: All this should probably be implemented as follows:\n     * - find the highest descriptor we're interested in\n     * - add one\n     * - that's the size\n     * See: Stevens, APitUE, $12.5.1\n     */\n    pylist rfd2obj[FD_SETSIZE + 1];\n    pylist wfd2obj[FD_SETSIZE + 1];\n    pylist efd2obj[FD_SETSIZE + 1];\n#endif /* SELECT_USES_HEAP */\n    PyObject *ifdlist, *ofdlist, *efdlist;\n    PyObject *ret = NULL;\n    PyObject *tout = Py_None;\n    fd_set ifdset, ofdset, efdset;\n    double timeout;\n    struct timeval tv, *tvp;\n    long seconds;\n    int imax, omax, emax, max;\n    int n;\n\n    /* convert arguments */\n    if (!PyArg_UnpackTuple(args, \"select\", 3, 4,\n                          &ifdlist, &ofdlist, &efdlist, &tout))\n        return NULL;\n\n    if (tout == Py_None)\n        tvp = (struct timeval *)0;\n    else if (!PyNumber_Check(tout)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"timeout must be a float or None\");\n        return NULL;\n    }\n    else {\n        timeout = PyFloat_AsDouble(tout);\n        if (timeout == -1 && PyErr_Occurred())\n            return NULL;\n        if (timeout > (double)LONG_MAX) {\n            PyErr_SetString(PyExc_OverflowError,\n                            \"timeout period too long\");\n            return NULL;\n        }\n        if (timeout < 0) {\n            PyErr_SetString(PyExc_ValueError,\n                        \"timeout must be non-negative\");\n            return NULL;\n        }\n        seconds = (long)timeout;\n        timeout = timeout - (double)seconds;\n        tv.tv_sec = seconds;\n        tv.tv_usec = (long)(timeout * 1E6);\n        tvp = &tv;\n    }\n\n\n#ifdef SELECT_USES_HEAP\n    /* Allocate memory for the lists */\n    rfd2obj = PyMem_NEW(pylist, FD_SETSIZE + 1);\n    wfd2obj = PyMem_NEW(pylist, FD_SETSIZE + 1);\n    efd2obj = PyMem_NEW(pylist, FD_SETSIZE + 1);\n    if (rfd2obj == NULL || wfd2obj == NULL || efd2obj == NULL) {\n        if (rfd2obj) PyMem_DEL(rfd2obj);\n        if (wfd2obj) PyMem_DEL(wfd2obj);\n        if (efd2obj) PyMem_DEL(efd2obj);\n        return PyErr_NoMemory();\n    }\n#endif /* SELECT_USES_HEAP */\n    /* Convert sequences to fd_sets, and get maximum fd number\n     * propagates the Python exception set in seq2set()\n     */\n    rfd2obj[0].sentinel = -1;\n    wfd2obj[0].sentinel = -1;\n    efd2obj[0].sentinel = -1;\n    if ((imax=seq2set(ifdlist, &ifdset, rfd2obj)) < 0)\n        goto finally;\n    if ((omax=seq2set(ofdlist, &ofdset, wfd2obj)) < 0)\n        goto finally;\n    if ((emax=seq2set(efdlist, &efdset, efd2obj)) < 0)\n        goto finally;\n    max = imax;\n    if (omax > max) max = omax;\n    if (emax > max) max = emax;\n\n    Py_BEGIN_ALLOW_THREADS\n    n = select(max, &ifdset, &ofdset, &efdset, tvp);\n    Py_END_ALLOW_THREADS\n\n#ifdef MS_WINDOWS\n    if (n == SOCKET_ERROR) {\n        PyErr_SetExcFromWindowsErr(SelectError, WSAGetLastError());\n    }\n#else\n    if (n < 0) {\n        PyErr_SetFromErrno(SelectError);\n    }\n#endif\n    else {\n        /* any of these three calls can raise an exception.  it's more\n           convenient to test for this after all three calls... but\n           is that acceptable?\n        */\n        ifdlist = set2list(&ifdset, rfd2obj);\n        ofdlist = set2list(&ofdset, wfd2obj);\n        efdlist = set2list(&efdset, efd2obj);\n        if (PyErr_Occurred())\n            ret = NULL;\n        else\n            ret = PyTuple_Pack(3, ifdlist, ofdlist, efdlist);\n\n        Py_DECREF(ifdlist);\n        Py_DECREF(ofdlist);\n        Py_DECREF(efdlist);\n    }\n\n  finally:\n    reap_obj(rfd2obj);\n    reap_obj(wfd2obj);\n    reap_obj(efd2obj);\n#ifdef SELECT_USES_HEAP\n    PyMem_DEL(rfd2obj);\n    PyMem_DEL(wfd2obj);\n    PyMem_DEL(efd2obj);\n#endif /* SELECT_USES_HEAP */\n    return ret;\n}",
    "filename": "Modules/selectmodule.c"
  },
  "python_69368-69372": {
    "buggy": "fold_binops_on_constants(unsigned char *codestr, PyObject *consts, PyObject **objs)\n{\n    PyObject *newconst, *v, *w;\n    Py_ssize_t len_consts, size;\n    int opcode;\n\n    /* Pre-conditions */\n    assert(PyList_CheckExact(consts));\n\n    /* Create new constant */\n    v = objs[0];\n    w = objs[1];\n    opcode = codestr[0];\n    switch (opcode) {\n        case BINARY_POWER:\n            newconst = PyNumber_Power(v, w, Py_None);\n            break;\n        case BINARY_MULTIPLY:\n            newconst = PyNumber_Multiply(v, w);\n            break;\n        case BINARY_TRUE_DIVIDE:\n            newconst = PyNumber_TrueDivide(v, w);\n            break;\n        case BINARY_FLOOR_DIVIDE:\n            newconst = PyNumber_FloorDivide(v, w);\n            break;\n        case BINARY_MODULO:\n            newconst = PyNumber_Remainder(v, w);\n            break;\n        case BINARY_ADD:\n            newconst = PyNumber_Add(v, w);\n            break;\n        case BINARY_SUBTRACT:\n            newconst = PyNumber_Subtract(v, w);\n            break;\n        case BINARY_SUBSCR:\n            newconst = PyObject_GetItem(v, w);\n            break;\n        case BINARY_LSHIFT:\n            newconst = PyNumber_Lshift(v, w);\n            break;\n        case BINARY_RSHIFT:\n            newconst = PyNumber_Rshift(v, w);\n            break;\n        case BINARY_AND:\n            newconst = PyNumber_And(v, w);\n            break;\n        case BINARY_XOR:\n            newconst = PyNumber_Xor(v, w);\n            break;\n        case BINARY_OR:\n            newconst = PyNumber_Or(v, w);\n            break;\n        default:\n            /* Called with an unknown opcode */\n            PyErr_Format(PyExc_SystemError,\n                 \"unexpected binary operation %d on a constant\",\n                     opcode);\n            return 0;\n    }\n    if (newconst == NULL) {\n        if(!PyErr_ExceptionMatches(PyExc_KeyboardInterrupt))\n            PyErr_Clear();\n        return 0;\n    }\n    size = PyObject_Size(newconst);\n    if (size == -1) {\n        if (PyErr_ExceptionMatches(PyExc_KeyboardInterrupt))\n            return 0;\n        PyErr_Clear();\n    } else if (size > 20) {\n        Py_DECREF(newconst);\n        return 0;\n    }\n\n    /* Append folded constant into consts table */\n    len_consts = PyList_GET_SIZE(consts);\n    if (PyList_Append(consts, newconst)) {\n        Py_DECREF(newconst);\n        return 0;\n    }\n    Py_DECREF(newconst);\n\n    /* Write NOP NOP NOP NOP LOAD_CONST newconst */\n    codestr[-2] = LOAD_CONST;\n    SETARG(codestr, -2, len_consts);\n    return 1;\n}",
    "start": 149,
    "end": 236,
    "fix": "fold_binops_on_constants(unsigned char *codestr, PyObject *consts, PyObject **objs)\n{\n    PyObject *newconst, *v, *w;\n    Py_ssize_t len_consts, size;\n    int opcode;\n\n    /* Pre-conditions */\n    assert(PyList_CheckExact(consts));\n\n    /* Create new constant */\n    v = objs[0];\n    w = objs[1];\n    opcode = codestr[0];\n    switch (opcode) {\n        case BINARY_POWER:\n            newconst = PyNumber_Power(v, w, Py_None);\n            break;\n        case BINARY_MULTIPLY:\n            newconst = PyNumber_Multiply(v, w);\n            break;\n        case BINARY_TRUE_DIVIDE:\n            newconst = PyNumber_TrueDivide(v, w);\n            break;\n        case BINARY_FLOOR_DIVIDE:\n            newconst = PyNumber_FloorDivide(v, w);\n            break;\n        case BINARY_MODULO:\n            newconst = PyNumber_Remainder(v, w);\n            break;\n        case BINARY_ADD:\n            newconst = PyNumber_Add(v, w);\n            break;\n        case BINARY_SUBTRACT:\n            newconst = PyNumber_Subtract(v, w);\n            break;\n        case BINARY_SUBSCR:\n            newconst = PyObject_GetItem(v, w);\n            /* #5057: if v is unicode, there might be differences between\n               wide and narrow builds in cases like '\\U00012345'[0].\n               Wide builds will return a non-BMP char, whereas narrow builds\n               will return a surrogate.  In both the cases skip the\n               optimization in order to produce compatible pycs.\n             */\n            if (newconst != NULL &&\n                PyUnicode_Check(v) && PyUnicode_Check(newconst)) {\n                Py_UNICODE ch = PyUnicode_AS_UNICODE(newconst)[0];\n#ifdef Py_UNICODE_WIDE\n                if (ch > 0xFFFF) {\n#else\n                if (ch >= 0xD800 && ch <= 0xDFFF) {\n#endif\n                    Py_DECREF(newconst);\n                    return 0;\n                }\n            }\n            break;\n        case BINARY_LSHIFT:\n            newconst = PyNumber_Lshift(v, w);\n            break;\n        case BINARY_RSHIFT:\n            newconst = PyNumber_Rshift(v, w);\n            break;\n        case BINARY_AND:\n            newconst = PyNumber_And(v, w);\n            break;\n        case BINARY_XOR:\n            newconst = PyNumber_Xor(v, w);\n            break;\n        case BINARY_OR:\n            newconst = PyNumber_Or(v, w);\n            break;\n        default:\n            /* Called with an unknown opcode */\n            PyErr_Format(PyExc_SystemError,\n                 \"unexpected binary operation %d on a constant\",\n                     opcode);\n            return 0;\n    }\n    if (newconst == NULL) {\n        if(!PyErr_ExceptionMatches(PyExc_KeyboardInterrupt))\n            PyErr_Clear();\n        return 0;\n    }\n    size = PyObject_Size(newconst);\n    if (size == -1) {\n        if (PyErr_ExceptionMatches(PyExc_KeyboardInterrupt))\n            return 0;\n        PyErr_Clear();\n    } else if (size > 20) {\n        Py_DECREF(newconst);\n        return 0;\n    }\n\n    /* Append folded constant into consts table */\n    len_consts = PyList_GET_SIZE(consts);\n    if (PyList_Append(consts, newconst)) {\n        Py_DECREF(newconst);\n        return 0;\n    }\n    Py_DECREF(newconst);\n\n    /* Write NOP NOP NOP NOP LOAD_CONST newconst */\n    codestr[-2] = LOAD_CONST;\n    SETARG(codestr, -2, len_consts);\n    return 1;\n}",
    "filename": "Python/peephole.c"
  },
  "python_69934-69935": {
    "buggy": "trip_signal(int sig_num)\n{\n    Handlers[sig_num].tripped = 1;\n    if (is_tripped)\n        return;\n    /* Set is_tripped after setting .tripped, as it gets\n       cleared in PyErr_CheckSignals() before .tripped. */\n    is_tripped = 1;\n    Py_AddPendingCall(checksignals_witharg, NULL);\n    if (wakeup_fd != -1)\n        write(wakeup_fd, \"\\0\", 1);\n}",
    "start": 177,
    "end": 188,
    "fix": "trip_signal(int sig_num)\n{\n    unsigned char byte;\n    Handlers[sig_num].tripped = 1;\n    if (is_tripped)\n        return;\n    /* Set is_tripped after setting .tripped, as it gets\n       cleared in PyErr_CheckSignals() before .tripped. */\n    is_tripped = 1;\n    Py_AddPendingCall(checksignals_witharg, NULL);\n    if (wakeup_fd != -1) {\n        byte = (unsigned char)sig_num;\n        write(wakeup_fd, &byte, 1);\n    }\n}",
    "filename": "Modules/signalmodule.c"
  },
  "python_70019-70023": {
    "buggy": "encoder_listencode_obj(PyEncoderObject *s, PyObject *rval, PyObject *obj, Py_ssize_t indent_level)\n{\n    /* Encode Python object obj to a JSON term, rval is a PyList */\n    PyObject *newobj;\n    int rv;\n\n    if (obj == Py_None || obj == Py_True || obj == Py_False) {\n        PyObject *cstr = _encoded_const(obj);\n        if (cstr == NULL)\n            return -1;\n        return _steal_list_append(rval, cstr);\n    }\n    else if (PyUnicode_Check(obj))\n    {\n        PyObject *encoded = encoder_encode_string(s, obj);\n        if (encoded == NULL)\n            return -1;\n        return _steal_list_append(rval, encoded);\n    }\n    else if (PyLong_Check(obj)) {\n        PyObject *encoded = PyObject_Str(obj);\n        if (encoded == NULL)\n            return -1;\n        return _steal_list_append(rval, encoded);\n    }\n    else if (PyFloat_Check(obj)) {\n        PyObject *encoded = encoder_encode_float(s, obj);\n        if (encoded == NULL)\n            return -1;\n        return _steal_list_append(rval, encoded);\n    }\n    else if (PyList_Check(obj) || PyTuple_Check(obj)) {\n        return encoder_listencode_list(s, rval, obj, indent_level);\n    }\n    else if (PyDict_Check(obj)) {\n        return encoder_listencode_dict(s, rval, obj, indent_level);\n    }\n    else {\n        PyObject *ident = NULL;\n        if (s->markers != Py_None) {\n            int has_key;\n            ident = PyLong_FromVoidPtr(obj);\n            if (ident == NULL)\n                return -1;\n            has_key = PyDict_Contains(s->markers, ident);\n            if (has_key) {\n                if (has_key != -1)\n                    PyErr_SetString(PyExc_ValueError, \"Circular reference detected\");\n                Py_DECREF(ident);\n                return -1;\n            }\n            if (PyDict_SetItem(s->markers, ident, obj)) {\n                Py_DECREF(ident);\n                return -1;\n            }\n        }\n        newobj = PyObject_CallFunctionObjArgs(s->defaultfn, obj, NULL);\n        if (newobj == NULL) {\n            Py_XDECREF(ident);\n            return -1;\n        }\n        rv = encoder_listencode_obj(s, rval, newobj, indent_level);\n        Py_DECREF(newobj);\n        if (rv) {\n            Py_XDECREF(ident);\n            return -1;\n        }\n        if (ident != NULL) {\n            if (PyDict_DelItem(s->markers, ident)) {\n                Py_XDECREF(ident);\n                return -1;\n            }\n            Py_XDECREF(ident);\n        }\n        return rv;\n    }\n}",
    "start": 1325,
    "end": 1401,
    "fix": "encoder_listencode_obj(PyEncoderObject *s, PyObject *rval, PyObject *obj, Py_ssize_t indent_level)\n{\n    /* Encode Python object obj to a JSON term, rval is a PyList */\n    PyObject *newobj;\n    int rv;\n\n    if (obj == Py_None || obj == Py_True || obj == Py_False) {\n        PyObject *cstr = _encoded_const(obj);\n        if (cstr == NULL)\n            return -1;\n        return _steal_list_append(rval, cstr);\n    }\n    else if (PyUnicode_Check(obj))\n    {\n        PyObject *encoded = encoder_encode_string(s, obj);\n        if (encoded == NULL)\n            return -1;\n        return _steal_list_append(rval, encoded);\n    }\n    else if (PyLong_Check(obj)) {\n        PyObject *encoded = PyObject_Str(obj);\n        if (encoded == NULL)\n            return -1;\n        return _steal_list_append(rval, encoded);\n    }\n    else if (PyFloat_Check(obj)) {\n        PyObject *encoded = encoder_encode_float(s, obj);\n        if (encoded == NULL)\n            return -1;\n        return _steal_list_append(rval, encoded);\n    }\n    else if (PyList_Check(obj) || PyTuple_Check(obj)) {\n        if (Py_EnterRecursiveCall(\" while encoding a JSON object\"))\n            return -1;\n        rv = encoder_listencode_list(s, rval, obj, indent_level);\n        Py_LeaveRecursiveCall();\n        return rv;\n    }\n    else if (PyDict_Check(obj)) {\n        if (Py_EnterRecursiveCall(\" while encoding a JSON object\"))\n            return -1;\n        rv = encoder_listencode_dict(s, rval, obj, indent_level);\n        Py_LeaveRecursiveCall();\n        return rv;\n    }\n    else {\n        PyObject *ident = NULL;\n        if (s->markers != Py_None) {\n            int has_key;\n            ident = PyLong_FromVoidPtr(obj);\n            if (ident == NULL)\n                return -1;\n            has_key = PyDict_Contains(s->markers, ident);\n            if (has_key) {\n                if (has_key != -1)\n                    PyErr_SetString(PyExc_ValueError, \"Circular reference detected\");\n                Py_DECREF(ident);\n                return -1;\n            }\n            if (PyDict_SetItem(s->markers, ident, obj)) {\n                Py_DECREF(ident);\n                return -1;\n            }\n        }\n        newobj = PyObject_CallFunctionObjArgs(s->defaultfn, obj, NULL);\n        if (newobj == NULL) {\n            Py_XDECREF(ident);\n            return -1;\n        }\n\n        if (Py_EnterRecursiveCall(\" while encoding a JSON object\"))\n            return -1;\n        rv = encoder_listencode_obj(s, rval, newobj, indent_level);\n        Py_LeaveRecursiveCall();\n\n        Py_DECREF(newobj);\n        if (rv) {\n            Py_XDECREF(ident);\n            return -1;\n        }\n        if (ident != NULL) {\n            if (PyDict_DelItem(s->markers, ident)) {\n                Py_XDECREF(ident);\n                return -1;\n            }\n            Py_XDECREF(ident);\n        }\n        return rv;\n    }\n}",
    "filename": "Modules/_json.c"
  },
  "python_70056-70059": {
    "buggy": "static PyObject *\nbufferedwriter_write(buffered *self, PyObject *args)\n{\n    PyObject *res = NULL;\n    Py_buffer buf;\n    Py_ssize_t written, avail, remaining;\n    Py_off_t offset;\n\n    CHECK_INITIALIZED(self)\n    if (!PyArg_ParseTuple(args, \"y*:write\", &buf)) {\n        return NULL;\n    }\n\n    if (IS_CLOSED(self)) {\n        PyErr_SetString(PyExc_ValueError, \"write to closed file\");\n        PyBuffer_Release(&buf);\n        return NULL;\n    }\n\n    if (!ENTER_BUFFERED(self)) {\n        PyBuffer_Release(&buf);\n        return NULL;\n    }\n\n    /* Fast path: the data to write can be fully buffered. */\n    if (!VALID_READ_BUFFER(self) && !VALID_WRITE_BUFFER(self)) {\n        self->pos = 0;\n        self->raw_pos = 0;\n    }\n    avail = Py_SAFE_DOWNCAST(self->buffer_size - self->pos, Py_off_t, Py_ssize_t);\n    if (buf.len <= avail) {\n        memcpy(self->buffer + self->pos, buf.buf, buf.len);\n        if (!VALID_WRITE_BUFFER(self)) {\n            self->write_pos = self->pos;\n        }\n        ADJUST_POSITION(self, self->pos + buf.len);\n        if (self->pos > self->write_end)\n            self->write_end = self->pos;\n        written = buf.len;\n        goto end;\n    }\n\n    /* First write the current buffer */\n    res = _bufferedwriter_flush_unlocked(self, 0);\n    if (res == NULL) {\n        Py_ssize_t *w = _buffered_check_blocking_error();\n        if (w == NULL)\n            goto error;\n        if (self->readable)\n            _bufferedreader_reset_buf(self);\n        /* Make some place by shifting the buffer. */\n        assert(VALID_WRITE_BUFFER(self));\n        memmove(self->buffer, self->buffer + self->write_pos,\n                Py_SAFE_DOWNCAST(self->write_end - self->write_pos,\n                                 Py_off_t, Py_ssize_t));\n        self->write_end -= self->write_pos;\n        self->raw_pos -= self->write_pos;\n        self->pos -= self->write_pos;\n        self->write_pos = 0;\n        avail = Py_SAFE_DOWNCAST(self->buffer_size - self->write_end,\n                                 Py_off_t, Py_ssize_t);\n        if (buf.len <= avail) {\n            /* Everything can be buffered */\n            PyErr_Clear();\n            memcpy(self->buffer + self->write_end, buf.buf, buf.len);\n            self->write_end += buf.len;\n            written = buf.len;\n            goto end;\n        }\n        /* Buffer as much as possible. */\n        memcpy(self->buffer + self->write_end, buf.buf, avail);\n        self->write_end += avail;\n        /* Already re-raised */\n        *w = avail;\n        goto error;\n    }\n    Py_CLEAR(res);\n\n    /* Adjust the raw stream position if it is away from the logical stream\n       position. This happens if the read buffer has been filled but not\n       modified (and therefore _bufferedwriter_flush_unlocked() didn't rewind\n       the raw stream by itself).\n       Fixes issue #6629.\n    */\n    offset = RAW_OFFSET(self);\n    if (offset != 0) {\n        if (_buffered_raw_seek(self, -offset, 1) < 0)\n            goto error;\n        self->raw_pos -= offset;\n    }\n\n    /* Then write buf itself. At this point the buffer has been emptied. */\n    remaining = buf.len;\n    written = 0;\n    while (remaining > self->buffer_size) {\n        Py_ssize_t n = _bufferedwriter_raw_write(\n            self, (char *) buf.buf + written, buf.len - written);\n        if (n == -1) {\n            Py_ssize_t *w = _buffered_check_blocking_error();\n            if (w == NULL)\n                goto error;\n            written += *w;\n            remaining -= *w;\n            if (remaining > self->buffer_size) {\n                /* Can't buffer everything, still buffer as much as possible */\n                memcpy(self->buffer,\n                       (char *) buf.buf + written, self->buffer_size);\n                self->raw_pos = 0;\n                ADJUST_POSITION(self, self->buffer_size);\n                self->write_end = self->buffer_size;\n                *w = written + self->buffer_size;\n                /* Already re-raised */\n                goto error;\n            }\n            PyErr_Clear();\n            break;\n        }\n        written += n;\n        remaining -= n;\n        /* Partial writes can return successfully when interrupted by a\n           signal (see write(2)).  We must run signal handlers before\n           blocking another time, possibly indefinitely. */\n        if (PyErr_CheckSignals() < 0)\n            goto error;\n    }\n    if (self->readable)\n        _bufferedreader_reset_buf(self);\n    if (remaining > 0) {\n        memcpy(self->buffer, (char *) buf.buf + written, remaining);\n        written += remaining;\n    }\n    self->write_pos = 0;\n    /* TODO: sanity check (remaining >= 0) */\n    self->write_end = remaining;\n    ADJUST_POSITION(self, remaining);\n    self->raw_pos = 0;\n\nend:\n    res = PyLong_FromSsize_t(written);\n\nerror:\n    LEAVE_BUFFERED(self)\n    PyBuffer_Release(&buf);\n    return res;",
    "start": 1866,
    "end": 2009,
    "fix": "static PyObject *\nbufferedwriter_write(buffered *self, PyObject *args)\n{\n    PyObject *res = NULL;\n    Py_buffer buf;\n    Py_ssize_t written, avail, remaining;\n    Py_off_t offset;\n\n    CHECK_INITIALIZED(self)\n    if (!PyArg_ParseTuple(args, \"y*:write\", &buf)) {\n        return NULL;\n    }\n\n    if (IS_CLOSED(self)) {\n        PyErr_SetString(PyExc_ValueError, \"write to closed file\");\n        PyBuffer_Release(&buf);\n        return NULL;\n    }\n\n    if (!ENTER_BUFFERED(self)) {\n        PyBuffer_Release(&buf);\n        return NULL;\n    }\n\n    /* Fast path: the data to write can be fully buffered. */\n    if (!VALID_READ_BUFFER(self) && !VALID_WRITE_BUFFER(self)) {\n        self->pos = 0;\n        self->raw_pos = 0;\n    }\n    avail = Py_SAFE_DOWNCAST(self->buffer_size - self->pos, Py_off_t, Py_ssize_t);\n    if (buf.len <= avail) {\n        memcpy(self->buffer + self->pos, buf.buf, buf.len);\n        if (!VALID_WRITE_BUFFER(self) || self->write_pos > self->pos) {\n            self->write_pos = self->pos;\n        }\n        ADJUST_POSITION(self, self->pos + buf.len);\n        if (self->pos > self->write_end)\n            self->write_end = self->pos;\n        written = buf.len;\n        goto end;\n    }\n\n    /* First write the current buffer */\n    res = _bufferedwriter_flush_unlocked(self, 0);\n    if (res == NULL) {\n        Py_ssize_t *w = _buffered_check_blocking_error();\n        if (w == NULL)\n            goto error;\n        if (self->readable)\n            _bufferedreader_reset_buf(self);\n        /* Make some place by shifting the buffer. */\n        assert(VALID_WRITE_BUFFER(self));\n        memmove(self->buffer, self->buffer + self->write_pos,\n                Py_SAFE_DOWNCAST(self->write_end - self->write_pos,\n                                 Py_off_t, Py_ssize_t));\n        self->write_end -= self->write_pos;\n        self->raw_pos -= self->write_pos;\n        self->pos -= self->write_pos;\n        self->write_pos = 0;\n        avail = Py_SAFE_DOWNCAST(self->buffer_size - self->write_end,\n                                 Py_off_t, Py_ssize_t);\n        if (buf.len <= avail) {\n            /* Everything can be buffered */\n            PyErr_Clear();\n            memcpy(self->buffer + self->write_end, buf.buf, buf.len);\n            self->write_end += buf.len;\n            written = buf.len;\n            goto end;\n        }\n        /* Buffer as much as possible. */\n        memcpy(self->buffer + self->write_end, buf.buf, avail);\n        self->write_end += avail;\n        /* Already re-raised */\n        *w = avail;\n        goto error;\n    }\n    Py_CLEAR(res);\n\n    /* Adjust the raw stream position if it is away from the logical stream\n       position. This happens if the read buffer has been filled but not\n       modified (and therefore _bufferedwriter_flush_unlocked() didn't rewind\n       the raw stream by itself).\n       Fixes issue #6629.\n    */\n    offset = RAW_OFFSET(self);\n    if (offset != 0) {\n        if (_buffered_raw_seek(self, -offset, 1) < 0)\n            goto error;\n        self->raw_pos -= offset;\n    }\n\n    /* Then write buf itself. At this point the buffer has been emptied. */\n    remaining = buf.len;\n    written = 0;\n    while (remaining > self->buffer_size) {\n        Py_ssize_t n = _bufferedwriter_raw_write(\n            self, (char *) buf.buf + written, buf.len - written);\n        if (n == -1) {\n            Py_ssize_t *w = _buffered_check_blocking_error();\n            if (w == NULL)\n                goto error;\n            written += *w;\n            remaining -= *w;\n            if (remaining > self->buffer_size) {\n                /* Can't buffer everything, still buffer as much as possible */\n                memcpy(self->buffer,\n                       (char *) buf.buf + written, self->buffer_size);\n                self->raw_pos = 0;\n                ADJUST_POSITION(self, self->buffer_size);\n                self->write_end = self->buffer_size;\n                *w = written + self->buffer_size;\n                /* Already re-raised */\n                goto error;\n            }\n            PyErr_Clear();\n            break;\n        }\n        written += n;\n        remaining -= n;\n        /* Partial writes can return successfully when interrupted by a\n           signal (see write(2)).  We must run signal handlers before\n           blocking another time, possibly indefinitely. */\n        if (PyErr_CheckSignals() < 0)\n            goto error;\n    }\n    if (self->readable)\n        _bufferedreader_reset_buf(self);\n    if (remaining > 0) {\n        memcpy(self->buffer, (char *) buf.buf + written, remaining);\n        written += remaining;\n    }\n    self->write_pos = 0;\n    /* TODO: sanity check (remaining >= 0) */\n    self->write_end = remaining;\n    ADJUST_POSITION(self, remaining);\n    self->raw_pos = 0;\n\nend:\n    res = PyLong_FromSsize_t(written);\n\nerror:\n    LEAVE_BUFFERED(self)\n    PyBuffer_Release(&buf);\n    return res;",
    "filename": "Modules/_io/bufferedio.c"
  },
  "python_70098-70101": {
    "buggy": "PyZlib_objdecompress(compobject *self, PyObject *args)\n{\n    int err, inplen, max_length = 0;\n    Py_ssize_t old_length, length = DEFAULTALLOC;\n    PyObject *RetVal;\n    Py_buffer pinput;\n    Byte *input;\n    unsigned long start_total_out;\n\n    if (!PyArg_ParseTuple(args, \"y*|i:decompress\", &pinput,\n                          &max_length))\n        return NULL;\n    input = pinput.buf;\n    inplen = pinput.len;\n    if (max_length < 0) {\n        PyBuffer_Release(&pinput);\n        PyErr_SetString(PyExc_ValueError,\n                        \"max_length must be greater than zero\");\n        return NULL;\n    }\n\n    /* limit amount of data allocated to max_length */\n    if (max_length && length > max_length)\n        length = max_length;\n    if (!(RetVal = PyBytes_FromStringAndSize(NULL, length))) {\n        PyBuffer_Release(&pinput);\n        return NULL;\n    }\n\n    ENTER_ZLIB(self);\n\n    start_total_out = self->zst.total_out;\n    self->zst.avail_in = inplen;\n    self->zst.next_in = input;\n    self->zst.avail_out = length;\n    self->zst.next_out = (unsigned char *)PyBytes_AS_STRING(RetVal);\n\n    Py_BEGIN_ALLOW_THREADS\n    err = inflate(&(self->zst), Z_SYNC_FLUSH);\n    Py_END_ALLOW_THREADS\n\n    /* While Z_OK and the output buffer is full, there might be more output.\n       So extend the output buffer and try again.\n    */\n    while (err == Z_OK && self->zst.avail_out == 0) {\n        /* If max_length set, don't continue decompressing if we've already\n           reached the limit.\n        */\n        if (max_length && length >= max_length)\n            break;\n\n        /* otherwise, ... */\n        old_length = length;\n        length = length << 1;\n        if (max_length && length > max_length)\n            length = max_length;\n\n        if (_PyBytes_Resize(&RetVal, length) < 0) {\n            Py_DECREF(RetVal);\n            RetVal = NULL;\n            goto error;\n        }\n        self->zst.next_out =\n            (unsigned char *)PyBytes_AS_STRING(RetVal) + old_length;\n        self->zst.avail_out = length - old_length;\n\n        Py_BEGIN_ALLOW_THREADS\n        err = inflate(&(self->zst), Z_SYNC_FLUSH);\n        Py_END_ALLOW_THREADS\n    }\n\n    /* Not all of the compressed data could be accommodated in the output buffer\n       of specified size. Return the unconsumed tail in an attribute.*/\n    if(max_length) {\n        Py_DECREF(self->unconsumed_tail);\n        self->unconsumed_tail = PyBytes_FromStringAndSize((char *)self->zst.next_in,\n                                                           self->zst.avail_in);\n        if(!self->unconsumed_tail) {\n            Py_DECREF(RetVal);\n            RetVal = NULL;\n            goto error;\n        }\n    }\n\n    /* The end of the compressed data has been reached, so set the\n       unused_data attribute to a string containing the remainder of the\n       data in the string.  Note that this is also a logical place to call\n       inflateEnd, but the old behaviour of only calling it on flush() is\n       preserved.\n    */\n    if (err == Z_STREAM_END) {\n        Py_XDECREF(self->unused_data);  /* Free original empty string */\n        self->unused_data = PyBytes_FromStringAndSize(\n            (char *)self->zst.next_in, self->zst.avail_in);\n        if (self->unused_data == NULL) {\n            Py_DECREF(RetVal);\n            goto error;\n        }\n        /* We will only get Z_BUF_ERROR if the output buffer was full\n           but there wasn't more output when we tried again, so it is\n           not an error condition.\n        */\n    } else if (err != Z_OK && err != Z_BUF_ERROR) {\n        zlib_error(self->zst, err, \"while decompressing\");\n        Py_DECREF(RetVal);\n        RetVal = NULL;\n        goto error;\n    }\n\n    if (_PyBytes_Resize(&RetVal, self->zst.total_out - start_total_out) < 0) {\n        Py_DECREF(RetVal);\n        RetVal = NULL;\n    }\n\n error:\n    LEAVE_ZLIB(self);\n    PyBuffer_Release(&pinput);\n    return RetVal;\n}",
    "start": 506,
    "end": 624,
    "fix": "PyZlib_objdecompress(compobject *self, PyObject *args)\n{\n    int err, inplen, max_length = 0;\n    Py_ssize_t old_length, length = DEFAULTALLOC;\n    PyObject *RetVal;\n    Py_buffer pinput;\n    Byte *input;\n    unsigned long start_total_out;\n\n    if (!PyArg_ParseTuple(args, \"y*|i:decompress\", &pinput,\n                          &max_length))\n        return NULL;\n    input = pinput.buf;\n    inplen = pinput.len;\n    if (max_length < 0) {\n        PyBuffer_Release(&pinput);\n        PyErr_SetString(PyExc_ValueError,\n                        \"max_length must be greater than zero\");\n        return NULL;\n    }\n\n    /* limit amount of data allocated to max_length */\n    if (max_length && length > max_length)\n        length = max_length;\n    if (!(RetVal = PyBytes_FromStringAndSize(NULL, length))) {\n        PyBuffer_Release(&pinput);\n        return NULL;\n    }\n\n    ENTER_ZLIB(self);\n\n    start_total_out = self->zst.total_out;\n    self->zst.avail_in = inplen;\n    self->zst.next_in = input;\n    self->zst.avail_out = length;\n    self->zst.next_out = (unsigned char *)PyBytes_AS_STRING(RetVal);\n\n    Py_BEGIN_ALLOW_THREADS\n    err = inflate(&(self->zst), Z_SYNC_FLUSH);\n    Py_END_ALLOW_THREADS\n\n    /* While Z_OK and the output buffer is full, there might be more output.\n       So extend the output buffer and try again.\n    */\n    while (err == Z_OK && self->zst.avail_out == 0) {\n        /* If max_length set, don't continue decompressing if we've already\n           reached the limit.\n        */\n        if (max_length && length >= max_length)\n            break;\n\n        /* otherwise, ... */\n        old_length = length;\n        length = length << 1;\n        if (max_length && length > max_length)\n            length = max_length;\n\n        if (_PyBytes_Resize(&RetVal, length) < 0) {\n            Py_DECREF(RetVal);\n            RetVal = NULL;\n            goto error;\n        }\n        self->zst.next_out =\n            (unsigned char *)PyBytes_AS_STRING(RetVal) + old_length;\n        self->zst.avail_out = length - old_length;\n\n        Py_BEGIN_ALLOW_THREADS\n        err = inflate(&(self->zst), Z_SYNC_FLUSH);\n        Py_END_ALLOW_THREADS\n    }\n\n    if(max_length) {\n        /* Not all of the compressed data could be accommodated in a buffer of\n           the specified size. Return the unconsumed tail in an attribute. */\n        Py_DECREF(self->unconsumed_tail);\n        self->unconsumed_tail = PyBytes_FromStringAndSize((char *)self->zst.next_in,\n                                                           self->zst.avail_in);\n    }\n    else if (PyBytes_GET_SIZE(self->unconsumed_tail) > 0) {\n        /* All of the compressed data was consumed. Clear unconsumed_tail. */\n        Py_DECREF(self->unconsumed_tail);\n        self->unconsumed_tail = PyBytes_FromStringAndSize(\"\", 0);\n    }\n    if (self->unconsumed_tail == NULL) {\n        Py_DECREF(RetVal);\n        RetVal = NULL;\n        goto error;\n    }\n\n    /* The end of the compressed data has been reached, so set the\n       unused_data attribute to a string containing the remainder of the\n       data in the string.  Note that this is also a logical place to call\n       inflateEnd, but the old behaviour of only calling it on flush() is\n       preserved.\n    */\n    if (err == Z_STREAM_END) {\n        Py_XDECREF(self->unused_data);  /* Free original empty string */\n        self->unused_data = PyBytes_FromStringAndSize(\n            (char *)self->zst.next_in, self->zst.avail_in);\n        if (self->unused_data == NULL) {\n            Py_DECREF(RetVal);\n            goto error;\n        }\n        /* We will only get Z_BUF_ERROR if the output buffer was full\n           but there wasn't more output when we tried again, so it is\n           not an error condition.\n        */\n    } else if (err != Z_OK && err != Z_BUF_ERROR) {\n        zlib_error(self->zst, err, \"while decompressing\");\n        Py_DECREF(RetVal);\n        RetVal = NULL;\n        goto error;\n    }\n\n    if (_PyBytes_Resize(&RetVal, self->zst.total_out - start_total_out) < 0) {\n        Py_DECREF(RetVal);\n        RetVal = NULL;\n    }\n\n error:\n    LEAVE_ZLIB(self);\n    PyBuffer_Release(&pinput);\n    return RetVal;\n}",
    "filename": "Modules/zlibmodule.c"
  },
  "valgrind_11623-11624": {
    "buggy": "void evh__HG_USERSO_SEND_PRE ( ThreadId tid, UWord usertag )\n{\n   /* TID is just about to notionally sent a message on a notional\n      abstract synchronisation object whose identity is given by\n      USERTAG.  Bind USERTAG to a real SO if it is not already so\n      bound, and do a 'strong send' on the SO.  This is later used by\n      other thread(s) which successfully 'receive' from the SO,\n      thereby acquiring a dependency on this signalling event. */\n   Thread* thr;\n   SO*     so;\n\n   if (SHOW_EVENTS >= 1)\n      VG_(printf)(\"evh__HG_USERSO_SEND_PRE(ctid=%d, usertag=%#lx)\\n\", \n                  (Int)tid, usertag );\n\n   thr = map_threads_maybe_lookup( tid );\n   tl_assert(thr); /* cannot fail - Thread* must already exist */\n\n   so = map_usertag_to_SO_lookup_or_alloc( usertag );\n   tl_assert(so);\n\n   libhb_so_send( thr->hbthr, so, True/*strong_send*/ );\n}",
    "start": 3038,
    "end": 3060,
    "fix": "void evh__HG_USERSO_SEND_PRE ( ThreadId tid, UWord usertag )\n{\n   /* TID is just about to notionally sent a message on a notional\n      abstract synchronisation object whose identity is given by\n      USERTAG.  Bind USERTAG to a real SO if it is not already so\n      bound, and do a 'weak send' on the SO.  This joins the vector\n      clocks from this thread into any vector clocks already present\n      in the SO.  The resulting SO vector clocks are later used by\n      other thread(s) which successfully 'receive' from the SO,\n      thereby acquiring a dependency on all the events that have\n      previously signalled on this SO. */\n   Thread* thr;\n   SO*     so;\n\n   if (SHOW_EVENTS >= 1)\n      VG_(printf)(\"evh__HG_USERSO_SEND_PRE(ctid=%d, usertag=%#lx)\\n\", \n                  (Int)tid, usertag );\n\n   thr = map_threads_maybe_lookup( tid );\n   tl_assert(thr); /* cannot fail - Thread* must already exist */\n\n   so = map_usertag_to_SO_lookup_or_alloc( usertag );\n   tl_assert(so);\n\n   libhb_so_send( thr->hbthr, so, False/*!strong_send*/ );\n}",
    "filename": "helgrind/hg_main.c"
  },
  "valgrind_11817-11818": {
    "buggy": "void remote_open (char *name)\n{\n   int save_fcntl_flags;\n   VgdbShared vgdbinit = \n      {0, 0, 0, (Addr) VG_(invoke_gdbserver),\n       (Addr) VG_(threads), sizeof(ThreadState), \n       offsetof(ThreadState, status),\n       offsetof(ThreadState, os_state) + offsetof(ThreadOSstate, lwpid)};\n   const int pid = VG_(getpid)();\n   const int name_default = strcmp(name, VG_CLO_VGDB_PREFIX_DEFAULT) == 0;\n   Addr addr_shared;\n   SysRes o;\n   int shared_mem_fd = INVALID_DESCRIPTOR;\n   \n   if (from_gdb != NULL) \n      free (from_gdb);\n   from_gdb = malloc (strlen(name) + 30);\n   if (to_gdb != NULL)\n      free (to_gdb);\n   to_gdb = malloc (strlen(name) + 30);\n   if (shared_mem != NULL)\n      free (shared_mem);\n   shared_mem = malloc (strlen(name) + 30);\n   /* below 3 lines must match the equivalent in vgdb.c */\n   VG_(sprintf) (from_gdb,   \"%s-from-vgdb-to-%d\",    name, pid);\n   VG_(sprintf) (to_gdb,     \"%s-to-vgdb-from-%d\",    name, pid);\n   VG_(sprintf) (shared_mem, \"%s-shared-mem-vgdb-%d\", name, pid);\n   if (VG_(clo_verbosity) > 1) {\n      VG_(umsg)(\"embedded gdbserver: reading from %s\\n\", from_gdb);\n      VG_(umsg)(\"embedded gdbserver: writing to   %s\\n\", to_gdb);\n      VG_(umsg)(\"embedded gdbserver: shared mem   %s\\n\", shared_mem);\n      VG_(umsg)(\"CONTROL ME using: vgdb --pid=%d%s%s ...command...\\n\",\n                pid, (name_default ? \"\" : \" --vgdb=\"),\n                (name_default ? \"\" : name));\n      VG_(umsg)(\"DEBUG ME using: (gdb) target remote | vgdb --pid=%d%s%s\\n\",\n                pid, (name_default ? \"\" : \" --vgdb=\"), \n                (name_default ? \"\" : name));\n      VG_(umsg)(\"   --pid optional if only one valgrind process is running\\n\");\n   }\n\n   if (!mknod_done) {\n      mknod_done++;\n      safe_mknod(from_gdb);\n      safe_mknod(to_gdb);\n\n      pid_from_to_creator = pid;\n      \n      o = VG_(open) (shared_mem, VKI_O_CREAT|VKI_O_RDWR, 0666);\n      if (sr_isError (o)) {\n         sr_perror(o, \"cannot create shared_mem file %s\\n\", shared_mem);\n         fatal(\"\");\n      } else {\n         shared_mem_fd = sr_Res(o);\n      }\n      \n      if (VG_(write)(shared_mem_fd, &vgdbinit, sizeof(VgdbShared)) \n          != sizeof(VgdbShared)) {\n         fatal(\"error writing %d bytes to shared mem %s\\n\",\n               (int) sizeof(VgdbShared), shared_mem);\n      }\n      shared_mem_fd = VG_(safe_fd)(shared_mem_fd);\n      if (shared_mem_fd == -1) {\n         fatal(\"safe_fd for vgdb shared_mem %s failed\\n\", shared_mem);\n      }\n      {\n         SysRes res = VG_(am_shared_mmap_file_float_valgrind)\n            (sizeof(VgdbShared), VKI_PROT_READ|VKI_PROT_WRITE, \n             shared_mem_fd, (Off64T)0);\n         if (sr_isError(res)) {\n            sr_perror(res, \"error VG_(am_shared_mmap_file_float_valgrind) %s\\n\",\n                      shared_mem);\n            fatal(\"\");\n         }  \n         addr_shared = sr_Res (res);\n      }\n      shared = (VgdbShared*) addr_shared;\n   }\n   \n   /* we open the read side FIFO in non blocking mode\n      We then set the fd in blocking mode.\n      Opening in non-blocking read mode always succeeds while opening\n      in non-blocking write mode succeeds only if the fifo is already\n      opened in read mode. So, we wait till we have read the first\n      character from the read side before opening the write side. */\n   remote_desc = open_fifo (\"read\", from_gdb, VKI_O_RDONLY|VKI_O_NONBLOCK);\n   save_fcntl_flags = VG_(fcntl) (remote_desc, VKI_F_GETFL, 0);\n   VG_(fcntl) (remote_desc, VKI_F_SETFL, save_fcntl_flags & ~VKI_O_NONBLOCK);\n   remote_desc_pollfdread_activity.fd = remote_desc;\n   remote_desc_pollfdread_activity.events = VKI_POLLIN;\n   remote_desc_pollfdread_activity.revents = 0;\n}",
    "start": 222,
    "end": 312,
    "fix": "void remote_open (char *name)\n{\n   int save_fcntl_flags;\n   VgdbShared vgdbinit = \n      {0, 0, 0, (Addr) VG_(invoke_gdbserver),\n       (Addr) VG_(threads), sizeof(ThreadState), \n       offsetof(ThreadState, status),\n       offsetof(ThreadState, os_state) + offsetof(ThreadOSstate, lwpid)};\n   const int pid = VG_(getpid)();\n   const int name_default = strcmp(name, VG_CLO_VGDB_PREFIX_DEFAULT) == 0;\n   Addr addr_shared;\n   SysRes o;\n   int shared_mem_fd = INVALID_DESCRIPTOR;\n   \n   if (from_gdb != NULL) \n      free (from_gdb);\n   from_gdb = malloc (strlen(name) + 30);\n   if (to_gdb != NULL)\n      free (to_gdb);\n   to_gdb = malloc (strlen(name) + 30);\n   if (shared_mem != NULL)\n      free (shared_mem);\n   shared_mem = malloc (strlen(name) + 30);\n   /* below 3 lines must match the equivalent in vgdb.c */\n   VG_(sprintf) (from_gdb,   \"%s-from-vgdb-to-%d\",    name, pid);\n   VG_(sprintf) (to_gdb,     \"%s-to-vgdb-from-%d\",    name, pid);\n   VG_(sprintf) (shared_mem, \"%s-shared-mem-vgdb-%d\", name, pid);\n   if (VG_(clo_verbosity) > 1) {\n      VG_(umsg)(\"embedded gdbserver: reading from %s\\n\", from_gdb);\n      VG_(umsg)(\"embedded gdbserver: writing to   %s\\n\", to_gdb);\n      VG_(umsg)(\"embedded gdbserver: shared mem   %s\\n\", shared_mem);\n      VG_(umsg)(\"CONTROL ME using: vgdb --pid=%d%s%s ...command...\\n\",\n                pid, (name_default ? \"\" : \" --vgdb=\"),\n                (name_default ? \"\" : name));\n      VG_(umsg)(\"DEBUG ME using: (gdb) target remote | vgdb --pid=%d%s%s\\n\",\n                pid, (name_default ? \"\" : \" --vgdb=\"), \n                (name_default ? \"\" : name));\n      VG_(umsg)(\"   --pid optional if only one valgrind process is running\\n\");\n   }\n\n   if (!mknod_done) {\n      mknod_done++;\n      safe_mknod(from_gdb);\n      safe_mknod(to_gdb);\n\n      pid_from_to_creator = pid;\n      \n      o = VG_(open) (shared_mem, VKI_O_CREAT|VKI_O_RDWR, 0666);\n      if (sr_isError (o)) {\n         sr_perror(o, \"cannot create shared_mem file %s\\n\", shared_mem);\n         fatal(\"\");\n      } else {\n         shared_mem_fd = sr_Res(o);\n      }\n      \n      if (VG_(write)(shared_mem_fd, &vgdbinit, sizeof(VgdbShared)) \n          != sizeof(VgdbShared)) {\n         fatal(\"error writing %d bytes to shared mem %s\\n\",\n               (int) sizeof(VgdbShared), shared_mem);\n      }\n      {\n         SysRes res = VG_(am_shared_mmap_file_float_valgrind)\n            (sizeof(VgdbShared), VKI_PROT_READ|VKI_PROT_WRITE, \n             shared_mem_fd, (Off64T)0);\n         if (sr_isError(res)) {\n            sr_perror(res, \"error VG_(am_shared_mmap_file_float_valgrind) %s\\n\",\n                      shared_mem);\n            fatal(\"\");\n         }  \n         addr_shared = sr_Res (res);\n      }\n      shared = (VgdbShared*) addr_shared;\n      VG_(close) (shared_mem_fd);\n   }\n   \n   /* we open the read side FIFO in non blocking mode\n      We then set the fd in blocking mode.\n      Opening in non-blocking read mode always succeeds while opening\n      in non-blocking write mode succeeds only if the fifo is already\n      opened in read mode. So, we wait till we have read the first\n      character from the read side before opening the write side. */\n   remote_desc = open_fifo (\"read\", from_gdb, VKI_O_RDONLY|VKI_O_NONBLOCK);\n   save_fcntl_flags = VG_(fcntl) (remote_desc, VKI_F_GETFL, 0);\n   VG_(fcntl) (remote_desc, VKI_F_SETFL, save_fcntl_flags & ~VKI_O_NONBLOCK);\n   remote_desc_pollfdread_activity.fd = remote_desc;\n   remote_desc_pollfdread_activity.events = VKI_POLLIN;\n   remote_desc_pollfdread_activity.revents = 0;\n}",
    "filename": "coregrind/m_gdbserver/remote-utils.c"
  },
  "valgrind_12474-12473": {
    "buggy": "static void drd_report_race(const Addr addr, const SizeT size,\n                            const BmAccessTypeT access_type)\n{\n   ThreadId vg_tid;\n\n   vg_tid = VG_(get_running_tid)();\n   if (DRD_(thread_address_on_any_stack)(addr)) {\n#if 0\n      GenericErrInfo GEI = {\n         .tid = DRD_(thread_get_running_tid)(),\n         .addr = addr,\n      };\n      VG_(maybe_record_error)(vg_tid, GenericErr, VG_(get_IP)(vg_tid),\n                              \"--check-stack-var=no skips checking stack\"\n                              \" variables shared over threads\",\n                              &GEI);\n#endif\n  } else {\n      DataRaceErrInfo drei = {\n         .tid  = DRD_(thread_get_running_tid)(),\n         .addr = addr,\n         .size = size,\n         .access_type = access_type,\n      };\n      VG_(maybe_record_error)(vg_tid, DataRaceErr, VG_(get_IP)(vg_tid),\n                              \"Conflicting access\", &drei);\n\n      if (s_first_race_only)\n         DRD_(start_suppression)(addr, addr + size, \"first race only\");\n   }\n}",
    "start": 137,
    "end": 167,
    "fix": "static void drd_report_race(const Addr addr, const SizeT size,\n                            const BmAccessTypeT access_type)\n{\n   DataRaceErrInfo drei;\n\n   drei.tid  = DRD_(thread_get_running_tid)();\n   drei.addr = addr;\n   drei.size = size;\n   drei.access_type = access_type;\n   VG_(maybe_record_error)(VG_(get_running_tid)(),\n                           DataRaceErr,\n                           VG_(get_IP)(VG_(get_running_tid)()),\n                           \"Conflicting access\",\n                           &drei);\n\n   if (s_first_race_only)\n   {\n      DRD_(start_suppression)(addr, addr + size, \"first race only\");\n   }\n}",
    "filename": "drd/drd_load_store.c"
  },
  "valgrind_12474-12475": {
    "buggy": "static void drd_report_race(const Addr addr, const SizeT size,\n                            const BmAccessTypeT access_type)\n{\n   ThreadId vg_tid;\n\n   vg_tid = VG_(get_running_tid)();\n   if (DRD_(thread_address_on_any_stack)(addr)) {\n#if 0\n      GenericErrInfo GEI = {\n         .tid = DRD_(thread_get_running_tid)(),\n         .addr = addr,\n      };\n      VG_(maybe_record_error)(vg_tid, GenericErr, VG_(get_IP)(vg_tid),\n                              \"--check-stack-var=no skips checking stack\"\n                              \" variables shared over threads\",\n                              &GEI);\n#endif\n  } else {\n      DataRaceErrInfo drei = {\n         .tid  = DRD_(thread_get_running_tid)(),\n         .addr = addr,\n         .size = size,\n         .access_type = access_type,\n      };\n      VG_(maybe_record_error)(vg_tid, DataRaceErr, VG_(get_IP)(vg_tid),\n                              \"Conflicting access\", &drei);\n\n      if (s_first_race_only)\n         DRD_(start_suppression)(addr, addr + size, \"first race only\");\n   }\n}",
    "start": 137,
    "end": 167,
    "fix": "static void drd_report_race(const Addr addr, const SizeT size,\n                            const BmAccessTypeT access_type)\n{\n   ThreadId vg_tid;\n\n   vg_tid = VG_(get_running_tid)();\n   if (!DRD_(get_check_stack_accesses)()\n       && DRD_(thread_address_on_any_stack)(addr)) {\n#if 0\n      GenericErrInfo GEI = {\n         .tid = DRD_(thread_get_running_tid)(),\n         .addr = addr,\n      };\n      VG_(maybe_record_error)(vg_tid, GenericErr, VG_(get_IP)(vg_tid),\n                              \"--check-stack-var=no skips checking stack\"\n                              \" variables shared over threads\",\n                              &GEI);\n#endif\n  } else {\n      DataRaceErrInfo drei = {\n         .tid  = DRD_(thread_get_running_tid)(),\n         .addr = addr,\n         .size = size,\n         .access_type = access_type,\n      };\n      VG_(maybe_record_error)(vg_tid, DataRaceErr, VG_(get_IP)(vg_tid),\n                              \"Conflicting access\", &drei);\n\n      if (s_first_race_only)\n         DRD_(start_suppression)(addr, addr + size, \"first race only\");\n   }\n}",
    "filename": "drd/drd_load_store.c"
  },
  "valgrind_12641-12642": {
    "buggy": "void* VG_(arena_memalign) ( ArenaId aid, HChar* cc, \n                            SizeT req_alignB, SizeT req_pszB )\n{\n   SizeT  base_pszB_req, base_pszB_act, frag_bszB;\n   Block  *base_b, *align_b;\n   UByte  *base_p, *align_p;\n   SizeT  saved_bytes_on_loan;\n   Arena* a;\n\n   ensure_mm_init(aid);\n   a = arenaId_to_ArenaP(aid);\n\n   vg_assert(req_pszB < MAX_PSZB);\n\n   // You must provide a cost-center name against which to charge\n   // this allocation; it isn't optional.\n   vg_assert(cc);\n\n   // Check that the requested alignment seems reasonable; that is, is\n   // a power of 2.\n   if (req_alignB < VG_MIN_MALLOC_SZB\n       || req_alignB > 1048576\n       || VG_(log2)( req_alignB ) == -1 /* not a power of 2 */) {\n      VG_(printf)(\"VG_(arena_memalign)(%p, %lu, %lu)\\n\"\n                  \"bad alignment value %lu\\n\"\n                  \"(it is too small, too big, or not a power of two)\",\n                  a, req_alignB, req_pszB, req_alignB );\n      VG_(core_panic)(\"VG_(arena_memalign)\");\n      /*NOTREACHED*/\n   }\n   // Paranoid\n   vg_assert(req_alignB % VG_MIN_MALLOC_SZB == 0);\n\n   /* Required payload size for the aligned chunk. */\n   req_pszB = align_req_pszB(req_pszB);\n   \n   /* Payload size to request for the big block that we will split up. */\n   base_pszB_req = req_pszB + min_useful_bszB(a) + req_alignB;\n\n   /* Payload ptr for the block we are going to split.  Note this\n      changes a->bytes_on_loan; we save and restore it ourselves. */\n   saved_bytes_on_loan = a->stats__bytes_on_loan;\n   {\n      /* As we will split the block given back by VG_(arena_malloc),\n         we have to (temporarily) disable unsplittable for this arena,\n         as unsplittable superblocks cannot be splitted. */\n      const SizeT save_min_unsplittable_sblock_szB \n         = a->min_unsplittable_sblock_szB;\n      a->min_unsplittable_sblock_szB = MAX_PSZB;\n      base_p = VG_(arena_malloc) ( aid, cc, base_pszB_req );\n      a->min_unsplittable_sblock_szB = save_min_unsplittable_sblock_szB;\n   }\n   a->stats__bytes_on_loan = saved_bytes_on_loan;\n\n   /* Give up if we couldn't allocate enough space */\n   if (base_p == 0)\n      return 0;\n   /* base_p was marked as allocated by VALGRIND_MALLOCLIKE_BLOCK\n      inside VG_(arena_malloc). We need to indicate it is free, then\n      we need to mark it undefined to allow the below code to access is. */\n   INNER_REQUEST(VALGRIND_FREELIKE_BLOCK(base_p, a->rz_szB));\n   INNER_REQUEST(VALGRIND_MAKE_MEM_UNDEFINED(base_p, base_pszB_req));\n\n   /* Block ptr for the block we are going to split. */\n   base_b = get_payload_block ( a, base_p );\n\n   /* Pointer to the payload of the aligned block we are going to\n      return.  This has to be suitably aligned. */\n   align_p = align_upwards ( base_b + 2 * overhead_szB_lo(a)\n                                    + overhead_szB_hi(a),\n                             req_alignB );\n   align_b = get_payload_block(a, align_p);\n\n   /* The block size of the fragment we will create.  This must be big\n      enough to actually create a fragment. */\n   frag_bszB = align_b - base_b;\n\n   vg_assert(frag_bszB >= min_useful_bszB(a));\n\n   /* The actual payload size of the block we are going to split. */\n   base_pszB_act = get_pszB(a, base_b);\n\n   /* Create the fragment block, and put it back on the relevant free list. */\n   mkFreeBlock ( a, base_b, frag_bszB,\n                 pszB_to_listNo(bszB_to_pszB(a, frag_bszB)) );\n   if (VG_(clo_profile_heap))\n      set_cc(base_b, \"admin.frag-memalign-1\");\n\n   /* Create the aligned block. */\n   mkInuseBlock ( a, align_b,\n                  base_p + base_pszB_act \n                         + overhead_szB_hi(a) - (UByte*)align_b );\n   if (VG_(clo_profile_heap))\n      set_cc(align_b, cc);\n\n   /* Final sanity checks. */\n   vg_assert( is_inuse_block(get_payload_block(a, align_p)) );\n\n   vg_assert(req_pszB <= get_pszB(a, get_payload_block(a, align_p)));\n\n   a->stats__bytes_on_loan += get_pszB(a, get_payload_block(a, align_p));\n   if (a->stats__bytes_on_loan > a->stats__bytes_on_loan_max) {\n      a->stats__bytes_on_loan_max = a->stats__bytes_on_loan;\n   }\n   /* a->stats__tot_blocks, a->stats__tot_bytes, a->stats__nsearches\n      are updated by the call to VG_(arena_malloc) just a few lines\n      above.  So we don't need to update them here. */\n\n#  ifdef DEBUG_MALLOC\n   sanity_check_malloc_arena(aid);\n#  endif\n\n   vg_assert( (((Addr)align_p) % req_alignB) == 0 );\n\n   INNER_REQUEST(VALGRIND_MALLOCLIKE_BLOCK(align_p,\n                                           req_pszB, a->rz_szB, False));\n\n   return align_p;\n}",
    "start": 1905,
    "end": 2023,
    "fix": "void* VG_(arena_memalign) ( ArenaId aid, HChar* cc, \n                            SizeT req_alignB, SizeT req_pszB )\n{\n   SizeT  base_pszB_req, base_pszB_act, frag_bszB;\n   Block  *base_b, *align_b;\n   UByte  *base_p, *align_p;\n   SizeT  saved_bytes_on_loan;\n   Arena* a;\n\n   ensure_mm_init(aid);\n   a = arenaId_to_ArenaP(aid);\n\n   vg_assert(req_pszB < MAX_PSZB);\n\n   // You must provide a cost-center name against which to charge\n   // this allocation; it isn't optional.\n   vg_assert(cc);\n\n   // Check that the requested alignment has a plausible size.\n   // Check that the requested alignment seems reasonable; that is, is\n   // a power of 2.\n   if (req_alignB < VG_MIN_MALLOC_SZB\n       || req_alignB > 16 * 1024 * 1024\n       || VG_(log2)( req_alignB ) == -1 /* not a power of 2 */) {\n      VG_(printf)(\"VG_(arena_memalign)(%p, %lu, %lu)\\n\"\n                  \"bad alignment value %lu\\n\"\n                  \"(it is too small, too big, or not a power of two)\",\n                  a, req_alignB, req_pszB, req_alignB );\n      VG_(core_panic)(\"VG_(arena_memalign)\");\n      /*NOTREACHED*/\n   }\n   // Paranoid\n   vg_assert(req_alignB % VG_MIN_MALLOC_SZB == 0);\n\n   /* Required payload size for the aligned chunk. */\n   req_pszB = align_req_pszB(req_pszB);\n   \n   /* Payload size to request for the big block that we will split up. */\n   base_pszB_req = req_pszB + min_useful_bszB(a) + req_alignB;\n\n   /* Payload ptr for the block we are going to split.  Note this\n      changes a->bytes_on_loan; we save and restore it ourselves. */\n   saved_bytes_on_loan = a->stats__bytes_on_loan;\n   {\n      /* As we will split the block given back by VG_(arena_malloc),\n         we have to (temporarily) disable unsplittable for this arena,\n         as unsplittable superblocks cannot be splitted. */\n      const SizeT save_min_unsplittable_sblock_szB \n         = a->min_unsplittable_sblock_szB;\n      a->min_unsplittable_sblock_szB = MAX_PSZB;\n      base_p = VG_(arena_malloc) ( aid, cc, base_pszB_req );\n      a->min_unsplittable_sblock_szB = save_min_unsplittable_sblock_szB;\n   }\n   a->stats__bytes_on_loan = saved_bytes_on_loan;\n\n   /* Give up if we couldn't allocate enough space */\n   if (base_p == 0)\n      return 0;\n   /* base_p was marked as allocated by VALGRIND_MALLOCLIKE_BLOCK\n      inside VG_(arena_malloc). We need to indicate it is free, then\n      we need to mark it undefined to allow the below code to access is. */\n   INNER_REQUEST(VALGRIND_FREELIKE_BLOCK(base_p, a->rz_szB));\n   INNER_REQUEST(VALGRIND_MAKE_MEM_UNDEFINED(base_p, base_pszB_req));\n\n   /* Block ptr for the block we are going to split. */\n   base_b = get_payload_block ( a, base_p );\n\n   /* Pointer to the payload of the aligned block we are going to\n      return.  This has to be suitably aligned. */\n   align_p = align_upwards ( base_b + 2 * overhead_szB_lo(a)\n                                    + overhead_szB_hi(a),\n                             req_alignB );\n   align_b = get_payload_block(a, align_p);\n\n   /* The block size of the fragment we will create.  This must be big\n      enough to actually create a fragment. */\n   frag_bszB = align_b - base_b;\n\n   vg_assert(frag_bszB >= min_useful_bszB(a));\n\n   /* The actual payload size of the block we are going to split. */\n   base_pszB_act = get_pszB(a, base_b);\n\n   /* Create the fragment block, and put it back on the relevant free list. */\n   mkFreeBlock ( a, base_b, frag_bszB,\n                 pszB_to_listNo(bszB_to_pszB(a, frag_bszB)) );\n   if (VG_(clo_profile_heap))\n      set_cc(base_b, \"admin.frag-memalign-1\");\n\n   /* Create the aligned block. */\n   mkInuseBlock ( a, align_b,\n                  base_p + base_pszB_act \n                         + overhead_szB_hi(a) - (UByte*)align_b );\n   if (VG_(clo_profile_heap))\n      set_cc(align_b, cc);\n\n   /* Final sanity checks. */\n   vg_assert( is_inuse_block(get_payload_block(a, align_p)) );\n\n   vg_assert(req_pszB <= get_pszB(a, get_payload_block(a, align_p)));\n\n   a->stats__bytes_on_loan += get_pszB(a, get_payload_block(a, align_p));\n   if (a->stats__bytes_on_loan > a->stats__bytes_on_loan_max) {\n      a->stats__bytes_on_loan_max = a->stats__bytes_on_loan;\n   }\n   /* a->stats__tot_blocks, a->stats__tot_bytes, a->stats__nsearches\n      are updated by the call to VG_(arena_malloc) just a few lines\n      above.  So we don't need to update them here. */\n\n#  ifdef DEBUG_MALLOC\n   sanity_check_malloc_arena(aid);\n#  endif\n\n   vg_assert( (((Addr)align_p) % req_alignB) == 0 );\n\n   INNER_REQUEST(VALGRIND_MALLOCLIKE_BLOCK(align_p,\n                                           req_pszB, a->rz_szB, False));\n\n   return align_p;\n}",
    "filename": "coregrind/m_mallocfree.c"
  },
  "valgrind_12854-12855": {
    "buggy": "static void usage_NORETURN ( Bool debug_help )\n{\n   /* 'usage1' contains a %s \n      - for the name of the GDB executable\n      - for the name of vgdb's path prefix\n      which must be supplied when they are VG_(printf)'d. */\n   Char* usage1 = \n\"usage: valgrind [options] prog-and-args\\n\"\n\"\\n\"\n\"  tool-selection option, with default in [ ]:\\n\"\n\"    --tool=<name>             use the Valgrind tool named <name> [memcheck]\\n\"\n\"\\n\"\n\"  basic user options for all Valgrind tools, with defaults in [ ]:\\n\"\n\"    -h --help                 show this message\\n\"\n\"    --help-debug              show this message, plus debugging options\\n\"\n\"    --version                 show version\\n\"\n\"    -q --quiet                run silently; only print error msgs\\n\"\n\"    -v --verbose              be more verbose -- show misc extra info\\n\"\n\"    --trace-children=no|yes   Valgrind-ise child processes (follow execve)? [no]\\n\"\n\"    --trace-children-skip=patt1,patt2,...    specifies a list of executables\\n\"\n\"                              that --trace-children=yes should not trace into\\n\"\n\"    --trace-children-skip-by-arg=patt1,patt2,...   same as --trace-children-skip=\\n\"\n\"                              but check the argv[] entries for children, rather\\n\"\n\"                              than the exe name, to make a follow/no-follow decision\\n\"\n\"    --child-silent-after-fork=no|yes omit child output between fork & exec? [no]\\n\"\n\"    --vgdb=no|yes|full        activate gdbserver? [yes]\\n\"\n\"                              full is slower but provides precise watchpoint/step\\n\"\n\"    --vgdb-error=<number>     invoke gdbserver after <number> errors [%d]\\n\"\n\"                              to get started quickly, use --vgdb-error=0\\n\"\n\"                              and follow the on-screen directions\\n\"\n\"    --track-fds=no|yes        track open file descriptors? [no]\\n\"\n\"    --time-stamp=no|yes       add timestamps to log messages? [no]\\n\"\n\"    --log-fd=<number>         log messages to file descriptor [2=stderr]\\n\"\n\"    --log-file=<file>         log messages to <file>\\n\"\n\"    --log-socket=ipaddr:port  log messages to socket ipaddr:port\\n\"\n\"\\n\"\n\"  user options for Valgrind tools that report errors:\\n\"\n\"    --xml=yes                 emit error output in XML (some tools only)\\n\"\n\"    --xml-fd=<number>         XML output to file descriptor\\n\"\n\"    --xml-file=<file>         XML output to <file>\\n\"\n\"    --xml-socket=ipaddr:port  XML output to socket ipaddr:port\\n\"\n\"    --xml-user-comment=STR    copy STR verbatim into XML output\\n\"\n\"    --demangle=no|yes         automatically demangle C++ names? [yes]\\n\"\n\"    --num-callers=<number>    show <number> callers in stack traces [12]\\n\"\n\"    --error-limit=no|yes      stop showing new errors if too many? [yes]\\n\"\n\"    --error-exitcode=<number> exit code to return if errors found [0=disable]\\n\"\n\"    --show-below-main=no|yes  continue stack traces below main() [no]\\n\"\n\"    --suppressions=<filename> suppress errors described in <filename>\\n\"\n\"    --gen-suppressions=no|yes|all    print suppressions for errors? [no]\\n\"\n\"    --db-attach=no|yes        start debugger when errors detected? [no]\\n\"\n\"    --db-command=<command>    command to start debugger [%s -nw %%f %%p]\\n\"\n\"    --input-fd=<number>       file descriptor for input [0=stdin]\\n\"\n\"    --dsymutil=no|yes         run dsymutil on Mac OS X when helpful? [no]\\n\"\n\"    --max-stackframe=<number> assume stack switch for SP changes larger\\n\"\n\"                              than <number> bytes [2000000]\\n\"\n\"    --main-stacksize=<number> set size of main thread's stack (in bytes)\\n\"\n\"                              [use current 'ulimit' value]\\n\"\n\"\\n\"\n\"  user options for Valgrind tools that replace malloc:\\n\"\n\"    --alignment=<number>      set minimum alignment of heap allocations [%s]\\n\"\n\"    --redzone-size=<number>   set minimum size of redzones added before/after\\n\"\n\"                              heap blocks (in bytes). [%s]\\n\"\n\"\\n\"\n\"  uncommon user options for all Valgrind tools:\\n\"\n\"    --fullpath-after=         (with nothing after the '=')\\n\"\n\"                              show full source paths in call stacks\\n\"\n\"    --fullpath-after=string   like --fullpath-after=, but only show the\\n\"\n\"                              part of the path after 'string'.  Allows removal\\n\"\n\"                              of path prefixes.  Use this flag multiple times\\n\"\n\"                              to specify a set of prefixes to remove.\\n\"\n\"    --smc-check=none|stack|all|all-non-file [stack]\\n\"\n\"                              checks for self-modifying code: none, only for\\n\"\n\"                              code found in stacks, for all code, or for all\\n\"\n\"                              code except that from file-backed mappings\\n\"\n\"    --read-var-info=yes|no    read debug info on stack and global variables\\n\"\n\"                              and use it to print better error messages in\\n\"\n\"                              tools that make use of it (Memcheck, Helgrind,\\n\"\n\"                              DRD) [no]\\n\"\n\"    --vgdb-poll=<number>      gdbserver poll max every <number> basic blocks [%d] \\n\"\n\"    --vgdb-shadow-registers=no|yes   let gdb see the shadow registers [no]\\n\"\n\"    --vgdb-prefix=<prefix>    prefix for vgdb FIFOs [%s]\\n\"\n\"    --run-libc-freeres=no|yes free up glibc memory at exit on Linux? [yes]\\n\"\n\"    --sim-hints=hint1,hint2,...  known hints:\\n\"\n\"                                 lax-ioctls, enable-outer, fuse-compatible [none]\\n\"\n\"    --fair-sched=no|yes|try   schedule threads fairly on multicore systems [no]\\n\"\n\"    --kernel-variant=variant1,variant2,...  known variants: bproc [none]\\n\"\n\"                              handle non-standard kernel variants\\n\"\n\"    --show-emwarns=no|yes     show warnings about emulation limits? [no]\\n\"\n\"    --require-text-symbol=:sonamepattern:symbolpattern    abort run if the\\n\"\n\"                              stated shared object doesn't have the stated\\n\"\n\"                              text symbol.  Patterns can contain ? and *.\\n\"\n\"    --soname-synonyms=syn1=pattern1,syn2=pattern2,... synonym soname\\n\"\n\"                              patterns for some Valgrind wrapping\\n\"\n\"                              or replacement (such as malloc replacement)\\n\"\n\"\\n\";\n\n   Char* usage2 = \n\"\\n\"\n\"  debugging options for all Valgrind tools:\\n\"\n\"    -d                        show verbose debugging output\\n\"\n\"    --stats=no|yes            show tool and core statistics [no]\\n\"\n\"    --sanity-level=<number>   level of sanity checking to do [1]\\n\"\n\"    --trace-flags=<XXXXXXXX>   show generated code? (X = 0|1) [00000000]\\n\"\n\"    --profile-flags=<XXXXXXXX> ditto, but for profiling (X = 0|1) [00000000]\\n\"\n\"    --trace-notbelow=<number> only show BBs above <number> [999999999]\\n\"\n\"    --trace-notabove=<number> only show BBs below <number> [0]\\n\"\n\"    --trace-syscalls=no|yes   show all system calls? [no]\\n\"\n\"    --trace-signals=no|yes    show signal handling details? [no]\\n\"\n\"    --trace-symtab=no|yes     show symbol table details? [no]\\n\"\n\"    --trace-symtab-patt=<patt> limit debuginfo tracing to obj name <patt>\\n\"\n\"    --trace-cfi=no|yes        show call-frame-info details? [no]\\n\"\n\"    --debug-dump=syms         mimic /usr/bin/readelf --syms\\n\"\n\"    --debug-dump=line         mimic /usr/bin/readelf --debug-dump=line\\n\"\n\"    --debug-dump=frames       mimic /usr/bin/readelf --debug-dump=frames\\n\"\n\"    --trace-redir=no|yes      show redirection details? [no]\\n\"\n\"    --trace-sched=no|yes      show thread scheduler details? [no]\\n\"\n\"    --profile-heap=no|yes     profile Valgrind's own space use\\n\"\n\"    --core-redzone=<number>   set minimum size of redzones added before/after\\n\"\n\"                              heap blocks allocated for Valgrind internal use (in bytes) [4]\\n\"\n\"    --wait-for-gdb=yes|no     pause on startup to wait for gdb attach\\n\"\n\"    --sym-offsets=yes|no      show syms in form 'name+offset' ? [no]\\n\"\n\"    --command-line-only=no|yes  only use command line options [no]\\n\"\n\"\\n\"\n\"  Vex options for all Valgrind tools:\\n\"\n\"    --vex-iropt-verbosity=<0..9>           [0]\\n\"\n\"    --vex-iropt-level=<0..2>               [2]\\n\"\n\"    --vex-iropt-register-updates=unwindregs-at-mem-access\\n\"\n\"                                |allregs-at-mem-access\\n\"\n\"                                |allregs-at-each-insn  [unwindregs-at-mem-access]\\n\"\n\"    --vex-iropt-unroll-thresh=<0..400>     [120]\\n\"\n\"    --vex-guest-max-insns=<1..100>         [50]\\n\"\n\"    --vex-guest-chase-thresh=<0..99>       [10]\\n\"\n\"    --vex-guest-chase-cond=no|yes          [no]\\n\"\n\"    --trace-flags and --profile-flags values (omit the middle space):\\n\"\n\"       1000 0000   show conversion into IR\\n\"\n\"       0100 0000   show after initial opt\\n\"\n\"       0010 0000   show after instrumentation\\n\"\n\"       0001 0000   show after second opt\\n\"\n\"       0000 1000   show after tree building\\n\"\n\"       0000 0100   show selecting insns\\n\"\n\"       0000 0010   show after reg-alloc\\n\"\n\"       0000 0001   show final assembly\\n\"\n\"      (Nb: you need --trace-notbelow and/or --trace-notabove with --trace-flags for full details)\\n\"\n\"\\n\"\n\"  debugging options for Valgrind tools that report errors\\n\"\n\"    --dump-error=<number>     show translation for basic block associated\\n\"\n\"                              with <number>'th error context [0=show none]\\n\"\n\"\\n\"\n\"  debugging options for Valgrind tools that replace malloc:\\n\"\n\"    --trace-malloc=no|yes     show client malloc details? [no]\\n\"\n\"\\n\";\n\n   Char* usage3 =\n\"\\n\"\n\"  Extra options read from ~/.valgrindrc, $VALGRIND_OPTS, ./.valgrindrc\\n\"\n\"\\n\"\n\"  %s is %s\\n\"\n\"  Valgrind is Copyright (C) 2000-2012, and GNU GPL'd, by Julian Seward et al.\\n\"\n\"  LibVEX is Copyright (C) 2004-2012, and GNU GPL'd, by OpenWorks LLP et al.\\n\"\n\"\\n\"\n\"  Bug reports, feedback, admiration, abuse, etc, to: %s.\\n\"\n\"\\n\";\n\n   Char* gdb_path = GDB_PATH;\n   Char default_alignment[30];\n   Char default_redzone_size[30];\n\n   // Ensure the message goes to stdout\n   VG_(log_output_sink).fd = 1;\n   VG_(log_output_sink).is_socket = False;\n\n   if (VG_(needs).malloc_replacement) {\n      VG_(sprintf)(default_alignment,    \"%d\",  VG_MIN_MALLOC_SZB);\n      VG_(sprintf)(default_redzone_size, \"%lu\", VG_(tdict).tool_client_redzone_szB);\n   } else {\n      VG_(strcpy)(default_alignment,    \"not used by this tool\");\n      VG_(strcpy)(default_redzone_size, \"not used by this tool\");\n   }\n   /* 'usage1' a type as described after each arg. */\n   VG_(printf)(usage1, \n               VG_(clo_vgdb_error)        /* int */,\n               gdb_path                   /* char* */,\n               default_alignment          /* char* */,\n               default_redzone_size       /* char* */,\n               VG_(clo_vgdb_poll)         /* int */,\n               VG_(vgdb_prefix_default)() /* char* */\n               ); \n   if (VG_(details).name) {\n      VG_(printf)(\"  user options for %s:\\n\", VG_(details).name);\n      if (VG_(needs).command_line_options)\n\t VG_TDICT_CALL(tool_print_usage);\n      else\n\t VG_(printf)(\"    (none)\\n\");\n   }\n   if (debug_help) {\n      VG_(printf)(\"%s\", usage2);\n\n      if (VG_(details).name) {\n         VG_(printf)(\"  debugging options for %s:\\n\", VG_(details).name);\n      \n         if (VG_(needs).command_line_options)\n            VG_TDICT_CALL(tool_print_debug_usage);\n         else\n            VG_(printf)(\"    (none)\\n\");\n      }\n   }\n   VG_(printf)(usage3, VG_(details).name, VG_(details).copyright_author,\n               VG_BUGS_TO);\n   VG_(exit)(0);\n}",
    "start": 105,
    "end": 314,
    "fix": "static void usage_NORETURN ( Bool debug_help )\n{\n   /* 'usage1' contains a %s \n      - for the name of the GDB executable\n      - for the name of vgdb's path prefix\n      which must be supplied when they are VG_(printf)'d. */\n   Char* usage1 = \n\"usage: valgrind [options] prog-and-args\\n\"\n\"\\n\"\n\"  tool-selection option, with default in [ ]:\\n\"\n\"    --tool=<name>             use the Valgrind tool named <name> [memcheck]\\n\"\n\"\\n\"\n\"  basic user options for all Valgrind tools, with defaults in [ ]:\\n\"\n\"    -h --help                 show this message\\n\"\n\"    --help-debug              show this message, plus debugging options\\n\"\n\"    --version                 show version\\n\"\n\"    -q --quiet                run silently; only print error msgs\\n\"\n\"    -v --verbose              be more verbose -- show misc extra info\\n\"\n\"    --trace-children=no|yes   Valgrind-ise child processes (follow execve)? [no]\\n\"\n\"    --trace-children-skip=patt1,patt2,...    specifies a list of executables\\n\"\n\"                              that --trace-children=yes should not trace into\\n\"\n\"    --trace-children-skip-by-arg=patt1,patt2,...   same as --trace-children-skip=\\n\"\n\"                              but check the argv[] entries for children, rather\\n\"\n\"                              than the exe name, to make a follow/no-follow decision\\n\"\n\"    --child-silent-after-fork=no|yes omit child output between fork & exec? [no]\\n\"\n\"    --vgdb=no|yes|full        activate gdbserver? [yes]\\n\"\n\"                              full is slower but provides precise watchpoint/step\\n\"\n\"    --vgdb-error=<number>     invoke gdbserver after <number> errors [%d]\\n\"\n\"                              to get started quickly, use --vgdb-error=0\\n\"\n\"                              and follow the on-screen directions\\n\"\n\"    --track-fds=no|yes        track open file descriptors? [no]\\n\"\n\"    --time-stamp=no|yes       add timestamps to log messages? [no]\\n\"\n\"    --log-fd=<number>         log messages to file descriptor [2=stderr]\\n\"\n\"    --log-file=<file>         log messages to <file>\\n\"\n\"    --log-socket=ipaddr:port  log messages to socket ipaddr:port\\n\"\n\"\\n\"\n\"  user options for Valgrind tools that report errors:\\n\"\n\"    --xml=yes                 emit error output in XML (some tools only)\\n\"\n\"    --xml-fd=<number>         XML output to file descriptor\\n\"\n\"    --xml-file=<file>         XML output to <file>\\n\"\n\"    --xml-socket=ipaddr:port  XML output to socket ipaddr:port\\n\"\n\"    --xml-user-comment=STR    copy STR verbatim into XML output\\n\"\n\"    --demangle=no|yes         automatically demangle C++ names? [yes]\\n\"\n\"    --num-callers=<number>    show <number> callers in stack traces [12]\\n\"\n\"    --error-limit=no|yes      stop showing new errors if too many? [yes]\\n\"\n\"    --error-exitcode=<number> exit code to return if errors found [0=disable]\\n\"\n\"    --show-below-main=no|yes  continue stack traces below main() [no]\\n\"\n\"    --suppressions=<filename> suppress errors described in <filename>\\n\"\n\"    --gen-suppressions=no|yes|all    print suppressions for errors? [no]\\n\"\n\"    --db-attach=no|yes        start debugger when errors detected? [no]\\n\"\n\"    --db-command=<command>    command to start debugger [%s -nw %%f %%p]\\n\"\n\"    --input-fd=<number>       file descriptor for input [0=stdin]\\n\"\n\"    --dsymutil=no|yes         run dsymutil on Mac OS X when helpful? [no]\\n\"\n\"    --max-stackframe=<number> assume stack switch for SP changes larger\\n\"\n\"                              than <number> bytes [2000000]\\n\"\n\"    --main-stacksize=<number> set size of main thread's stack (in bytes)\\n\"\n\"                              [use current 'ulimit' value]\\n\"\n\"\\n\"\n\"  user options for Valgrind tools that replace malloc:\\n\"\n\"    --alignment=<number>      set minimum alignment of heap allocations [%s]\\n\"\n\"    --redzone-size=<number>   set minimum size of redzones added before/after\\n\"\n\"                              heap blocks (in bytes). [%s]\\n\"\n\"\\n\"\n\"  uncommon user options for all Valgrind tools:\\n\"\n\"    --fullpath-after=         (with nothing after the '=')\\n\"\n\"                              show full source paths in call stacks\\n\"\n\"    --fullpath-after=string   like --fullpath-after=, but only show the\\n\"\n\"                              part of the path after 'string'.  Allows removal\\n\"\n\"                              of path prefixes.  Use this flag multiple times\\n\"\n\"                              to specify a set of prefixes to remove.\\n\"\n\"    --smc-check=none|stack|all|all-non-file [stack]\\n\"\n\"                              checks for self-modifying code: none, only for\\n\"\n\"                              code found in stacks, for all code, or for all\\n\"\n\"                              code except that from file-backed mappings\\n\"\n\"    --read-var-info=yes|no    read debug info on stack and global variables\\n\"\n\"                              and use it to print better error messages in\\n\"\n\"                              tools that make use of it (Memcheck, Helgrind,\\n\"\n\"                              DRD) [no]\\n\"\n\"    --vgdb-poll=<number>      gdbserver poll max every <number> basic blocks [%d] \\n\"\n\"    --vgdb-shadow-registers=no|yes   let gdb see the shadow registers [no]\\n\"\n\"    --vgdb-prefix=<prefix>    prefix for vgdb FIFOs [%s]\\n\"\n\"    --run-libc-freeres=no|yes free up glibc memory at exit on Linux? [yes]\\n\"\n\"    --sim-hints=hint1,hint2,...  known hints:\\n\"\n\"                                 lax-ioctls, enable-outer, fuse-compatible [none]\\n\"\n\"    --fair-sched=no|yes|try   schedule threads fairly on multicore systems [no]\\n\"\n\"    --kernel-variant=variant1,variant2,...  known variants: bproc [none]\\n\"\n\"                              handle non-standard kernel variants\\n\"\n\"    --show-emwarns=no|yes     show warnings about emulation limits? [no]\\n\"\n\"    --require-text-symbol=:sonamepattern:symbolpattern    abort run if the\\n\"\n\"                              stated shared object doesn't have the stated\\n\"\n\"                              text symbol.  Patterns can contain ? and *.\\n\"\n\"    --soname-synonyms=syn1=pattern1,syn2=pattern2,... synonym soname\\n\"\n\"              specify patterns for function wrapping or replacement.\\n\"\n\"              To use a non-libc malloc library that is\\n\"\n\"                  in the main exe:  --soname-synonyms=somalloc=NONE\\n\"\n\"                  in libxyzzy.so:   --soname-synonyms=somalloc=libxyzzy.so\\n\"\n\"\\n\";\n\n   Char* usage2 = \n\"\\n\"\n\"  debugging options for all Valgrind tools:\\n\"\n\"    -d                        show verbose debugging output\\n\"\n\"    --stats=no|yes            show tool and core statistics [no]\\n\"\n\"    --sanity-level=<number>   level of sanity checking to do [1]\\n\"\n\"    --trace-flags=<XXXXXXXX>   show generated code? (X = 0|1) [00000000]\\n\"\n\"    --profile-flags=<XXXXXXXX> ditto, but for profiling (X = 0|1) [00000000]\\n\"\n\"    --trace-notbelow=<number> only show BBs above <number> [999999999]\\n\"\n\"    --trace-notabove=<number> only show BBs below <number> [0]\\n\"\n\"    --trace-syscalls=no|yes   show all system calls? [no]\\n\"\n\"    --trace-signals=no|yes    show signal handling details? [no]\\n\"\n\"    --trace-symtab=no|yes     show symbol table details? [no]\\n\"\n\"    --trace-symtab-patt=<patt> limit debuginfo tracing to obj name <patt>\\n\"\n\"    --trace-cfi=no|yes        show call-frame-info details? [no]\\n\"\n\"    --debug-dump=syms         mimic /usr/bin/readelf --syms\\n\"\n\"    --debug-dump=line         mimic /usr/bin/readelf --debug-dump=line\\n\"\n\"    --debug-dump=frames       mimic /usr/bin/readelf --debug-dump=frames\\n\"\n\"    --trace-redir=no|yes      show redirection details? [no]\\n\"\n\"    --trace-sched=no|yes      show thread scheduler details? [no]\\n\"\n\"    --profile-heap=no|yes     profile Valgrind's own space use\\n\"\n\"    --core-redzone=<number>   set minimum size of redzones added before/after\\n\"\n\"                              heap blocks allocated for Valgrind internal use (in bytes) [4]\\n\"\n\"    --wait-for-gdb=yes|no     pause on startup to wait for gdb attach\\n\"\n\"    --sym-offsets=yes|no      show syms in form 'name+offset' ? [no]\\n\"\n\"    --command-line-only=no|yes  only use command line options [no]\\n\"\n\"\\n\"\n\"  Vex options for all Valgrind tools:\\n\"\n\"    --vex-iropt-verbosity=<0..9>           [0]\\n\"\n\"    --vex-iropt-level=<0..2>               [2]\\n\"\n\"    --vex-iropt-register-updates=unwindregs-at-mem-access\\n\"\n\"                                |allregs-at-mem-access\\n\"\n\"                                |allregs-at-each-insn  [unwindregs-at-mem-access]\\n\"\n\"    --vex-iropt-unroll-thresh=<0..400>     [120]\\n\"\n\"    --vex-guest-max-insns=<1..100>         [50]\\n\"\n\"    --vex-guest-chase-thresh=<0..99>       [10]\\n\"\n\"    --vex-guest-chase-cond=no|yes          [no]\\n\"\n\"    --trace-flags and --profile-flags values (omit the middle space):\\n\"\n\"       1000 0000   show conversion into IR\\n\"\n\"       0100 0000   show after initial opt\\n\"\n\"       0010 0000   show after instrumentation\\n\"\n\"       0001 0000   show after second opt\\n\"\n\"       0000 1000   show after tree building\\n\"\n\"       0000 0100   show selecting insns\\n\"\n\"       0000 0010   show after reg-alloc\\n\"\n\"       0000 0001   show final assembly\\n\"\n\"      (Nb: you need --trace-notbelow and/or --trace-notabove with --trace-flags for full details)\\n\"\n\"\\n\"\n\"  debugging options for Valgrind tools that report errors\\n\"\n\"    --dump-error=<number>     show translation for basic block associated\\n\"\n\"                              with <number>'th error context [0=show none]\\n\"\n\"\\n\"\n\"  debugging options for Valgrind tools that replace malloc:\\n\"\n\"    --trace-malloc=no|yes     show client malloc details? [no]\\n\"\n\"\\n\";\n\n   Char* usage3 =\n\"\\n\"\n\"  Extra options read from ~/.valgrindrc, $VALGRIND_OPTS, ./.valgrindrc\\n\"\n\"\\n\"\n\"  %s is %s\\n\"\n\"  Valgrind is Copyright (C) 2000-2012, and GNU GPL'd, by Julian Seward et al.\\n\"\n\"  LibVEX is Copyright (C) 2004-2012, and GNU GPL'd, by OpenWorks LLP et al.\\n\"\n\"\\n\"\n\"  Bug reports, feedback, admiration, abuse, etc, to: %s.\\n\"\n\"\\n\";\n\n   Char* gdb_path = GDB_PATH;\n   Char default_alignment[30];\n   Char default_redzone_size[30];\n\n   // Ensure the message goes to stdout\n   VG_(log_output_sink).fd = 1;\n   VG_(log_output_sink).is_socket = False;\n\n   if (VG_(needs).malloc_replacement) {\n      VG_(sprintf)(default_alignment,    \"%d\",  VG_MIN_MALLOC_SZB);\n      VG_(sprintf)(default_redzone_size, \"%lu\", VG_(tdict).tool_client_redzone_szB);\n   } else {\n      VG_(strcpy)(default_alignment,    \"not used by this tool\");\n      VG_(strcpy)(default_redzone_size, \"not used by this tool\");\n   }\n   /* 'usage1' a type as described after each arg. */\n   VG_(printf)(usage1, \n               VG_(clo_vgdb_error)        /* int */,\n               gdb_path                   /* char* */,\n               default_alignment          /* char* */,\n               default_redzone_size       /* char* */,\n               VG_(clo_vgdb_poll)         /* int */,\n               VG_(vgdb_prefix_default)() /* char* */\n               ); \n   if (VG_(details).name) {\n      VG_(printf)(\"  user options for %s:\\n\", VG_(details).name);\n      if (VG_(needs).command_line_options)\n\t VG_TDICT_CALL(tool_print_usage);\n      else\n\t VG_(printf)(\"    (none)\\n\");\n   }\n   if (debug_help) {\n      VG_(printf)(\"%s\", usage2);\n\n      if (VG_(details).name) {\n         VG_(printf)(\"  debugging options for %s:\\n\", VG_(details).name);\n      \n         if (VG_(needs).command_line_options)\n            VG_TDICT_CALL(tool_print_debug_usage);\n         else\n            VG_(printf)(\"    (none)\\n\");\n      }\n   }\n   VG_(printf)(usage3, VG_(details).name, VG_(details).copyright_author,\n               VG_BUGS_TO);\n   VG_(exit)(0);\n}",
    "filename": "coregrind/m_main.c"
  },
  "wireshark_37112-37111": {
    "buggy": "free_all_reassembled_fragments(gpointer key_arg, gpointer value,\n\t\t\t\t   gpointer user_data _U_)\n{\n\tfragment_data *fd_head, *tmp_fd;\n\treassembled_key *key = (reassembled_key *)key_arg;\n\n\tfor (fd_head = value; fd_head != NULL; fd_head = tmp_fd) {\n\t\ttmp_fd=fd_head->next;\n\t\tif(fd_head->data && !(fd_head->flags&FD_NOT_MALLOCED)) {\n\t\t\tg_free(fd_head->data);\n\n\t\t\t/*\n\t\t\t * A reassembled packet is inserted into the\n\t\t\t * hash table once for every frame that made\n\t\t\t * up the reassembled packet; clear the data\n\t\t\t * pointer so that we only free the data the\n\t\t\t * first time we see it.\n\t\t\t */\n\t\t\tfd_head->data = NULL;\n\t\t}\n#if GLIB_CHECK_VERSION(2,10,0)\n\t\tif(key->frame == fd_head->reassembled_in){\n\t\t\tg_slice_free(fragment_data, fd_head);\n\t\t}\n#endif\n\t}\n\n\treturn TRUE;\n}",
    "start": 288,
    "end": 316,
    "fix": "free_all_reassembled_fragments(gpointer key_arg _U_, gpointer value,\n\t\t\t\t   gpointer user_data _U_)\n{\n\tfragment_data *fd_head;\n\n\tfor (fd_head = value; fd_head != NULL; fd_head = fd_head->next) {\n\t\tif(fd_head->data && !(fd_head->flags&FD_NOT_MALLOCED)) {\n\t\t\tg_free(fd_head->data);\n\n\t\t\t/*\n\t\t\t * A reassembled packet is inserted into the\n\t\t\t * hash table once for every frame that made\n\t\t\t * up the reassembled packet; clear the data\n\t\t\t * pointer so that we only free the data the\n\t\t\t * first time we see it.\n\t\t\t */\n\t\t\tfd_head->data = NULL;\n\t\t}\n\t}\n\n\treturn TRUE;\n}",
    "filename": "epan/reassemble.c"
  },
  "wireshark_37122-37123": {
    "buggy": "free_all_reassembled_fragments(gpointer key_arg, gpointer value,\n\t\t\t\t   gpointer user_data _U_)\n{\n\tfragment_data *fd_head, *tmp_fd;\n\treassembled_key *key = (reassembled_key *)key_arg;\n\n\tfor (fd_head = value; fd_head != NULL; fd_head = tmp_fd) {\n\t\ttmp_fd=fd_head->next;\n\t\tif(fd_head->data && !(fd_head->flags&FD_NOT_MALLOCED)) {\n\t\t\tg_free(fd_head->data);\n\n\t\t\t/*\n\t\t\t * A reassembled packet is inserted into the\n\t\t\t * hash table once for every frame that made\n\t\t\t * up the reassembled packet; clear the data\n\t\t\t * pointer so that we only free the data the\n\t\t\t * first time we see it.\n\t\t\t */\n\t\t\tfd_head->data = NULL;\n\t\t}\n#if GLIB_CHECK_VERSION(2,10,0)\n\t\tif(key->frame == fd_head->reassembled_in){\n\t\t\tg_slice_free(fragment_data, fd_head);\n\t\t}\n#endif\n\t}\n\n\treturn TRUE;\n}",
    "start": 288,
    "end": 316,
    "fix": "free_all_reassembled_fragments(gpointer key_arg _U_, gpointer value,\n\t\t\t\t   gpointer user_data _U_)\n{\n\tfragment_data *fd_head;\n\n\tfor (fd_head = value; fd_head != NULL; fd_head = fd_head->next) {\n\t\tif(fd_head->data && !(fd_head->flags&FD_NOT_MALLOCED)) {\n\t\t\tg_free(fd_head->data);\n\n\t\t\t/*\n\t\t\t * A reassembled packet is inserted into the\n\t\t\t * hash table once for every frame that made\n\t\t\t * up the reassembled packet; clear the data\n\t\t\t * pointer so that we only free the data the\n\t\t\t * first time we see it.\n\t\t\t */\n\t\t\tfd_head->data = NULL;\n\t\t}\n\t}\n\n\treturn TRUE;\n}",
    "filename": "epan/reassemble.c"
  }
}